{
	"id": "c187222fa44357140708e1d00605ecfb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"MasterGrand.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface GrandToken is IERC20 {\n    function mint(address _to, uint256 _amount) external;\n}\n\n\n// MasterGrand is the master of Grand Token.\n\ncontract MasterGrand is Ownable {\n    using SafeERC20 for IERC20;\n    using SafeERC20 for GrandToken;\n\n    // Info of each user.\n    struct UserInfo {\n        uint256 amount; // How many LP tokens the user has provided.\n        uint256 rewardDebt; // Reward debt. See explanation below.\n    }\n\n    // Info of each pool.\n    struct PoolInfo {\n        IERC20 lpToken; // Address of LP token contract.\n        uint256 allocPoint; // How many allocation points assigned to this pool. Grand to distribute per block.\n        uint256 lastRewardBlock; // Last block number that Grand distribution occurs.\n        uint256 accGrandPerShare; // Accumulated Grand per share, times 1e12. See below.\n    }\n\n    // The Grand TOKEN!\n    GrandToken public Grand;\n\n    address public collector;\n    // Block number when bonus Grand period ends.\n    uint256 public bonusEndBlock;\n    // Grand tokens created per block.\n    uint256 public GrandPerBlock;\n    // Bonus muliplier for early Grand makers.\n    uint256 public constant BONUS_MULTIPLIER = 3;\n    uint256 public constant GRAND_CAP = 4203333333333333333333333;\n    uint256 public grandMinted;\n    uint256 public totalBoxes = 0;\n\n    // Info of each pool.\n    PoolInfo[] public poolInfo;\n    // Info of each Lockbox.\n\n    // Info of each user that stakes LP tokens.\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\n    uint256 public totalAllocPoint = 0;\n    // The block number when Grand mining starts.\n    uint256 public startBlock;\n    uint256 public startTime;\n\n    event Deposit(address indexed user, address indexed lpAddress, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, address indexed lpAddress, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(\n        address indexed user,\n        uint256 indexed pid,\n        uint256 amount\n    );\n\n    constructor(\n        GrandToken _Grand,\n        uint256 _GrandPerBlock,\n        uint256 _bonusEndBlock\n    ) Ownable(msg.sender) {\n        Grand = _Grand;\n        GrandPerBlock = _GrandPerBlock;\n        bonusEndBlock = _bonusEndBlock;\n        startBlock = block.number;\n        startTime = block.timestamp;\n    }\n\n    function poolLength() external view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    // Add a new lp to the pool. Can only be called by the owner.\n    // DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n    function addPool(\n        uint256 _allocPoint,\n        IERC20 _lpToken,\n        bool _withUpdate\n    ) external onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n\n        totalAllocPoint = totalAllocPoint + _allocPoint;\n        poolInfo.push(\n            PoolInfo({\n                lpToken: _lpToken,\n                allocPoint: _allocPoint,\n                lastRewardBlock: block.number,\n                accGrandPerShare: 0\n            })\n        );\n    }\n\n    // Update the given pool's Grand allocation point. Can only be called by the owner.\n    function setPool(\n        uint256 _pid,\n        uint256 _allocPoint,\n        bool _withUpdate\n    ) external onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        totalAllocPoint =\n            totalAllocPoint -\n            poolInfo[_pid].allocPoint +\n            _allocPoint;\n        poolInfo[_pid].allocPoint = _allocPoint;\n    }\n\n    // Return reward multiplier over the given _from to _to block.\n    function getMultiplier(uint256 _from, uint256 _to)\n        public\n        view\n        returns (uint256)\n    {\n        if (_to <= bonusEndBlock) {\n            return (_to - _from) * BONUS_MULTIPLIER;\n        } else if (_from >= bonusEndBlock) {\n            return _to - _from;\n        } else {\n            return\n                (bonusEndBlock - _from) *\n                BONUS_MULTIPLIER +\n                (_to - bonusEndBlock);\n        }\n    }\n\n    // Update reward vairables for all pools. Be careful of gas spending!\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            updatePool(pid);\n        }\n    }\n\n    // Update reward variables of the given pool to be up-to-date.\n    function updatePool(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        if (block.number <= pool.lastRewardBlock) {\n            return;\n        }\n\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (lpSupply == 0) {\n            pool.lastRewardBlock = block.number;\n            return;\n        }\n\n        uint256 GrandReward = (getMultiplier(\n            pool.lastRewardBlock,\n            block.number\n        ) *\n            GrandPerBlock *\n            pool.allocPoint) / totalAllocPoint;\n\n        pool.accGrandPerShare =\n            pool.accGrandPerShare +\n            ((GrandReward * 1e12) / lpSupply);\n        pool.lastRewardBlock = block.number;\n\n        if (grandMinted <= GRAND_CAP) {\n            grandMinted = grandMinted + GrandReward;\n            Grand.mint(address(this), GrandReward);\n        }\n    }\n\n    // Deposit LP tokens to MasterGrand for Grand allocation.\n    function deposit(uint256 _pid, uint256 _amount) external {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        require(\n            _amount <= pool.lpToken.allowance(msg.sender, address(this)),\n            \"Allowance not high enough\"\n        );\n        pool.lpToken.safeTransferFrom(msg.sender, address(this), _amount);\n\n        updatePool(_pid);\n\n        uint256 pending = (user.amount * pool.accGrandPerShare) /\n            1e12 -\n            user.rewardDebt;\n        user.amount = user.amount + _amount;\n\n        if (block.timestamp > (startTime + 40 days) && pending > 0) {\n            user.rewardDebt = (user.amount * pool.accGrandPerShare) / 1e12;\n            Grand.safeTransfer(msg.sender, pending);\n        } else {\n            user.rewardDebt =\n                (user.amount * pool.accGrandPerShare) /\n                1e12 -\n                pending;\n        }\n\n        emit Deposit(msg.sender, address(pool.lpToken), _pid, _amount);\n    }\n\n    // Withdraw LP tokens from MasterGrand.\n    function withdraw(uint256 _pid, uint256 _amount) external {\n        require(block.timestamp > (startTime + 40 days), \"Too early\");\n\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        require(user.amount >= _amount, \"withdraw: not good\");\n\n        updatePool(_pid);\n\n        uint256 pending = (user.amount * pool.accGrandPerShare) /\n            1e12 -\n            user.rewardDebt;\n\n        user.amount = user.amount - _amount;\n        user.rewardDebt = (user.amount * pool.accGrandPerShare) / 1e12;\n\n        Grand.safeTransfer(msg.sender, pending);\n        pool.lpToken.safeTransfer(msg.sender, _amount);\n\n        emit Withdraw(msg.sender, address(pool.lpToken), _pid, _amount);\n    }\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw(uint256 _pid) external {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        uint256 amount = user.amount;\n        uint256 reward = user.rewardDebt;\n\n        user.amount = 0;\n        user.rewardDebt = 0;\n\n        pool.lpToken.safeTransfer(msg.sender, amount);\n        emit EmergencyWithdraw(msg.sender, _pid, reward);\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 397,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 405,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 407,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 409,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220c4a26ef63ecd82e1fe6dcd1ff2932b23d2b4cf96bb94b234700434c9e4016fb664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c4a26ef63ecd82e1fe6dcd1ff2932b23d2b4cf96bb94b234700434c9e4016fb664736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 LOG2 PUSH15 0xF63ECD82E1FE6DCD1FF2932B23D2B4 0xCF SWAP7 0xBB SWAP5 0xB2 CALLVALUE PUSH17 0x434C9E4016FB664736F6C634300081C00 CALLER ",
							"sourceMap": "750:8692:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c4a26ef63ecd82e1fe6dcd1ff2932b23d2b4cf96bb94b234700434c9e4016fb664736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 LOG2 PUSH15 0xF63ECD82E1FE6DCD1FF2932B23D2B4 0xCF SWAP7 0xBB SWAP5 0xB2 CALLVALUE PUSH17 0x434C9E4016FB664736F6C634300081C00 CALLER ",
							"sourceMap": "750:8692:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c4a26ef63ecd82e1fe6dcd1ff2932b23d2b4cf96bb94b234700434c9e4016fb664736f6c634300081c0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"MasterGrand.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220a1ba19abec14bd546a3e2501b9c50b6356651a7955d9abb2086826dd5f0d18ed64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a1ba19abec14bd546a3e2501b9c50b6356651a7955d9abb2086826dd5f0d18ed64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBA NOT 0xAB 0xEC EQ 0xBD SLOAD PUSH11 0x3E2501B9C50B6356651A79 SSTORE 0xD9 0xAB 0xB2 ADDMOD PUSH9 0x26DD5F0D18ED64736F PUSH13 0x634300081C0033000000000000 ",
							"sourceMap": "233:5799:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a1ba19abec14bd546a3e2501b9c50b6356651a7955d9abb2086826dd5f0d18ed64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBA NOT 0xAB 0xEC EQ 0xBD SLOAD PUSH11 0x3E2501B9C50B6356651A79 SSTORE 0xD9 0xAB 0xB2 ADDMOD PUSH9 0x26DD5F0D18ED64736F PUSH13 0x634300081C0033000000000000 ",
							"sourceMap": "233:5799:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1ba19abec14bd546a3e2501b9c50b6356651a7955d9abb2086826dd5f0d18ed64736f6c634300081c0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"MasterGrand.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC8 0xD0 SWAP3 CODECOPY 0xA5 SWAP12 PUSH14 0x8127DAF01C7A4B484E4331E32378 PUSH17 0x50CC36808EF7DBA49564736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC8 0xD0 SWAP3 CODECOPY 0xA5 SWAP12 PUSH14 0x8127DAF01C7A4B484E4331E32378 PUSH17 0x50CC36808EF7DBA49564736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"MasterGrand.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MasterGrand.sol": {
				"GrandToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MasterGrand.sol\":\"GrandToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"MasterGrand.sol\":{\"keccak256\":\"0x6c3b39de569b9bfcd147e2d5524f8419adaae29095d5570eda9003f4aafec01e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://895efdecd97d2944a2bbfdac2c6efe2572cc7f138ef5227976735f95e9168a76\",\"dweb:/ipfs/QmaTicTp98wjT4dmQjat2FjtSLyu3z8vMBSW6s1Kzx2XoS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MasterGrand": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract GrandToken",
									"name": "_Grand",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_GrandPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_bonusEndBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "lpAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "lpAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BONUS_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GRAND_CAP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Grand",
							"outputs": [
								{
									"internalType": "contract GrandToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GrandPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "addPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bonusEndBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collector",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "grandMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accGrandPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "setPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBoxes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MasterGrand.sol\":377:7910  contract MasterGrand is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"MasterGrand.sol\":1539:1540  0 */\n  0x00\n    /* \"MasterGrand.sol\":1511:1540  uint256 public totalBoxes = 0 */\n  0x06\n  sstore\n    /* \"MasterGrand.sol\":1873:1874  0 */\n  0x00\n    /* \"MasterGrand.sol\":1840:1874  uint256 public totalAllocPoint = 0 */\n  0x09\n  sstore\n    /* \"MasterGrand.sol\":2322:2634  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"MasterGrand.sol\":2439:2449  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"MasterGrand.sol\":2469:2475  _Grand */\n  dup3\n    /* \"MasterGrand.sol\":2461:2466  Grand */\n  0x01\n  0x00\n    /* \"MasterGrand.sol\":2461:2475  Grand = _Grand */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MasterGrand.sol\":2501:2515  _GrandPerBlock */\n  dup2\n    /* \"MasterGrand.sol\":2485:2498  GrandPerBlock */\n  0x04\n    /* \"MasterGrand.sol\":2485:2515  GrandPerBlock = _GrandPerBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"MasterGrand.sol\":2541:2555  _bonusEndBlock */\n  dup1\n    /* \"MasterGrand.sol\":2525:2538  bonusEndBlock */\n  0x03\n    /* \"MasterGrand.sol\":2525:2555  bonusEndBlock = _bonusEndBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"MasterGrand.sol\":2578:2590  block.number */\n  number\n    /* \"MasterGrand.sol\":2565:2575  startBlock */\n  0x0a\n    /* \"MasterGrand.sol\":2565:2590  startBlock = block.number */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"MasterGrand.sol\":2612:2627  block.timestamp */\n  timestamp\n    /* \"MasterGrand.sol\":2600:2609  startTime */\n  0x0b\n    /* \"MasterGrand.sol\":2600:2627  startTime = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"MasterGrand.sol\":2322:2634  constructor(... */\n  pop\n  pop\n  pop\n    /* \"MasterGrand.sol\":377:7910  contract MasterGrand is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_33\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:683   */\ntag_20:\n    /* \"#utility.yul\":624:631   */\n  0x00\n    /* \"#utility.yul\":653:677   */\n  tag_35\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":653:677   */\n  tag_19\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":642:677   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:849   */\ntag_21:\n    /* \"#utility.yul\":781:824   */\n  tag_37\n    /* \"#utility.yul\":818:823   */\n  dup2\n    /* \"#utility.yul\":781:824   */\n  tag_20\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":774:779   */\n  dup2\n    /* \"#utility.yul\":771:825   */\n  eq\n    /* \"#utility.yul\":761:843   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":839:840   */\n  0x00\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":829:841   */\n  revert\n    /* \"#utility.yul\":761:843   */\ntag_38:\n    /* \"#utility.yul\":689:849   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":855:1036   */\ntag_22:\n    /* \"#utility.yul\":931:936   */\n  0x00\n    /* \"#utility.yul\":962:968   */\n  dup2\n    /* \"#utility.yul\":956:969   */\n  mload\n    /* \"#utility.yul\":947:969   */\n  swap1\n  pop\n    /* \"#utility.yul\":978:1030   */\n  tag_40\n    /* \"#utility.yul\":1024:1029   */\n  dup2\n    /* \"#utility.yul\":978:1030   */\n  tag_21\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":855:1036   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1042:1119   */\ntag_23:\n    /* \"#utility.yul\":1079:1086   */\n  0x00\n    /* \"#utility.yul\":1108:1113   */\n  dup2\n    /* \"#utility.yul\":1097:1113   */\n  swap1\n  pop\n    /* \"#utility.yul\":1042:1119   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1125:1247   */\ntag_24:\n    /* \"#utility.yul\":1198:1222   */\n  tag_43\n    /* \"#utility.yul\":1216:1221   */\n  dup2\n    /* \"#utility.yul\":1198:1222   */\n  tag_23\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1191:1196   */\n  dup2\n    /* \"#utility.yul\":1188:1223   */\n  eq\n    /* \"#utility.yul\":1178:1241   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1237:1238   */\n  0x00\n    /* \"#utility.yul\":1234:1235   */\n  0x00\n    /* \"#utility.yul\":1227:1239   */\n  revert\n    /* \"#utility.yul\":1178:1241   */\ntag_44:\n    /* \"#utility.yul\":1125:1247   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1253:1396   */\ntag_25:\n    /* \"#utility.yul\":1310:1315   */\n  0x00\n    /* \"#utility.yul\":1341:1347   */\n  dup2\n    /* \"#utility.yul\":1335:1348   */\n  mload\n    /* \"#utility.yul\":1326:1348   */\n  swap1\n  pop\n    /* \"#utility.yul\":1357:1390   */\n  tag_46\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1357:1390   */\n  tag_24\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1253:1396   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1402:2103   */\ntag_3:\n    /* \"#utility.yul\":1509:1515   */\n  0x00\n    /* \"#utility.yul\":1517:1523   */\n  0x00\n    /* \"#utility.yul\":1525:1531   */\n  0x00\n    /* \"#utility.yul\":1574:1576   */\n  0x60\n    /* \"#utility.yul\":1562:1571   */\n  dup5\n    /* \"#utility.yul\":1553:1560   */\n  dup7\n    /* \"#utility.yul\":1549:1572   */\n  sub\n    /* \"#utility.yul\":1545:1577   */\n  slt\n    /* \"#utility.yul\":1542:1661   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1580:1659   */\n  tag_49\n  tag_16\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1542:1661   */\ntag_48:\n    /* \"#utility.yul\":1700:1701   */\n  0x00\n    /* \"#utility.yul\":1725:1808   */\n  tag_50\n    /* \"#utility.yul\":1800:1807   */\n  dup7\n    /* \"#utility.yul\":1791:1797   */\n  dup3\n    /* \"#utility.yul\":1780:1789   */\n  dup8\n    /* \"#utility.yul\":1776:1798   */\n  add\n    /* \"#utility.yul\":1725:1808   */\n  tag_22\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1715:1808   */\n  swap4\n  pop\n    /* \"#utility.yul\":1671:1818   */\n  pop\n    /* \"#utility.yul\":1857:1859   */\n  0x20\n    /* \"#utility.yul\":1883:1947   */\n  tag_51\n    /* \"#utility.yul\":1939:1946   */\n  dup7\n    /* \"#utility.yul\":1930:1936   */\n  dup3\n    /* \"#utility.yul\":1919:1928   */\n  dup8\n    /* \"#utility.yul\":1915:1937   */\n  add\n    /* \"#utility.yul\":1883:1947   */\n  tag_25\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1873:1947   */\n  swap3\n  pop\n    /* \"#utility.yul\":1828:1957   */\n  pop\n    /* \"#utility.yul\":1996:1998   */\n  0x40\n    /* \"#utility.yul\":2022:2086   */\n  tag_52\n    /* \"#utility.yul\":2078:2085   */\n  dup7\n    /* \"#utility.yul\":2069:2075   */\n  dup3\n    /* \"#utility.yul\":2058:2067   */\n  dup8\n    /* \"#utility.yul\":2054:2076   */\n  add\n    /* \"#utility.yul\":2022:2086   */\n  tag_25\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2012:2086   */\n  swap2\n  pop\n    /* \"#utility.yul\":1967:2096   */\n  pop\n    /* \"#utility.yul\":1402:2103   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2109:2227   */\ntag_26:\n    /* \"#utility.yul\":2196:2220   */\n  tag_54\n    /* \"#utility.yul\":2214:2219   */\n  dup2\n    /* \"#utility.yul\":2196:2220   */\n  tag_19\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2191:2194   */\n  dup3\n    /* \"#utility.yul\":2184:2221   */\n  mstore\n    /* \"#utility.yul\":2109:2227   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2233:2455   */\ntag_9:\n    /* \"#utility.yul\":2326:2330   */\n  0x00\n    /* \"#utility.yul\":2364:2366   */\n  0x20\n    /* \"#utility.yul\":2353:2362   */\n  dup3\n    /* \"#utility.yul\":2349:2367   */\n  add\n    /* \"#utility.yul\":2341:2367   */\n  swap1\n  pop\n    /* \"#utility.yul\":2377:2448   */\n  tag_56\n    /* \"#utility.yul\":2445:2446   */\n  0x00\n    /* \"#utility.yul\":2434:2443   */\n  dup4\n    /* \"#utility.yul\":2430:2447   */\n  add\n    /* \"#utility.yul\":2421:2427   */\n  dup5\n    /* \"#utility.yul\":2377:2448   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2233:2455   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"MasterGrand.sol\":377:7910  contract MasterGrand is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MasterGrand.sol\":377:7910  contract MasterGrand is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x8dbb1e3a\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xb9926557\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xb9926557\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd129459b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x913e77ad\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7abceffd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x83e27185\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8aa28550\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x46ca6bea\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x46ca6bea\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x57e78adc\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1aed6553\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x212f14cc\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"MasterGrand.sol\":2640:2733  function poolLength() external view returns (uint256) {... */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterGrand.sol\":1573:1599  PoolInfo[] public poolInfo */\n    tag_4:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterGrand.sol\":1840:1874  uint256 public totalAllocPoint = 0 */\n    tag_5:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterGrand.sol\":1208:1236  uint256 public bonusEndBlock */\n    tag_6:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterGrand.sol\":1281:1309  uint256 public GrandPerBlock */\n    tag_7:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterGrand.sol\":6676:7425  function withdraw(uint256 _pid, uint256 _amount) external {... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"MasterGrand.sol\":3474:3838  function setPool(... */\n    tag_9:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"MasterGrand.sol\":1930:1955  uint256 public startBlock */\n    tag_10:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterGrand.sol\":4683:5547  function updatePool(uint256 _pid) public {... */\n    tag_11:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"MasterGrand.sol\":7493:7908  function emergencyWithdraw(uint256 _pid) external {... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"MasterGrand.sol\":1511:1540  uint256 public totalBoxes = 0 */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterGrand.sol\":4435:4610  function massUpdatePools() public {... */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      stop\n        /* \"MasterGrand.sol\":1961:1985  uint256 public startTime */\n    tag_16:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterGrand.sol\":2894:3380  function addPool(... */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"MasterGrand.sol\":1479:1505  uint256 public grandMinted */\n    tag_18:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterGrand.sol\":1362:1406  uint256 public constant BONUS_MULTIPLIER = 3 */\n    tag_19:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterGrand.sol\":3911:4355  function getMultiplier(uint256 _from, uint256 _to)... */\n    tag_21:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterGrand.sol\":1128:1152  address public collector */\n    tag_22:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterGrand.sol\":1683:1747  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_23:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_103\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterGrand.sol\":1412:1473  uint256 public constant GRAND_CAP = 4203333333333333333333333 */\n    tag_24:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterGrand.sol\":1098:1121  GrandToken public Grand */\n    tag_25:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MasterGrand.sol\":5615:6626  function deposit(uint256 _pid, uint256 _amount) external {... */\n    tag_26:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      tag_118\n      jump\t// in\n    tag_115:\n      stop\n        /* \"MasterGrand.sol\":2640:2733  function poolLength() external view returns (uint256) {... */\n    tag_33:\n        /* \"MasterGrand.sol\":2685:2692  uint256 */\n      0x00\n        /* \"MasterGrand.sol\":2711:2719  poolInfo */\n      0x07\n        /* \"MasterGrand.sol\":2711:2726  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"MasterGrand.sol\":2704:2726  return poolInfo.length */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":2640:2733  function poolLength() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"MasterGrand.sol\":1573:1599  PoolInfo[] public poolInfo */\n    tag_39:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"MasterGrand.sol\":1840:1874  uint256 public totalAllocPoint = 0 */\n    tag_43:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"MasterGrand.sol\":1208:1236  uint256 public bonusEndBlock */\n    tag_46:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"MasterGrand.sol\":1281:1309  uint256 public GrandPerBlock */\n    tag_49:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"MasterGrand.sol\":6676:7425  function withdraw(uint256 _pid, uint256 _amount) external {... */\n    tag_54:\n        /* \"MasterGrand.sol\":6783:6790  40 days */\n      0x34bc00\n        /* \"MasterGrand.sol\":6771:6780  startTime */\n      sload(0x0b)\n        /* \"MasterGrand.sol\":6771:6790  startTime + 40 days */\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"MasterGrand.sol\":6752:6767  block.timestamp */\n      timestamp\n        /* \"MasterGrand.sol\":6752:6791  block.timestamp > (startTime + 40 days) */\n      gt\n        /* \"MasterGrand.sol\":6744:6805  require(block.timestamp > (startTime + 40 days), \"Too early\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"MasterGrand.sol\":6816:6837  PoolInfo storage pool */\n      0x00\n        /* \"MasterGrand.sol\":6840:6848  poolInfo */\n      0x07\n        /* \"MasterGrand.sol\":6849:6853  _pid */\n      dup4\n        /* \"MasterGrand.sol\":6840:6854  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_128\n      jumpi\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n    tag_128:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"MasterGrand.sol\":6816:6854  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":6864:6885  UserInfo storage user */\n      0x00\n        /* \"MasterGrand.sol\":6888:6896  userInfo */\n      0x08\n        /* \"MasterGrand.sol\":6888:6902  userInfo[_pid] */\n      0x00\n        /* \"MasterGrand.sol\":6897:6901  _pid */\n      dup6\n        /* \"MasterGrand.sol\":6888:6902  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MasterGrand.sol\":6888:6914  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"MasterGrand.sol\":6903:6913  msg.sender */\n      caller\n        /* \"MasterGrand.sol\":6888:6914  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MasterGrand.sol\":6864:6914  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":6948:6955  _amount */\n      dup3\n        /* \"MasterGrand.sol\":6933:6937  user */\n      dup2\n        /* \"MasterGrand.sol\":6933:6944  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterGrand.sol\":6933:6955  user.amount >= _amount */\n      lt\n      iszero\n        /* \"MasterGrand.sol\":6925:6978  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"MasterGrand.sol\":6989:7005  updatePool(_pid) */\n      tag_135\n        /* \"MasterGrand.sol\":7000:7004  _pid */\n      dup5\n        /* \"MasterGrand.sol\":6989:6999  updatePool */\n      tag_64\n        /* \"MasterGrand.sol\":6989:7005  updatePool(_pid) */\n      jump\t// in\n    tag_135:\n        /* \"MasterGrand.sol\":7016:7031  uint256 pending */\n      0x00\n        /* \"MasterGrand.sol\":7105:7109  user */\n      dup2\n        /* \"MasterGrand.sol\":7105:7120  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"MasterGrand.sol\":7086:7090  1e12 */\n      0xe8d4a51000\n        /* \"MasterGrand.sol\":7049:7053  pool */\n      dup5\n        /* \"MasterGrand.sol\":7049:7070  pool.accGrandPerShare */\n      0x03\n      add\n      sload\n        /* \"MasterGrand.sol\":7035:7039  user */\n      dup5\n        /* \"MasterGrand.sol\":7035:7046  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterGrand.sol\":7035:7070  user.amount * pool.accGrandPerShare */\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"MasterGrand.sol\":7034:7090  (user.amount * pool.accGrandPerShare) /... */\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"MasterGrand.sol\":7034:7120  (user.amount * pool.accGrandPerShare) /... */\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"MasterGrand.sol\":7016:7120  uint256 pending = (user.amount * pool.accGrandPerShare) /... */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":7159:7166  _amount */\n      dup4\n        /* \"MasterGrand.sol\":7145:7149  user */\n      dup3\n        /* \"MasterGrand.sol\":7145:7156  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterGrand.sol\":7145:7166  user.amount - _amount */\n      tag_142\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_142:\n        /* \"MasterGrand.sol\":7131:7135  user */\n      dup3\n        /* \"MasterGrand.sol\":7131:7142  user.amount */\n      0x00\n      add\n        /* \"MasterGrand.sol\":7131:7166  user.amount = user.amount - _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterGrand.sol\":7234:7238  1e12 */\n      0xe8d4a51000\n        /* \"MasterGrand.sol\":7209:7213  pool */\n      dup4\n        /* \"MasterGrand.sol\":7209:7230  pool.accGrandPerShare */\n      0x03\n      add\n      sload\n        /* \"MasterGrand.sol\":7195:7199  user */\n      dup4\n        /* \"MasterGrand.sol\":7195:7206  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterGrand.sol\":7195:7230  user.amount * pool.accGrandPerShare */\n      tag_143\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_143:\n        /* \"MasterGrand.sol\":7194:7238  (user.amount * pool.accGrandPerShare) / 1e12 */\n      tag_144\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_144:\n        /* \"MasterGrand.sol\":7176:7180  user */\n      dup3\n        /* \"MasterGrand.sol\":7176:7191  user.rewardDebt */\n      0x01\n      add\n        /* \"MasterGrand.sol\":7176:7238  user.rewardDebt = (user.amount * pool.accGrandPerShare) / 1e12 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterGrand.sol\":7249:7288  Grand.safeTransfer(msg.sender, pending) */\n      tag_145\n        /* \"MasterGrand.sol\":7268:7278  msg.sender */\n      caller\n        /* \"MasterGrand.sol\":7280:7287  pending */\n      dup3\n        /* \"MasterGrand.sol\":7249:7254  Grand */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterGrand.sol\":7249:7267  Grand.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_146\n      swap1\n        /* \"MasterGrand.sol\":7249:7288  Grand.safeTransfer(msg.sender, pending) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_145:\n        /* \"MasterGrand.sol\":7298:7344  pool.lpToken.safeTransfer(msg.sender, _amount) */\n      tag_147\n        /* \"MasterGrand.sol\":7324:7334  msg.sender */\n      caller\n        /* \"MasterGrand.sol\":7336:7343  _amount */\n      dup6\n        /* \"MasterGrand.sol\":7298:7302  pool */\n      dup6\n        /* \"MasterGrand.sol\":7298:7310  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterGrand.sol\":7298:7323  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_146\n      swap1\n        /* \"MasterGrand.sol\":7298:7344  pool.lpToken.safeTransfer(msg.sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_147:\n        /* \"MasterGrand.sol\":7404:7408  _pid */\n      dup5\n        /* \"MasterGrand.sol\":7389:7393  pool */\n      dup4\n        /* \"MasterGrand.sol\":7389:7401  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterGrand.sol\":7360:7418  Withdraw(msg.sender, address(pool.lpToken), _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterGrand.sol\":7369:7379  msg.sender */\n      caller\n        /* \"MasterGrand.sol\":7360:7418  Withdraw(msg.sender, address(pool.lpToken), _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567\n        /* \"MasterGrand.sol\":7410:7417  _amount */\n      dup8\n        /* \"MasterGrand.sol\":7360:7418  Withdraw(msg.sender, address(pool.lpToken), _pid, _amount) */\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"MasterGrand.sol\":6734:7425  {... */\n      pop\n      pop\n      pop\n        /* \"MasterGrand.sol\":6676:7425  function withdraw(uint256 _pid, uint256 _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MasterGrand.sol\":3474:3838  function setPool(... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"MasterGrand.sol\":3607:3618  _withUpdate */\n      dup1\n        /* \"MasterGrand.sol\":3603:3662  if (_withUpdate) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"MasterGrand.sol\":3634:3651  massUpdatePools() */\n      tag_154\n        /* \"MasterGrand.sol\":3634:3649  massUpdatePools */\n      tag_72\n        /* \"MasterGrand.sol\":3634:3651  massUpdatePools() */\n      jump\t// in\n    tag_154:\n        /* \"MasterGrand.sol\":3603:3662  if (_withUpdate) {... */\n    tag_153:\n        /* \"MasterGrand.sol\":3771:3782  _allocPoint */\n      dup2\n        /* \"MasterGrand.sol\":3731:3739  poolInfo */\n      0x07\n        /* \"MasterGrand.sol\":3740:3744  _pid */\n      dup5\n        /* \"MasterGrand.sol\":3731:3745  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_155\n      jumpi\n      tag_156\n      tag_130\n      jump\t// in\n    tag_156:\n    tag_155:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"MasterGrand.sol\":3731:3756  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"MasterGrand.sol\":3701:3716  totalAllocPoint */\n      sload(0x09)\n        /* \"MasterGrand.sol\":3701:3756  totalAllocPoint -... */\n      tag_158\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"MasterGrand.sol\":3701:3782  totalAllocPoint -... */\n      tag_159\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_159:\n        /* \"MasterGrand.sol\":3671:3686  totalAllocPoint */\n      0x09\n        /* \"MasterGrand.sol\":3671:3782  totalAllocPoint =... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterGrand.sol\":3820:3831  _allocPoint */\n      dup2\n        /* \"MasterGrand.sol\":3792:3800  poolInfo */\n      0x07\n        /* \"MasterGrand.sol\":3801:3805  _pid */\n      dup5\n        /* \"MasterGrand.sol\":3792:3806  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_161\n      tag_130\n      jump\t// in\n    tag_161:\n    tag_160:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"MasterGrand.sol\":3792:3817  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"MasterGrand.sol\":3792:3831  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterGrand.sol\":3474:3838  function setPool(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MasterGrand.sol\":1930:1955  uint256 public startBlock */\n    tag_60:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"MasterGrand.sol\":4683:5547  function updatePool(uint256 _pid) public {... */\n    tag_64:\n        /* \"MasterGrand.sol\":4734:4755  PoolInfo storage pool */\n      0x00\n        /* \"MasterGrand.sol\":4758:4766  poolInfo */\n      0x07\n        /* \"MasterGrand.sol\":4767:4771  _pid */\n      dup3\n        /* \"MasterGrand.sol\":4758:4772  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_164\n      jumpi\n      tag_165\n      tag_130\n      jump\t// in\n    tag_165:\n    tag_164:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"MasterGrand.sol\":4734:4772  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":4802:4806  pool */\n      dup1\n        /* \"MasterGrand.sol\":4802:4822  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"MasterGrand.sol\":4786:4798  block.number */\n      number\n        /* \"MasterGrand.sol\":4786:4822  block.number <= pool.lastRewardBlock */\n      gt\n        /* \"MasterGrand.sol\":4782:4855  if (block.number <= pool.lastRewardBlock) {... */\n      tag_167\n      jumpi\n        /* \"MasterGrand.sol\":4838:4845  return; */\n      pop\n      jump(tag_163)\n        /* \"MasterGrand.sol\":4782:4855  if (block.number <= pool.lastRewardBlock) {... */\n    tag_167:\n        /* \"MasterGrand.sol\":4865:4881  uint256 lpSupply */\n      0x00\n        /* \"MasterGrand.sol\":4884:4888  pool */\n      dup2\n        /* \"MasterGrand.sol\":4884:4896  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterGrand.sol\":4884:4906  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"MasterGrand.sol\":4915:4919  this */\n      address\n        /* \"MasterGrand.sol\":4884:4921  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_168:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"MasterGrand.sol\":4865:4921  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":4947:4948  0 */\n      0x00\n        /* \"MasterGrand.sol\":4935:4943  lpSupply */\n      dup2\n        /* \"MasterGrand.sol\":4935:4948  lpSupply == 0 */\n      sub\n        /* \"MasterGrand.sol\":4931:5030  if (lpSupply == 0) {... */\n      tag_173\n      jumpi\n        /* \"MasterGrand.sol\":4987:4999  block.number */\n      number\n        /* \"MasterGrand.sol\":4964:4968  pool */\n      dup3\n        /* \"MasterGrand.sol\":4964:4984  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"MasterGrand.sol\":4964:4999  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterGrand.sol\":5013:5020  return; */\n      pop\n      pop\n      jump(tag_163)\n        /* \"MasterGrand.sol\":4931:5030  if (lpSupply == 0) {... */\n    tag_173:\n        /* \"MasterGrand.sol\":5040:5059  uint256 GrandReward */\n      0x00\n        /* \"MasterGrand.sol\":5208:5223  totalAllocPoint */\n      sload(0x09)\n        /* \"MasterGrand.sol\":5189:5193  pool */\n      dup4\n        /* \"MasterGrand.sol\":5189:5204  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"MasterGrand.sol\":5161:5174  GrandPerBlock */\n      sload(0x04)\n        /* \"MasterGrand.sol\":5063:5146  getMultiplier(... */\n      tag_174\n        /* \"MasterGrand.sol\":5090:5094  pool */\n      dup7\n        /* \"MasterGrand.sol\":5090:5110  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"MasterGrand.sol\":5124:5136  block.number */\n      number\n        /* \"MasterGrand.sol\":5063:5076  getMultiplier */\n      tag_94\n        /* \"MasterGrand.sol\":5063:5146  getMultiplier(... */\n      jump\t// in\n    tag_174:\n        /* \"MasterGrand.sol\":5063:5174  getMultiplier(... */\n      tag_175\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_175:\n        /* \"MasterGrand.sol\":5063:5204  getMultiplier(... */\n      tag_176\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_176:\n        /* \"MasterGrand.sol\":5062:5223  (getMultiplier(... */\n      tag_177\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_177:\n        /* \"MasterGrand.sol\":5040:5223  uint256 GrandReward = (getMultiplier(... */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":5330:5338  lpSupply */\n      dup2\n        /* \"MasterGrand.sol\":5322:5326  1e12 */\n      0xe8d4a51000\n        /* \"MasterGrand.sol\":5308:5319  GrandReward */\n      dup3\n        /* \"MasterGrand.sol\":5308:5326  GrandReward * 1e12 */\n      tag_178\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_178:\n        /* \"MasterGrand.sol\":5307:5338  (GrandReward * 1e12) / lpSupply */\n      tag_179\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_179:\n        /* \"MasterGrand.sol\":5270:5274  pool */\n      dup4\n        /* \"MasterGrand.sol\":5270:5291  pool.accGrandPerShare */\n      0x03\n      add\n      sload\n        /* \"MasterGrand.sol\":5270:5339  pool.accGrandPerShare +... */\n      tag_180\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_180:\n        /* \"MasterGrand.sol\":5234:5238  pool */\n      dup4\n        /* \"MasterGrand.sol\":5234:5255  pool.accGrandPerShare */\n      0x03\n      add\n        /* \"MasterGrand.sol\":5234:5339  pool.accGrandPerShare =... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterGrand.sol\":5372:5384  block.number */\n      number\n        /* \"MasterGrand.sol\":5349:5353  pool */\n      dup4\n        /* \"MasterGrand.sol\":5349:5369  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"MasterGrand.sol\":5349:5384  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterGrand.sol\":1448:1473  4203333333333333333333333 */\n      0x037a172815e43557155555\n        /* \"MasterGrand.sol\":5399:5410  grandMinted */\n      sload(0x05)\n        /* \"MasterGrand.sol\":5399:5423  grandMinted <= GRAND_CAP */\n      gt\n        /* \"MasterGrand.sol\":5395:5541  if (grandMinted <= GRAND_CAP) {... */\n      tag_181\n      jumpi\n        /* \"MasterGrand.sol\":5467:5478  GrandReward */\n      dup1\n        /* \"MasterGrand.sol\":5453:5464  grandMinted */\n      sload(0x05)\n        /* \"MasterGrand.sol\":5453:5478  grandMinted + GrandReward */\n      tag_182\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_182:\n        /* \"MasterGrand.sol\":5439:5450  grandMinted */\n      0x05\n        /* \"MasterGrand.sol\":5439:5478  grandMinted = grandMinted + GrandReward */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterGrand.sol\":5492:5497  Grand */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterGrand.sol\":5492:5502  Grand.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"MasterGrand.sol\":5511:5515  this */\n      address\n        /* \"MasterGrand.sol\":5518:5529  GrandReward */\n      dup4\n        /* \"MasterGrand.sol\":5492:5530  Grand.mint(address(this), GrandReward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      revert(0x00, 0x00)\n    tag_185:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n        /* \"MasterGrand.sol\":5395:5541  if (grandMinted <= GRAND_CAP) {... */\n    tag_181:\n        /* \"MasterGrand.sol\":4724:5547  {... */\n      pop\n      pop\n      pop\n        /* \"MasterGrand.sol\":4683:5547  function updatePool(uint256 _pid) public {... */\n    tag_163:\n      pop\n      jump\t// out\n        /* \"MasterGrand.sol\":7493:7908  function emergencyWithdraw(uint256 _pid) external {... */\n    tag_67:\n        /* \"MasterGrand.sol\":7553:7574  PoolInfo storage pool */\n      0x00\n        /* \"MasterGrand.sol\":7577:7585  poolInfo */\n      0x07\n        /* \"MasterGrand.sol\":7586:7590  _pid */\n      dup3\n        /* \"MasterGrand.sol\":7577:7591  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_189\n      jumpi\n      tag_190\n      tag_130\n      jump\t// in\n    tag_190:\n    tag_189:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"MasterGrand.sol\":7553:7591  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":7601:7622  UserInfo storage user */\n      0x00\n        /* \"MasterGrand.sol\":7625:7633  userInfo */\n      0x08\n        /* \"MasterGrand.sol\":7625:7639  userInfo[_pid] */\n      0x00\n        /* \"MasterGrand.sol\":7634:7638  _pid */\n      dup5\n        /* \"MasterGrand.sol\":7625:7639  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MasterGrand.sol\":7625:7651  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"MasterGrand.sol\":7640:7650  msg.sender */\n      caller\n        /* \"MasterGrand.sol\":7625:7651  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MasterGrand.sol\":7601:7651  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":7662:7676  uint256 amount */\n      0x00\n        /* \"MasterGrand.sol\":7679:7683  user */\n      dup2\n        /* \"MasterGrand.sol\":7679:7690  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterGrand.sol\":7662:7690  uint256 amount = user.amount */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":7700:7714  uint256 reward */\n      0x00\n        /* \"MasterGrand.sol\":7717:7721  user */\n      dup3\n        /* \"MasterGrand.sol\":7717:7732  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"MasterGrand.sol\":7700:7732  uint256 reward = user.rewardDebt */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":7757:7758  0 */\n      0x00\n        /* \"MasterGrand.sol\":7743:7747  user */\n      dup4\n        /* \"MasterGrand.sol\":7743:7754  user.amount */\n      0x00\n      add\n        /* \"MasterGrand.sol\":7743:7758  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterGrand.sol\":7786:7787  0 */\n      0x00\n        /* \"MasterGrand.sol\":7768:7772  user */\n      dup4\n        /* \"MasterGrand.sol\":7768:7783  user.rewardDebt */\n      0x01\n      add\n        /* \"MasterGrand.sol\":7768:7787  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterGrand.sol\":7798:7843  pool.lpToken.safeTransfer(msg.sender, amount) */\n      tag_192\n        /* \"MasterGrand.sol\":7824:7834  msg.sender */\n      caller\n        /* \"MasterGrand.sol\":7836:7842  amount */\n      dup4\n        /* \"MasterGrand.sol\":7798:7802  pool */\n      dup7\n        /* \"MasterGrand.sol\":7798:7810  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterGrand.sol\":7798:7823  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_146\n      swap1\n        /* \"MasterGrand.sol\":7798:7843  pool.lpToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_192:\n        /* \"MasterGrand.sol\":7888:7892  _pid */\n      dup5\n        /* \"MasterGrand.sol\":7876:7886  msg.sender */\n      caller\n        /* \"MasterGrand.sol\":7858:7901  EmergencyWithdraw(msg.sender, _pid, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"MasterGrand.sol\":7894:7900  reward */\n      dup4\n        /* \"MasterGrand.sol\":7858:7901  EmergencyWithdraw(msg.sender, _pid, reward) */\n      mload(0x40)\n      tag_193\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MasterGrand.sol\":7543:7908  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"MasterGrand.sol\":7493:7908  function emergencyWithdraw(uint256 _pid) external {... */\n      pop\n      jump\t// out\n        /* \"MasterGrand.sol\":1511:1540  uint256 public totalBoxes = 0 */\n    tag_69:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"MasterGrand.sol\":4435:4610  function massUpdatePools() public {... */\n    tag_72:\n        /* \"MasterGrand.sol\":4479:4493  uint256 length */\n      0x00\n        /* \"MasterGrand.sol\":4496:4504  poolInfo */\n      0x07\n        /* \"MasterGrand.sol\":4496:4511  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"MasterGrand.sol\":4479:4511  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":4526:4537  uint256 pid */\n      0x00\n        /* \"MasterGrand.sol\":4540:4541  0 */\n      0x00\n        /* \"MasterGrand.sol\":4526:4541  uint256 pid = 0 */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":4521:4604  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_195:\n        /* \"MasterGrand.sol\":4549:4555  length */\n      dup2\n        /* \"MasterGrand.sol\":4543:4546  pid */\n      dup2\n        /* \"MasterGrand.sol\":4543:4555  pid < length */\n      lt\n        /* \"MasterGrand.sol\":4521:4604  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"MasterGrand.sol\":4578:4593  updatePool(pid) */\n      tag_198\n        /* \"MasterGrand.sol\":4589:4592  pid */\n      dup2\n        /* \"MasterGrand.sol\":4578:4588  updatePool */\n      tag_64\n        /* \"MasterGrand.sol\":4578:4593  updatePool(pid) */\n      jump\t// in\n    tag_198:\n        /* \"MasterGrand.sol\":4557:4562  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"MasterGrand.sol\":4521:4604  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_195)\n    tag_196:\n      pop\n        /* \"MasterGrand.sol\":4469:4610  {... */\n      pop\n        /* \"MasterGrand.sol\":4435:4610  function massUpdatePools() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"MasterGrand.sol\":1961:1985  uint256 public startTime */\n    tag_76:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"MasterGrand.sol\":2894:3380  function addPool(... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_205:\n        /* \"MasterGrand.sol\":3030:3041  _withUpdate */\n      dup1\n        /* \"MasterGrand.sol\":3026:3085  if (_withUpdate) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"MasterGrand.sol\":3057:3074  massUpdatePools() */\n      tag_208\n        /* \"MasterGrand.sol\":3057:3072  massUpdatePools */\n      tag_72\n        /* \"MasterGrand.sol\":3057:3074  massUpdatePools() */\n      jump\t// in\n    tag_208:\n        /* \"MasterGrand.sol\":3026:3085  if (_withUpdate) {... */\n    tag_207:\n        /* \"MasterGrand.sol\":3131:3142  _allocPoint */\n      dup3\n        /* \"MasterGrand.sol\":3113:3128  totalAllocPoint */\n      sload(0x09)\n        /* \"MasterGrand.sol\":3113:3142  totalAllocPoint + _allocPoint */\n      tag_209\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_209:\n        /* \"MasterGrand.sol\":3095:3110  totalAllocPoint */\n      0x09\n        /* \"MasterGrand.sol\":3095:3142  totalAllocPoint = totalAllocPoint + _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterGrand.sol\":3152:3160  poolInfo */\n      0x07\n        /* \"MasterGrand.sol\":3179:3363  PoolInfo({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"MasterGrand.sol\":3215:3223  _lpToken */\n      dup5\n        /* \"MasterGrand.sol\":3179:3363  PoolInfo({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"MasterGrand.sol\":3253:3264  _allocPoint */\n      dup6\n        /* \"MasterGrand.sol\":3179:3363  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"MasterGrand.sol\":3299:3311  block.number */\n      number\n        /* \"MasterGrand.sol\":3179:3363  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"MasterGrand.sol\":3347:3348  0 */\n      0x00\n        /* \"MasterGrand.sol\":3179:3363  PoolInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"MasterGrand.sol\":3152:3373  poolInfo.push(... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      pop\n      pop\n        /* \"MasterGrand.sol\":2894:3380  function addPool(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MasterGrand.sol\":1479:1505  uint256 public grandMinted */\n    tag_83:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"MasterGrand.sol\":1362:1406  uint256 public constant BONUS_MULTIPLIER = 3 */\n    tag_86:\n        /* \"MasterGrand.sol\":1405:1406  3 */\n      0x03\n        /* \"MasterGrand.sol\":1362:1406  uint256 public constant BONUS_MULTIPLIER = 3 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"MasterGrand.sol\":3911:4355  function getMultiplier(uint256 _from, uint256 _to)... */\n    tag_94:\n        /* \"MasterGrand.sol\":4007:4014  uint256 */\n      0x00\n        /* \"MasterGrand.sol\":4041:4054  bonusEndBlock */\n      sload(0x03)\n        /* \"MasterGrand.sol\":4034:4037  _to */\n      dup3\n        /* \"MasterGrand.sol\":4034:4054  _to <= bonusEndBlock */\n      gt\n        /* \"MasterGrand.sol\":4030:4349  if (_to <= bonusEndBlock) {... */\n      tag_213\n      jumpi\n        /* \"MasterGrand.sol\":1405:1406  3 */\n      0x03\n        /* \"MasterGrand.sol\":4084:4089  _from */\n      dup4\n        /* \"MasterGrand.sol\":4078:4081  _to */\n      dup4\n        /* \"MasterGrand.sol\":4078:4089  _to - _from */\n      tag_214\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_214:\n        /* \"MasterGrand.sol\":4077:4109  (_to - _from) * BONUS_MULTIPLIER */\n      tag_215\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_215:\n        /* \"MasterGrand.sol\":4070:4109  return (_to - _from) * BONUS_MULTIPLIER */\n      swap1\n      pop\n      jump(tag_212)\n        /* \"MasterGrand.sol\":4030:4349  if (_to <= bonusEndBlock) {... */\n    tag_213:\n        /* \"MasterGrand.sol\":4139:4152  bonusEndBlock */\n      sload(0x03)\n        /* \"MasterGrand.sol\":4130:4135  _from */\n      dup4\n        /* \"MasterGrand.sol\":4130:4152  _from >= bonusEndBlock */\n      lt\n        /* \"MasterGrand.sol\":4126:4349  if (_from >= bonusEndBlock) {... */\n      tag_217\n      jumpi\n        /* \"MasterGrand.sol\":4181:4186  _from */\n      dup3\n        /* \"MasterGrand.sol\":4175:4178  _to */\n      dup3\n        /* \"MasterGrand.sol\":4175:4186  _to - _from */\n      tag_218\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_218:\n        /* \"MasterGrand.sol\":4168:4186  return _to - _from */\n      swap1\n      pop\n      jump(tag_212)\n        /* \"MasterGrand.sol\":4126:4349  if (_from >= bonusEndBlock) {... */\n    tag_217:\n        /* \"MasterGrand.sol\":4324:4337  bonusEndBlock */\n      sload(0x03)\n        /* \"MasterGrand.sol\":4318:4321  _to */\n      dup3\n        /* \"MasterGrand.sol\":4318:4337  _to - bonusEndBlock */\n      tag_220\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_220:\n        /* \"MasterGrand.sol\":1405:1406  3 */\n      0x03\n        /* \"MasterGrand.sol\":4257:4262  _from */\n      dup5\n        /* \"MasterGrand.sol\":4241:4254  bonusEndBlock */\n      sload(0x03)\n        /* \"MasterGrand.sol\":4241:4262  bonusEndBlock - _from */\n      tag_221\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_221:\n        /* \"MasterGrand.sol\":4240:4298  (bonusEndBlock - _from) *... */\n      tag_222\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_222:\n        /* \"MasterGrand.sol\":4240:4338  (bonusEndBlock - _from) *... */\n      tag_223\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_223:\n        /* \"MasterGrand.sol\":4217:4338  return... */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":3911:4355  function getMultiplier(uint256 _from, uint256 _to)... */\n    tag_212:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MasterGrand.sol\":1128:1152  address public collector */\n    tag_97:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"MasterGrand.sol\":1683:1747  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_102:\n      mstore(0x20, 0x08)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"MasterGrand.sol\":1412:1473  uint256 public constant GRAND_CAP = 4203333333333333333333333 */\n    tag_106:\n        /* \"MasterGrand.sol\":1448:1473  4203333333333333333333333 */\n      0x037a172815e43557155555\n        /* \"MasterGrand.sol\":1412:1473  uint256 public constant GRAND_CAP = 4203333333333333333333333 */\n      dup2\n      jump\t// out\n        /* \"MasterGrand.sol\":1098:1121  GrandToken public Grand */\n    tag_109:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"MasterGrand.sol\":5615:6626  function deposit(uint256 _pid, uint256 _amount) external {... */\n    tag_114:\n        /* \"MasterGrand.sol\":5682:5703  PoolInfo storage pool */\n      0x00\n        /* \"MasterGrand.sol\":5706:5714  poolInfo */\n      0x07\n        /* \"MasterGrand.sol\":5715:5719  _pid */\n      dup4\n        /* \"MasterGrand.sol\":5706:5720  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_225\n      jumpi\n      tag_226\n      tag_130\n      jump\t// in\n    tag_226:\n    tag_225:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"MasterGrand.sol\":5682:5720  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":5730:5751  UserInfo storage user */\n      0x00\n        /* \"MasterGrand.sol\":5754:5762  userInfo */\n      0x08\n        /* \"MasterGrand.sol\":5754:5768  userInfo[_pid] */\n      0x00\n        /* \"MasterGrand.sol\":5763:5767  _pid */\n      dup6\n        /* \"MasterGrand.sol\":5754:5768  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MasterGrand.sol\":5754:5780  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"MasterGrand.sol\":5769:5779  msg.sender */\n      caller\n        /* \"MasterGrand.sol\":5754:5780  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MasterGrand.sol\":5730:5780  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":5823:5827  pool */\n      dup2\n        /* \"MasterGrand.sol\":5823:5835  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterGrand.sol\":5823:5845  pool.lpToken.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"MasterGrand.sol\":5846:5856  msg.sender */\n      caller\n        /* \"MasterGrand.sol\":5866:5870  this */\n      address\n        /* \"MasterGrand.sol\":5823:5872  pool.lpToken.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap3\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_231:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_232\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_232:\n        /* \"MasterGrand.sol\":5812:5819  _amount */\n      dup4\n        /* \"MasterGrand.sol\":5812:5872  _amount <= pool.lpToken.allowance(msg.sender, address(this)) */\n      gt\n      iszero\n        /* \"MasterGrand.sol\":5791:5923  require(... */\n      tag_233\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_233:\n        /* \"MasterGrand.sol\":5933:5998  pool.lpToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_236\n        /* \"MasterGrand.sol\":5963:5973  msg.sender */\n      caller\n        /* \"MasterGrand.sol\":5983:5987  this */\n      address\n        /* \"MasterGrand.sol\":5990:5997  _amount */\n      dup6\n        /* \"MasterGrand.sol\":5933:5937  pool */\n      dup6\n        /* \"MasterGrand.sol\":5933:5945  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterGrand.sol\":5933:5962  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_237\n      swap1\n        /* \"MasterGrand.sol\":5933:5998  pool.lpToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_236:\n        /* \"MasterGrand.sol\":6009:6025  updatePool(_pid) */\n      tag_238\n        /* \"MasterGrand.sol\":6020:6024  _pid */\n      dup5\n        /* \"MasterGrand.sol\":6009:6019  updatePool */\n      tag_64\n        /* \"MasterGrand.sol\":6009:6025  updatePool(_pid) */\n      jump\t// in\n    tag_238:\n        /* \"MasterGrand.sol\":6036:6051  uint256 pending */\n      0x00\n        /* \"MasterGrand.sol\":6125:6129  user */\n      dup2\n        /* \"MasterGrand.sol\":6125:6140  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"MasterGrand.sol\":6106:6110  1e12 */\n      0xe8d4a51000\n        /* \"MasterGrand.sol\":6069:6073  pool */\n      dup5\n        /* \"MasterGrand.sol\":6069:6090  pool.accGrandPerShare */\n      0x03\n      add\n      sload\n        /* \"MasterGrand.sol\":6055:6059  user */\n      dup5\n        /* \"MasterGrand.sol\":6055:6066  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterGrand.sol\":6055:6090  user.amount * pool.accGrandPerShare */\n      tag_239\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_239:\n        /* \"MasterGrand.sol\":6054:6110  (user.amount * pool.accGrandPerShare) /... */\n      tag_240\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_240:\n        /* \"MasterGrand.sol\":6054:6140  (user.amount * pool.accGrandPerShare) /... */\n      tag_241\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_241:\n        /* \"MasterGrand.sol\":6036:6140  uint256 pending = (user.amount * pool.accGrandPerShare) /... */\n      swap1\n      pop\n        /* \"MasterGrand.sol\":6178:6185  _amount */\n      dup4\n        /* \"MasterGrand.sol\":6164:6168  user */\n      dup3\n        /* \"MasterGrand.sol\":6164:6175  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterGrand.sol\":6164:6185  user.amount + _amount */\n      tag_242\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_242:\n        /* \"MasterGrand.sol\":6150:6154  user */\n      dup3\n        /* \"MasterGrand.sol\":6150:6161  user.amount */\n      0x00\n      add\n        /* \"MasterGrand.sol\":6150:6185  user.amount = user.amount + _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterGrand.sol\":6231:6238  40 days */\n      0x34bc00\n        /* \"MasterGrand.sol\":6219:6228  startTime */\n      sload(0x0b)\n        /* \"MasterGrand.sol\":6219:6238  startTime + 40 days */\n      tag_243\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_243:\n        /* \"MasterGrand.sol\":6200:6215  block.timestamp */\n      timestamp\n        /* \"MasterGrand.sol\":6200:6239  block.timestamp > (startTime + 40 days) */\n      gt\n        /* \"MasterGrand.sol\":6200:6254  block.timestamp > (startTime + 40 days) && pending > 0 */\n      dup1\n      iszero\n      tag_244\n      jumpi\n      pop\n        /* \"MasterGrand.sol\":6253:6254  0 */\n      0x00\n        /* \"MasterGrand.sol\":6243:6250  pending */\n      dup2\n        /* \"MasterGrand.sol\":6243:6254  pending > 0 */\n      gt\n        /* \"MasterGrand.sol\":6200:6254  block.timestamp > (startTime + 40 days) && pending > 0 */\n    tag_244:\n        /* \"MasterGrand.sol\":6196:6547  if (block.timestamp > (startTime + 40 days) && pending > 0) {... */\n      iszero\n      tag_245\n      jumpi\n        /* \"MasterGrand.sol\":6328:6332  1e12 */\n      0xe8d4a51000\n        /* \"MasterGrand.sol\":6303:6307  pool */\n      dup4\n        /* \"MasterGrand.sol\":6303:6324  pool.accGrandPerShare */\n      0x03\n      add\n      sload\n        /* \"MasterGrand.sol\":6289:6293  user */\n      dup4\n        /* \"MasterGrand.sol\":6289:6300  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterGrand.sol\":6289:6324  user.amount * pool.accGrandPerShare */\n      tag_246\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_246:\n        /* \"MasterGrand.sol\":6288:6332  (user.amount * pool.accGrandPerShare) / 1e12 */\n      tag_247\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_247:\n        /* \"MasterGrand.sol\":6270:6274  user */\n      dup3\n        /* \"MasterGrand.sol\":6270:6285  user.rewardDebt */\n      0x01\n      add\n        /* \"MasterGrand.sol\":6270:6332  user.rewardDebt = (user.amount * pool.accGrandPerShare) / 1e12 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterGrand.sol\":6346:6385  Grand.safeTransfer(msg.sender, pending) */\n      tag_248\n        /* \"MasterGrand.sol\":6365:6375  msg.sender */\n      caller\n        /* \"MasterGrand.sol\":6377:6384  pending */\n      dup3\n        /* \"MasterGrand.sol\":6346:6351  Grand */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterGrand.sol\":6346:6364  Grand.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_146\n      swap1\n        /* \"MasterGrand.sol\":6346:6385  Grand.safeTransfer(msg.sender, pending) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"MasterGrand.sol\":6196:6547  if (block.timestamp > (startTime + 40 days) && pending > 0) {... */\n      jump(tag_249)\n    tag_245:\n        /* \"MasterGrand.sol\":6529:6536  pending */\n      dup1\n        /* \"MasterGrand.sol\":6506:6510  1e12 */\n      0xe8d4a51000\n        /* \"MasterGrand.sol\":6465:6469  pool */\n      dup5\n        /* \"MasterGrand.sol\":6465:6486  pool.accGrandPerShare */\n      0x03\n      add\n      sload\n        /* \"MasterGrand.sol\":6451:6455  user */\n      dup5\n        /* \"MasterGrand.sol\":6451:6462  user.amount */\n      0x00\n      add\n      sload\n        /* \"MasterGrand.sol\":6451:6486  user.amount * pool.accGrandPerShare */\n      tag_250\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_250:\n        /* \"MasterGrand.sol\":6450:6510  (user.amount * pool.accGrandPerShare) /... */\n      tag_251\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_251:\n        /* \"MasterGrand.sol\":6450:6536  (user.amount * pool.accGrandPerShare) /... */\n      tag_252\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_252:\n        /* \"MasterGrand.sol\":6416:6420  user */\n      dup3\n        /* \"MasterGrand.sol\":6416:6431  user.rewardDebt */\n      0x01\n      add\n        /* \"MasterGrand.sol\":6416:6536  user.rewardDebt =... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MasterGrand.sol\":6196:6547  if (block.timestamp > (startTime + 40 days) && pending > 0) {... */\n    tag_249:\n        /* \"MasterGrand.sol\":6605:6609  _pid */\n      dup5\n        /* \"MasterGrand.sol\":6590:6594  pool */\n      dup4\n        /* \"MasterGrand.sol\":6590:6602  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterGrand.sol\":6562:6619  Deposit(msg.sender, address(pool.lpToken), _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MasterGrand.sol\":6570:6580  msg.sender */\n      caller\n        /* \"MasterGrand.sol\":6562:6619  Deposit(msg.sender, address(pool.lpToken), _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7\n        /* \"MasterGrand.sol\":6611:6618  _amount */\n      dup8\n        /* \"MasterGrand.sol\":6562:6619  Deposit(msg.sender, address(pool.lpToken), _pid, _amount) */\n      mload(0x40)\n      tag_253\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"MasterGrand.sol\":5672:6626  {... */\n      pop\n      pop\n      pop\n        /* \"MasterGrand.sol\":5615:6626  function deposit(uint256 _pid, uint256 _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1400  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1414  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1416:1421  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_262\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_269\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1790:1795  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1817  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1830  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1833:1837  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1841  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1843:1848  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_274\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1789  _callOptionalReturn */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_279)\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_283:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_284:\n        /* \"#utility.yul\":177:201   */\n      tag_321\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_283\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_35:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_323\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_284\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_286:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      0x00\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_288:\n        /* \"#utility.yul\":842:866   */\n      tag_328\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_283\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      0x00\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_329:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_289:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_331\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_288\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_38:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_334\n      tag_286\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":1118:1237   */\n    tag_333:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_335\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_289\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_290:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1569   */\n    tag_291:\n        /* \"#utility.yul\":1537:1540   */\n      0x00\n        /* \"#utility.yul\":1558:1563   */\n      dup2\n        /* \"#utility.yul\":1551:1563   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1575:1717   */\n    tag_292:\n        /* \"#utility.yul\":1625:1634   */\n      0x00\n        /* \"#utility.yul\":1658:1711   */\n      tag_339\n        /* \"#utility.yul\":1676:1710   */\n      tag_340\n        /* \"#utility.yul\":1685:1709   */\n      tag_341\n        /* \"#utility.yul\":1703:1708   */\n      dup5\n        /* \"#utility.yul\":1685:1709   */\n      tag_290\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1676:1710   */\n      tag_291\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1658:1711   */\n      tag_290\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":1645:1711   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1723:1849   */\n    tag_293:\n        /* \"#utility.yul\":1773:1782   */\n      0x00\n        /* \"#utility.yul\":1806:1843   */\n      tag_343\n        /* \"#utility.yul\":1837:1842   */\n      dup3\n        /* \"#utility.yul\":1806:1843   */\n      tag_292\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":1793:1843   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:1849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1855:1995   */\n    tag_294:\n        /* \"#utility.yul\":1919:1928   */\n      0x00\n        /* \"#utility.yul\":1952:1989   */\n      tag_345\n        /* \"#utility.yul\":1983:1988   */\n      dup3\n        /* \"#utility.yul\":1952:1989   */\n      tag_293\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":1939:1989   */\n      swap1\n      pop\n        /* \"#utility.yul\":1855:1995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2001:2160   */\n    tag_295:\n        /* \"#utility.yul\":2102:2153   */\n      tag_347\n        /* \"#utility.yul\":2147:2152   */\n      dup2\n        /* \"#utility.yul\":2102:2153   */\n      tag_294\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2097:2100   */\n      dup3\n        /* \"#utility.yul\":2090:2154   */\n      mstore\n        /* \"#utility.yul\":2001:2160   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2166:2747   */\n    tag_41:\n        /* \"#utility.yul\":2357:2361   */\n      0x00\n        /* \"#utility.yul\":2395:2398   */\n      0x80\n        /* \"#utility.yul\":2384:2393   */\n      dup3\n        /* \"#utility.yul\":2380:2399   */\n      add\n        /* \"#utility.yul\":2372:2399   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2494   */\n      tag_349\n        /* \"#utility.yul\":2491:2492   */\n      0x00\n        /* \"#utility.yul\":2480:2489   */\n      dup4\n        /* \"#utility.yul\":2476:2493   */\n      add\n        /* \"#utility.yul\":2467:2473   */\n      dup8\n        /* \"#utility.yul\":2409:2494   */\n      tag_295\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2504:2576   */\n      tag_350\n        /* \"#utility.yul\":2572:2574   */\n      0x20\n        /* \"#utility.yul\":2561:2570   */\n      dup4\n        /* \"#utility.yul\":2557:2575   */\n      add\n        /* \"#utility.yul\":2548:2554   */\n      dup7\n        /* \"#utility.yul\":2504:2576   */\n      tag_284\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2586:2658   */\n      tag_351\n        /* \"#utility.yul\":2654:2656   */\n      0x40\n        /* \"#utility.yul\":2643:2652   */\n      dup4\n        /* \"#utility.yul\":2639:2657   */\n      add\n        /* \"#utility.yul\":2630:2636   */\n      dup6\n        /* \"#utility.yul\":2586:2658   */\n      tag_284\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2668:2740   */\n      tag_352\n        /* \"#utility.yul\":2736:2738   */\n      0x60\n        /* \"#utility.yul\":2725:2734   */\n      dup4\n        /* \"#utility.yul\":2721:2739   */\n      add\n        /* \"#utility.yul\":2712:2718   */\n      dup5\n        /* \"#utility.yul\":2668:2740   */\n      tag_284\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2166:2747   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:3227   */\n    tag_53:\n        /* \"#utility.yul\":2821:2827   */\n      0x00\n        /* \"#utility.yul\":2829:2835   */\n      0x00\n        /* \"#utility.yul\":2878:2880   */\n      0x40\n        /* \"#utility.yul\":2866:2875   */\n      dup4\n        /* \"#utility.yul\":2857:2864   */\n      dup6\n        /* \"#utility.yul\":2853:2876   */\n      sub\n        /* \"#utility.yul\":2849:2881   */\n      slt\n        /* \"#utility.yul\":2846:2965   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":2884:2963   */\n      tag_355\n      tag_286\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":2846:2965   */\n    tag_354:\n        /* \"#utility.yul\":3004:3005   */\n      0x00\n        /* \"#utility.yul\":3029:3082   */\n      tag_356\n        /* \"#utility.yul\":3074:3081   */\n      dup6\n        /* \"#utility.yul\":3065:3071   */\n      dup3\n        /* \"#utility.yul\":3054:3063   */\n      dup7\n        /* \"#utility.yul\":3050:3072   */\n      add\n        /* \"#utility.yul\":3029:3082   */\n      tag_289\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3019:3082   */\n      swap3\n      pop\n        /* \"#utility.yul\":2975:3092   */\n      pop\n        /* \"#utility.yul\":3131:3133   */\n      0x20\n        /* \"#utility.yul\":3157:3210   */\n      tag_357\n        /* \"#utility.yul\":3202:3209   */\n      dup6\n        /* \"#utility.yul\":3193:3199   */\n      dup3\n        /* \"#utility.yul\":3182:3191   */\n      dup7\n        /* \"#utility.yul\":3178:3200   */\n      add\n        /* \"#utility.yul\":3157:3210   */\n      tag_289\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":3147:3210   */\n      swap2\n      pop\n        /* \"#utility.yul\":3102:3220   */\n      pop\n        /* \"#utility.yul\":2753:3227   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3233:3323   */\n    tag_296:\n        /* \"#utility.yul\":3267:3274   */\n      0x00\n        /* \"#utility.yul\":3310:3315   */\n      dup2\n        /* \"#utility.yul\":3303:3316   */\n      iszero\n        /* \"#utility.yul\":3296:3317   */\n      iszero\n        /* \"#utility.yul\":3285:3317   */\n      swap1\n      pop\n        /* \"#utility.yul\":3233:3323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3329:3445   */\n    tag_297:\n        /* \"#utility.yul\":3399:3420   */\n      tag_360\n        /* \"#utility.yul\":3414:3419   */\n      dup2\n        /* \"#utility.yul\":3399:3420   */\n      tag_296\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":3392:3397   */\n      dup2\n        /* \"#utility.yul\":3389:3421   */\n      eq\n        /* \"#utility.yul\":3379:3439   */\n      tag_361\n      jumpi\n        /* \"#utility.yul\":3435:3436   */\n      0x00\n        /* \"#utility.yul\":3432:3433   */\n      0x00\n        /* \"#utility.yul\":3425:3437   */\n      revert\n        /* \"#utility.yul\":3379:3439   */\n    tag_361:\n        /* \"#utility.yul\":3329:3445   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3451:3584   */\n    tag_298:\n        /* \"#utility.yul\":3494:3499   */\n      0x00\n        /* \"#utility.yul\":3532:3538   */\n      dup2\n        /* \"#utility.yul\":3519:3539   */\n      calldataload\n        /* \"#utility.yul\":3510:3539   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3578   */\n      tag_363\n        /* \"#utility.yul\":3572:3577   */\n      dup2\n        /* \"#utility.yul\":3548:3578   */\n      tag_297\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3451:3584   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3590:4203   */\n    tag_57:\n        /* \"#utility.yul\":3664:3670   */\n      0x00\n        /* \"#utility.yul\":3672:3678   */\n      0x00\n        /* \"#utility.yul\":3680:3686   */\n      0x00\n        /* \"#utility.yul\":3729:3731   */\n      0x60\n        /* \"#utility.yul\":3717:3726   */\n      dup5\n        /* \"#utility.yul\":3708:3715   */\n      dup7\n        /* \"#utility.yul\":3704:3727   */\n      sub\n        /* \"#utility.yul\":3700:3732   */\n      slt\n        /* \"#utility.yul\":3697:3816   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":3735:3814   */\n      tag_366\n      tag_286\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":3697:3816   */\n    tag_365:\n        /* \"#utility.yul\":3855:3856   */\n      0x00\n        /* \"#utility.yul\":3880:3933   */\n      tag_367\n        /* \"#utility.yul\":3925:3932   */\n      dup7\n        /* \"#utility.yul\":3916:3922   */\n      dup3\n        /* \"#utility.yul\":3905:3914   */\n      dup8\n        /* \"#utility.yul\":3901:3923   */\n      add\n        /* \"#utility.yul\":3880:3933   */\n      tag_289\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3870:3933   */\n      swap4\n      pop\n        /* \"#utility.yul\":3826:3943   */\n      pop\n        /* \"#utility.yul\":3982:3984   */\n      0x20\n        /* \"#utility.yul\":4008:4061   */\n      tag_368\n        /* \"#utility.yul\":4053:4060   */\n      dup7\n        /* \"#utility.yul\":4044:4050   */\n      dup3\n        /* \"#utility.yul\":4033:4042   */\n      dup8\n        /* \"#utility.yul\":4029:4051   */\n      add\n        /* \"#utility.yul\":4008:4061   */\n      tag_289\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3998:4061   */\n      swap3\n      pop\n        /* \"#utility.yul\":3953:4071   */\n      pop\n        /* \"#utility.yul\":4110:4112   */\n      0x40\n        /* \"#utility.yul\":4136:4186   */\n      tag_369\n        /* \"#utility.yul\":4178:4185   */\n      dup7\n        /* \"#utility.yul\":4169:4175   */\n      dup3\n        /* \"#utility.yul\":4158:4167   */\n      dup8\n        /* \"#utility.yul\":4154:4176   */\n      add\n        /* \"#utility.yul\":4136:4186   */\n      tag_298\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4126:4186   */\n      swap2\n      pop\n        /* \"#utility.yul\":4081:4196   */\n      pop\n        /* \"#utility.yul\":3590:4203   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4209:4305   */\n    tag_299:\n        /* \"#utility.yul\":4246:4253   */\n      0x00\n        /* \"#utility.yul\":4275:4299   */\n      tag_371\n        /* \"#utility.yul\":4293:4298   */\n      dup3\n        /* \"#utility.yul\":4275:4299   */\n      tag_290\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4264:4299   */\n      swap1\n      pop\n        /* \"#utility.yul\":4209:4305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4311:4421   */\n    tag_300:\n        /* \"#utility.yul\":4362:4369   */\n      0x00\n        /* \"#utility.yul\":4391:4415   */\n      tag_373\n        /* \"#utility.yul\":4409:4414   */\n      dup3\n        /* \"#utility.yul\":4391:4415   */\n      tag_299\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4380:4415   */\n      swap1\n      pop\n        /* \"#utility.yul\":4311:4421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4427:4577   */\n    tag_301:\n        /* \"#utility.yul\":4514:4552   */\n      tag_375\n        /* \"#utility.yul\":4546:4551   */\n      dup2\n        /* \"#utility.yul\":4514:4552   */\n      tag_300\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4504:4553   */\n      eq\n        /* \"#utility.yul\":4494:4571   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":4567:4568   */\n      0x00\n        /* \"#utility.yul\":4564:4565   */\n      0x00\n        /* \"#utility.yul\":4557:4569   */\n      revert\n        /* \"#utility.yul\":4494:4571   */\n    tag_376:\n        /* \"#utility.yul\":4427:4577   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4583:4750   */\n    tag_302:\n        /* \"#utility.yul\":4643:4648   */\n      0x00\n        /* \"#utility.yul\":4681:4687   */\n      dup2\n        /* \"#utility.yul\":4668:4688   */\n      calldataload\n        /* \"#utility.yul\":4659:4688   */\n      swap1\n      pop\n        /* \"#utility.yul\":4697:4744   */\n      tag_378\n        /* \"#utility.yul\":4738:4743   */\n      dup2\n        /* \"#utility.yul\":4697:4744   */\n      tag_301\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":4583:4750   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4756:5397   */\n    tag_80:\n        /* \"#utility.yul\":4844:4850   */\n      0x00\n        /* \"#utility.yul\":4852:4858   */\n      0x00\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4909:4911   */\n      0x60\n        /* \"#utility.yul\":4897:4906   */\n      dup5\n        /* \"#utility.yul\":4888:4895   */\n      dup7\n        /* \"#utility.yul\":4884:4907   */\n      sub\n        /* \"#utility.yul\":4880:4912   */\n      slt\n        /* \"#utility.yul\":4877:4996   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":4915:4994   */\n      tag_381\n      tag_286\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":4877:4996   */\n    tag_380:\n        /* \"#utility.yul\":5035:5036   */\n      0x00\n        /* \"#utility.yul\":5060:5113   */\n      tag_382\n        /* \"#utility.yul\":5105:5112   */\n      dup7\n        /* \"#utility.yul\":5096:5102   */\n      dup3\n        /* \"#utility.yul\":5085:5094   */\n      dup8\n        /* \"#utility.yul\":5081:5103   */\n      add\n        /* \"#utility.yul\":5060:5113   */\n      tag_289\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5050:5113   */\n      swap4\n      pop\n        /* \"#utility.yul\":5006:5123   */\n      pop\n        /* \"#utility.yul\":5162:5164   */\n      0x20\n        /* \"#utility.yul\":5188:5255   */\n      tag_383\n        /* \"#utility.yul\":5247:5254   */\n      dup7\n        /* \"#utility.yul\":5238:5244   */\n      dup3\n        /* \"#utility.yul\":5227:5236   */\n      dup8\n        /* \"#utility.yul\":5223:5245   */\n      add\n        /* \"#utility.yul\":5188:5255   */\n      tag_302\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5178:5255   */\n      swap3\n      pop\n        /* \"#utility.yul\":5133:5265   */\n      pop\n        /* \"#utility.yul\":5304:5306   */\n      0x40\n        /* \"#utility.yul\":5330:5380   */\n      tag_384\n        /* \"#utility.yul\":5372:5379   */\n      dup7\n        /* \"#utility.yul\":5363:5369   */\n      dup3\n        /* \"#utility.yul\":5352:5361   */\n      dup8\n        /* \"#utility.yul\":5348:5370   */\n      add\n        /* \"#utility.yul\":5330:5380   */\n      tag_298\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5320:5380   */\n      swap2\n      pop\n        /* \"#utility.yul\":5275:5390   */\n      pop\n        /* \"#utility.yul\":4756:5397   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5403:5521   */\n    tag_303:\n        /* \"#utility.yul\":5490:5514   */\n      tag_386\n        /* \"#utility.yul\":5508:5513   */\n      dup2\n        /* \"#utility.yul\":5490:5514   */\n      tag_299\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5485:5488   */\n      dup3\n        /* \"#utility.yul\":5478:5515   */\n      mstore\n        /* \"#utility.yul\":5403:5521   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5527:5749   */\n    tag_91:\n        /* \"#utility.yul\":5620:5624   */\n      0x00\n        /* \"#utility.yul\":5658:5660   */\n      0x20\n        /* \"#utility.yul\":5647:5656   */\n      dup3\n        /* \"#utility.yul\":5643:5661   */\n      add\n        /* \"#utility.yul\":5635:5661   */\n      swap1\n      pop\n        /* \"#utility.yul\":5671:5742   */\n      tag_388\n        /* \"#utility.yul\":5739:5740   */\n      0x00\n        /* \"#utility.yul\":5728:5737   */\n      dup4\n        /* \"#utility.yul\":5724:5741   */\n      add\n        /* \"#utility.yul\":5715:5721   */\n      dup5\n        /* \"#utility.yul\":5671:5742   */\n      tag_303\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":5527:5749   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5755:5877   */\n    tag_304:\n        /* \"#utility.yul\":5828:5852   */\n      tag_390\n        /* \"#utility.yul\":5846:5851   */\n      dup2\n        /* \"#utility.yul\":5828:5852   */\n      tag_299\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5821:5826   */\n      dup2\n        /* \"#utility.yul\":5818:5853   */\n      eq\n        /* \"#utility.yul\":5808:5871   */\n      tag_391\n      jumpi\n        /* \"#utility.yul\":5867:5868   */\n      0x00\n        /* \"#utility.yul\":5864:5865   */\n      0x00\n        /* \"#utility.yul\":5857:5869   */\n      revert\n        /* \"#utility.yul\":5808:5871   */\n    tag_391:\n        /* \"#utility.yul\":5755:5877   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5883:6022   */\n    tag_305:\n        /* \"#utility.yul\":5929:5934   */\n      0x00\n        /* \"#utility.yul\":5967:5973   */\n      dup2\n        /* \"#utility.yul\":5954:5974   */\n      calldataload\n        /* \"#utility.yul\":5945:5974   */\n      swap1\n      pop\n        /* \"#utility.yul\":5983:6016   */\n      tag_393\n        /* \"#utility.yul\":6010:6015   */\n      dup2\n        /* \"#utility.yul\":5983:6016   */\n      tag_304\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5883:6022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6028:6502   */\n    tag_101:\n        /* \"#utility.yul\":6096:6102   */\n      0x00\n        /* \"#utility.yul\":6104:6110   */\n      0x00\n        /* \"#utility.yul\":6153:6155   */\n      0x40\n        /* \"#utility.yul\":6141:6150   */\n      dup4\n        /* \"#utility.yul\":6132:6139   */\n      dup6\n        /* \"#utility.yul\":6128:6151   */\n      sub\n        /* \"#utility.yul\":6124:6156   */\n      slt\n        /* \"#utility.yul\":6121:6240   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":6159:6238   */\n      tag_396\n      tag_286\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6121:6240   */\n    tag_395:\n        /* \"#utility.yul\":6279:6280   */\n      0x00\n        /* \"#utility.yul\":6304:6357   */\n      tag_397\n        /* \"#utility.yul\":6349:6356   */\n      dup6\n        /* \"#utility.yul\":6340:6346   */\n      dup3\n        /* \"#utility.yul\":6329:6338   */\n      dup7\n        /* \"#utility.yul\":6325:6347   */\n      add\n        /* \"#utility.yul\":6304:6357   */\n      tag_289\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6294:6357   */\n      swap3\n      pop\n        /* \"#utility.yul\":6250:6367   */\n      pop\n        /* \"#utility.yul\":6406:6408   */\n      0x20\n        /* \"#utility.yul\":6432:6485   */\n      tag_398\n        /* \"#utility.yul\":6477:6484   */\n      dup6\n        /* \"#utility.yul\":6468:6474   */\n      dup3\n        /* \"#utility.yul\":6457:6466   */\n      dup7\n        /* \"#utility.yul\":6453:6475   */\n      add\n        /* \"#utility.yul\":6432:6485   */\n      tag_305\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6422:6485   */\n      swap2\n      pop\n        /* \"#utility.yul\":6377:6495   */\n      pop\n        /* \"#utility.yul\":6028:6502   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6508:6840   */\n    tag_104:\n        /* \"#utility.yul\":6629:6633   */\n      0x00\n        /* \"#utility.yul\":6667:6669   */\n      0x40\n        /* \"#utility.yul\":6656:6665   */\n      dup3\n        /* \"#utility.yul\":6652:6670   */\n      add\n        /* \"#utility.yul\":6644:6670   */\n      swap1\n      pop\n        /* \"#utility.yul\":6680:6751   */\n      tag_400\n        /* \"#utility.yul\":6748:6749   */\n      0x00\n        /* \"#utility.yul\":6737:6746   */\n      dup4\n        /* \"#utility.yul\":6733:6750   */\n      add\n        /* \"#utility.yul\":6724:6730   */\n      dup6\n        /* \"#utility.yul\":6680:6751   */\n      tag_284\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":6761:6833   */\n      tag_401\n        /* \"#utility.yul\":6829:6831   */\n      0x20\n        /* \"#utility.yul\":6818:6827   */\n      dup4\n        /* \"#utility.yul\":6814:6832   */\n      add\n        /* \"#utility.yul\":6805:6811   */\n      dup5\n        /* \"#utility.yul\":6761:6833   */\n      tag_284\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":6508:6840   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6846:6991   */\n    tag_306:\n        /* \"#utility.yul\":6915:6924   */\n      0x00\n        /* \"#utility.yul\":6948:6985   */\n      tag_403\n        /* \"#utility.yul\":6979:6984   */\n      dup3\n        /* \"#utility.yul\":6948:6985   */\n      tag_293\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6935:6985   */\n      swap1\n      pop\n        /* \"#utility.yul\":6846:6991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6997:7166   */\n    tag_307:\n        /* \"#utility.yul\":7103:7159   */\n      tag_405\n        /* \"#utility.yul\":7153:7158   */\n      dup2\n        /* \"#utility.yul\":7103:7159   */\n      tag_306\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7098:7101   */\n      dup3\n        /* \"#utility.yul\":7091:7160   */\n      mstore\n        /* \"#utility.yul\":6997:7166   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7172:7432   */\n    tag_111:\n        /* \"#utility.yul\":7284:7288   */\n      0x00\n        /* \"#utility.yul\":7322:7324   */\n      0x20\n        /* \"#utility.yul\":7311:7320   */\n      dup3\n        /* \"#utility.yul\":7307:7325   */\n      add\n        /* \"#utility.yul\":7299:7325   */\n      swap1\n      pop\n        /* \"#utility.yul\":7335:7425   */\n      tag_407\n        /* \"#utility.yul\":7422:7423   */\n      0x00\n        /* \"#utility.yul\":7411:7420   */\n      dup4\n        /* \"#utility.yul\":7407:7424   */\n      add\n        /* \"#utility.yul\":7398:7404   */\n      dup5\n        /* \"#utility.yul\":7335:7425   */\n      tag_307\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7172:7432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7438:7767   */\n    tag_117:\n        /* \"#utility.yul\":7497:7503   */\n      0x00\n        /* \"#utility.yul\":7546:7548   */\n      0x20\n        /* \"#utility.yul\":7534:7543   */\n      dup3\n        /* \"#utility.yul\":7525:7532   */\n      dup5\n        /* \"#utility.yul\":7521:7544   */\n      sub\n        /* \"#utility.yul\":7517:7549   */\n      slt\n        /* \"#utility.yul\":7514:7633   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":7552:7631   */\n      tag_410\n      tag_286\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7514:7633   */\n    tag_409:\n        /* \"#utility.yul\":7672:7673   */\n      0x00\n        /* \"#utility.yul\":7697:7750   */\n      tag_411\n        /* \"#utility.yul\":7742:7749   */\n      dup5\n        /* \"#utility.yul\":7733:7739   */\n      dup3\n        /* \"#utility.yul\":7722:7731   */\n      dup6\n        /* \"#utility.yul\":7718:7740   */\n      add\n        /* \"#utility.yul\":7697:7750   */\n      tag_305\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":7687:7750   */\n      swap2\n      pop\n        /* \"#utility.yul\":7643:7760   */\n      pop\n        /* \"#utility.yul\":7438:7767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7773:7953   */\n    tag_308:\n        /* \"#utility.yul\":7821:7898   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7818:7819   */\n      0x00\n        /* \"#utility.yul\":7811:7899   */\n      mstore\n        /* \"#utility.yul\":7918:7922   */\n      0x11\n        /* \"#utility.yul\":7915:7916   */\n      0x04\n        /* \"#utility.yul\":7908:7923   */\n      mstore\n        /* \"#utility.yul\":7942:7946   */\n      0x24\n        /* \"#utility.yul\":7939:7940   */\n      0x00\n        /* \"#utility.yul\":7932:7947   */\n      revert\n        /* \"#utility.yul\":7959:8150   */\n    tag_124:\n        /* \"#utility.yul\":7999:8002   */\n      0x00\n        /* \"#utility.yul\":8018:8038   */\n      tag_414\n        /* \"#utility.yul\":8036:8037   */\n      dup3\n        /* \"#utility.yul\":8018:8038   */\n      tag_283\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8013:8038   */\n      swap2\n      pop\n        /* \"#utility.yul\":8052:8072   */\n      tag_415\n        /* \"#utility.yul\":8070:8071   */\n      dup4\n        /* \"#utility.yul\":8052:8072   */\n      tag_283\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8047:8072   */\n      swap3\n      pop\n        /* \"#utility.yul\":8095:8096   */\n      dup3\n        /* \"#utility.yul\":8092:8093   */\n      dup3\n        /* \"#utility.yul\":8088:8097   */\n      add\n        /* \"#utility.yul\":8081:8097   */\n      swap1\n      pop\n        /* \"#utility.yul\":8116:8119   */\n      dup1\n        /* \"#utility.yul\":8113:8114   */\n      dup3\n        /* \"#utility.yul\":8110:8120   */\n      gt\n        /* \"#utility.yul\":8107:8143   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":8123:8141   */\n      tag_417\n      tag_308\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8107:8143   */\n    tag_416:\n        /* \"#utility.yul\":7959:8150   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8156:8325   */\n    tag_309:\n        /* \"#utility.yul\":8240:8251   */\n      0x00\n        /* \"#utility.yul\":8274:8280   */\n      dup3\n        /* \"#utility.yul\":8269:8272   */\n      dup3\n        /* \"#utility.yul\":8262:8281   */\n      mstore\n        /* \"#utility.yul\":8314:8318   */\n      0x20\n        /* \"#utility.yul\":8309:8312   */\n      dup3\n        /* \"#utility.yul\":8305:8319   */\n      add\n        /* \"#utility.yul\":8290:8319   */\n      swap1\n      pop\n        /* \"#utility.yul\":8156:8325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8331:8490   */\n    tag_310:\n        /* \"#utility.yul\":8471:8482   */\n      0x546f6f206561726c790000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8467:8468   */\n      0x00\n        /* \"#utility.yul\":8459:8465   */\n      dup3\n        /* \"#utility.yul\":8455:8469   */\n      add\n        /* \"#utility.yul\":8448:8483   */\n      mstore\n        /* \"#utility.yul\":8331:8490   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8496:8861   */\n    tag_311:\n        /* \"#utility.yul\":8638:8641   */\n      0x00\n        /* \"#utility.yul\":8659:8725   */\n      tag_421\n        /* \"#utility.yul\":8723:8724   */\n      0x09\n        /* \"#utility.yul\":8718:8721   */\n      dup4\n        /* \"#utility.yul\":8659:8725   */\n      tag_309\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8652:8725   */\n      swap2\n      pop\n        /* \"#utility.yul\":8734:8827   */\n      tag_422\n        /* \"#utility.yul\":8823:8826   */\n      dup3\n        /* \"#utility.yul\":8734:8827   */\n      tag_310\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8852:8854   */\n      0x20\n        /* \"#utility.yul\":8847:8850   */\n      dup3\n        /* \"#utility.yul\":8843:8855   */\n      add\n        /* \"#utility.yul\":8836:8855   */\n      swap1\n      pop\n        /* \"#utility.yul\":8496:8861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8867:9286   */\n    tag_127:\n        /* \"#utility.yul\":9033:9037   */\n      0x00\n        /* \"#utility.yul\":9071:9073   */\n      0x20\n        /* \"#utility.yul\":9060:9069   */\n      dup3\n        /* \"#utility.yul\":9056:9074   */\n      add\n        /* \"#utility.yul\":9048:9074   */\n      swap1\n      pop\n        /* \"#utility.yul\":9120:9129   */\n      dup2\n        /* \"#utility.yul\":9114:9118   */\n      dup2\n        /* \"#utility.yul\":9110:9130   */\n      sub\n        /* \"#utility.yul\":9106:9107   */\n      0x00\n        /* \"#utility.yul\":9095:9104   */\n      dup4\n        /* \"#utility.yul\":9091:9108   */\n      add\n        /* \"#utility.yul\":9084:9131   */\n      mstore\n        /* \"#utility.yul\":9148:9279   */\n      tag_424\n        /* \"#utility.yul\":9274:9278   */\n      dup2\n        /* \"#utility.yul\":9148:9279   */\n      tag_311\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":9140:9279   */\n      swap1\n      pop\n        /* \"#utility.yul\":8867:9286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9292:9472   */\n    tag_130:\n        /* \"#utility.yul\":9340:9417   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9330:9418   */\n      mstore\n        /* \"#utility.yul\":9437:9441   */\n      0x32\n        /* \"#utility.yul\":9434:9435   */\n      0x04\n        /* \"#utility.yul\":9427:9442   */\n      mstore\n        /* \"#utility.yul\":9461:9465   */\n      0x24\n        /* \"#utility.yul\":9458:9459   */\n      0x00\n        /* \"#utility.yul\":9451:9466   */\n      revert\n        /* \"#utility.yul\":9478:9646   */\n    tag_312:\n        /* \"#utility.yul\":9618:9638   */\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n        /* \"#utility.yul\":9614:9615   */\n      0x00\n        /* \"#utility.yul\":9606:9612   */\n      dup3\n        /* \"#utility.yul\":9602:9616   */\n      add\n        /* \"#utility.yul\":9595:9639   */\n      mstore\n        /* \"#utility.yul\":9478:9646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9652:10018   */\n    tag_313:\n        /* \"#utility.yul\":9794:9797   */\n      0x00\n        /* \"#utility.yul\":9815:9882   */\n      tag_428\n        /* \"#utility.yul\":9879:9881   */\n      0x12\n        /* \"#utility.yul\":9874:9877   */\n      dup4\n        /* \"#utility.yul\":9815:9882   */\n      tag_309\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9808:9882   */\n      swap2\n      pop\n        /* \"#utility.yul\":9891:9984   */\n      tag_429\n        /* \"#utility.yul\":9980:9983   */\n      dup3\n        /* \"#utility.yul\":9891:9984   */\n      tag_312\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":10009:10011   */\n      0x20\n        /* \"#utility.yul\":10004:10007   */\n      dup3\n        /* \"#utility.yul\":10000:10012   */\n      add\n        /* \"#utility.yul\":9993:10012   */\n      swap1\n      pop\n        /* \"#utility.yul\":9652:10018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10024:10443   */\n    tag_134:\n        /* \"#utility.yul\":10190:10194   */\n      0x00\n        /* \"#utility.yul\":10228:10230   */\n      0x20\n        /* \"#utility.yul\":10217:10226   */\n      dup3\n        /* \"#utility.yul\":10213:10231   */\n      add\n        /* \"#utility.yul\":10205:10231   */\n      swap1\n      pop\n        /* \"#utility.yul\":10277:10286   */\n      dup2\n        /* \"#utility.yul\":10271:10275   */\n      dup2\n        /* \"#utility.yul\":10267:10287   */\n      sub\n        /* \"#utility.yul\":10263:10264   */\n      0x00\n        /* \"#utility.yul\":10252:10261   */\n      dup4\n        /* \"#utility.yul\":10248:10265   */\n      add\n        /* \"#utility.yul\":10241:10288   */\n      mstore\n        /* \"#utility.yul\":10305:10436   */\n      tag_431\n        /* \"#utility.yul\":10431:10435   */\n      dup2\n        /* \"#utility.yul\":10305:10436   */\n      tag_313\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":10297:10436   */\n      swap1\n      pop\n        /* \"#utility.yul\":10024:10443   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10449:10859   */\n    tag_137:\n        /* \"#utility.yul\":10489:10496   */\n      0x00\n        /* \"#utility.yul\":10512:10532   */\n      tag_433\n        /* \"#utility.yul\":10530:10531   */\n      dup3\n        /* \"#utility.yul\":10512:10532   */\n      tag_283\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":10507:10532   */\n      swap2\n      pop\n        /* \"#utility.yul\":10546:10566   */\n      tag_434\n        /* \"#utility.yul\":10564:10565   */\n      dup4\n        /* \"#utility.yul\":10546:10566   */\n      tag_283\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10541:10566   */\n      swap3\n      pop\n        /* \"#utility.yul\":10601:10602   */\n      dup3\n        /* \"#utility.yul\":10598:10599   */\n      dup3\n        /* \"#utility.yul\":10594:10603   */\n      mul\n        /* \"#utility.yul\":10623:10653   */\n      tag_435\n        /* \"#utility.yul\":10641:10652   */\n      dup2\n        /* \"#utility.yul\":10623:10653   */\n      tag_283\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10612:10653   */\n      swap2\n      pop\n        /* \"#utility.yul\":10802:10803   */\n      dup3\n        /* \"#utility.yul\":10793:10800   */\n      dup3\n        /* \"#utility.yul\":10789:10804   */\n      div\n        /* \"#utility.yul\":10786:10787   */\n      dup5\n        /* \"#utility.yul\":10783:10805   */\n      eq\n        /* \"#utility.yul\":10763:10764   */\n      dup4\n        /* \"#utility.yul\":10756:10765   */\n      iszero\n        /* \"#utility.yul\":10736:10819   */\n      or\n        /* \"#utility.yul\":10713:10852   */\n      tag_436\n      jumpi\n        /* \"#utility.yul\":10832:10850   */\n      tag_437\n      tag_308\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10713:10852   */\n    tag_436:\n        /* \"#utility.yul\":10497:10859   */\n      pop\n        /* \"#utility.yul\":10449:10859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10865:11045   */\n    tag_314:\n        /* \"#utility.yul\":10913:10990   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10910:10911   */\n      0x00\n        /* \"#utility.yul\":10903:10991   */\n      mstore\n        /* \"#utility.yul\":11010:11014   */\n      0x12\n        /* \"#utility.yul\":11007:11008   */\n      0x04\n        /* \"#utility.yul\":11000:11015   */\n      mstore\n        /* \"#utility.yul\":11034:11038   */\n      0x24\n        /* \"#utility.yul\":11031:11032   */\n      0x00\n        /* \"#utility.yul\":11024:11039   */\n      revert\n        /* \"#utility.yul\":11051:11236   */\n    tag_139:\n        /* \"#utility.yul\":11091:11092   */\n      0x00\n        /* \"#utility.yul\":11108:11128   */\n      tag_440\n        /* \"#utility.yul\":11126:11127   */\n      dup3\n        /* \"#utility.yul\":11108:11128   */\n      tag_283\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":11103:11128   */\n      swap2\n      pop\n        /* \"#utility.yul\":11142:11162   */\n      tag_441\n        /* \"#utility.yul\":11160:11161   */\n      dup4\n        /* \"#utility.yul\":11142:11162   */\n      tag_283\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11137:11162   */\n      swap3\n      pop\n        /* \"#utility.yul\":11181:11182   */\n      dup3\n        /* \"#utility.yul\":11171:11206   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":11186:11204   */\n      tag_443\n      tag_314\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":11171:11206   */\n    tag_442:\n        /* \"#utility.yul\":11228:11229   */\n      dup3\n        /* \"#utility.yul\":11225:11226   */\n      dup3\n        /* \"#utility.yul\":11221:11230   */\n      div\n        /* \"#utility.yul\":11216:11230   */\n      swap1\n      pop\n        /* \"#utility.yul\":11051:11236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11242:11436   */\n    tag_141:\n        /* \"#utility.yul\":11282:11286   */\n      0x00\n        /* \"#utility.yul\":11302:11322   */\n      tag_445\n        /* \"#utility.yul\":11320:11321   */\n      dup3\n        /* \"#utility.yul\":11302:11322   */\n      tag_283\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11297:11322   */\n      swap2\n      pop\n        /* \"#utility.yul\":11336:11356   */\n      tag_446\n        /* \"#utility.yul\":11354:11355   */\n      dup4\n        /* \"#utility.yul\":11336:11356   */\n      tag_283\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11331:11356   */\n      swap3\n      pop\n        /* \"#utility.yul\":11380:11381   */\n      dup3\n        /* \"#utility.yul\":11377:11378   */\n      dup3\n        /* \"#utility.yul\":11373:11382   */\n      sub\n        /* \"#utility.yul\":11365:11382   */\n      swap1\n      pop\n        /* \"#utility.yul\":11404:11405   */\n      dup2\n        /* \"#utility.yul\":11398:11402   */\n      dup2\n        /* \"#utility.yul\":11395:11406   */\n      gt\n        /* \"#utility.yul\":11392:11429   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":11409:11427   */\n      tag_448\n      tag_308\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":11392:11429   */\n    tag_447:\n        /* \"#utility.yul\":11242:11436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11442:11585   */\n    tag_315:\n        /* \"#utility.yul\":11499:11504   */\n      0x00\n        /* \"#utility.yul\":11530:11536   */\n      dup2\n        /* \"#utility.yul\":11524:11537   */\n      mload\n        /* \"#utility.yul\":11515:11537   */\n      swap1\n      pop\n        /* \"#utility.yul\":11546:11579   */\n      tag_450\n        /* \"#utility.yul\":11573:11578   */\n      dup2\n        /* \"#utility.yul\":11546:11579   */\n      tag_288\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11442:11585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11591:11942   */\n    tag_172:\n        /* \"#utility.yul\":11661:11667   */\n      0x00\n        /* \"#utility.yul\":11710:11712   */\n      0x20\n        /* \"#utility.yul\":11698:11707   */\n      dup3\n        /* \"#utility.yul\":11689:11696   */\n      dup5\n        /* \"#utility.yul\":11685:11708   */\n      sub\n        /* \"#utility.yul\":11681:11713   */\n      slt\n        /* \"#utility.yul\":11678:11797   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":11716:11795   */\n      tag_453\n      tag_286\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":11678:11797   */\n    tag_452:\n        /* \"#utility.yul\":11836:11837   */\n      0x00\n        /* \"#utility.yul\":11861:11925   */\n      tag_454\n        /* \"#utility.yul\":11917:11924   */\n      dup5\n        /* \"#utility.yul\":11908:11914   */\n      dup3\n        /* \"#utility.yul\":11897:11906   */\n      dup6\n        /* \"#utility.yul\":11893:11915   */\n      add\n        /* \"#utility.yul\":11861:11925   */\n      tag_315\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":11851:11925   */\n      swap2\n      pop\n        /* \"#utility.yul\":11807:11935   */\n      pop\n        /* \"#utility.yul\":11591:11942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11948:12280   */\n    tag_184:\n        /* \"#utility.yul\":12069:12073   */\n      0x00\n        /* \"#utility.yul\":12107:12109   */\n      0x40\n        /* \"#utility.yul\":12096:12105   */\n      dup3\n        /* \"#utility.yul\":12092:12110   */\n      add\n        /* \"#utility.yul\":12084:12110   */\n      swap1\n      pop\n        /* \"#utility.yul\":12120:12191   */\n      tag_456\n        /* \"#utility.yul\":12188:12189   */\n      0x00\n        /* \"#utility.yul\":12177:12186   */\n      dup4\n        /* \"#utility.yul\":12173:12190   */\n      add\n        /* \"#utility.yul\":12164:12170   */\n      dup6\n        /* \"#utility.yul\":12120:12191   */\n      tag_303\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12201:12273   */\n      tag_457\n        /* \"#utility.yul\":12269:12271   */\n      0x20\n        /* \"#utility.yul\":12258:12267   */\n      dup4\n        /* \"#utility.yul\":12254:12272   */\n      add\n        /* \"#utility.yul\":12245:12251   */\n      dup5\n        /* \"#utility.yul\":12201:12273   */\n      tag_284\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":11948:12280   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12286:12618   */\n    tag_229:\n        /* \"#utility.yul\":12407:12411   */\n      0x00\n        /* \"#utility.yul\":12445:12447   */\n      0x40\n        /* \"#utility.yul\":12434:12443   */\n      dup3\n        /* \"#utility.yul\":12430:12448   */\n      add\n        /* \"#utility.yul\":12422:12448   */\n      swap1\n      pop\n        /* \"#utility.yul\":12458:12529   */\n      tag_459\n        /* \"#utility.yul\":12526:12527   */\n      0x00\n        /* \"#utility.yul\":12515:12524   */\n      dup4\n        /* \"#utility.yul\":12511:12528   */\n      add\n        /* \"#utility.yul\":12502:12508   */\n      dup6\n        /* \"#utility.yul\":12458:12529   */\n      tag_303\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":12539:12611   */\n      tag_460\n        /* \"#utility.yul\":12607:12609   */\n      0x20\n        /* \"#utility.yul\":12596:12605   */\n      dup4\n        /* \"#utility.yul\":12592:12610   */\n      add\n        /* \"#utility.yul\":12583:12589   */\n      dup5\n        /* \"#utility.yul\":12539:12611   */\n      tag_303\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":12286:12618   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12624:12799   */\n    tag_316:\n        /* \"#utility.yul\":12764:12791   */\n      0x416c6c6f77616e6365206e6f74206869676820656e6f75676800000000000000\n        /* \"#utility.yul\":12760:12761   */\n      0x00\n        /* \"#utility.yul\":12752:12758   */\n      dup3\n        /* \"#utility.yul\":12748:12762   */\n      add\n        /* \"#utility.yul\":12741:12792   */\n      mstore\n        /* \"#utility.yul\":12624:12799   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12805:13171   */\n    tag_317:\n        /* \"#utility.yul\":12947:12950   */\n      0x00\n        /* \"#utility.yul\":12968:13035   */\n      tag_463\n        /* \"#utility.yul\":13032:13034   */\n      0x19\n        /* \"#utility.yul\":13027:13030   */\n      dup4\n        /* \"#utility.yul\":12968:13035   */\n      tag_309\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":12961:13035   */\n      swap2\n      pop\n        /* \"#utility.yul\":13044:13137   */\n      tag_464\n        /* \"#utility.yul\":13133:13136   */\n      dup3\n        /* \"#utility.yul\":13044:13137   */\n      tag_316\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":13162:13164   */\n      0x20\n        /* \"#utility.yul\":13157:13160   */\n      dup3\n        /* \"#utility.yul\":13153:13165   */\n      add\n        /* \"#utility.yul\":13146:13165   */\n      swap1\n      pop\n        /* \"#utility.yul\":12805:13171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13177:13596   */\n    tag_235:\n        /* \"#utility.yul\":13343:13347   */\n      0x00\n        /* \"#utility.yul\":13381:13383   */\n      0x20\n        /* \"#utility.yul\":13370:13379   */\n      dup3\n        /* \"#utility.yul\":13366:13384   */\n      add\n        /* \"#utility.yul\":13358:13384   */\n      swap1\n      pop\n        /* \"#utility.yul\":13430:13439   */\n      dup2\n        /* \"#utility.yul\":13424:13428   */\n      dup2\n        /* \"#utility.yul\":13420:13440   */\n      sub\n        /* \"#utility.yul\":13416:13417   */\n      0x00\n        /* \"#utility.yul\":13405:13414   */\n      dup4\n        /* \"#utility.yul\":13401:13418   */\n      add\n        /* \"#utility.yul\":13394:13441   */\n      mstore\n        /* \"#utility.yul\":13458:13589   */\n      tag_466\n        /* \"#utility.yul\":13584:13588   */\n      dup2\n        /* \"#utility.yul\":13458:13589   */\n      tag_317\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":13450:13589   */\n      swap1\n      pop\n        /* \"#utility.yul\":13177:13596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13602:14044   */\n    tag_275:\n        /* \"#utility.yul\":13751:13755   */\n      0x00\n        /* \"#utility.yul\":13789:13791   */\n      0x60\n        /* \"#utility.yul\":13778:13787   */\n      dup3\n        /* \"#utility.yul\":13774:13792   */\n      add\n        /* \"#utility.yul\":13766:13792   */\n      swap1\n      pop\n        /* \"#utility.yul\":13802:13873   */\n      tag_468\n        /* \"#utility.yul\":13870:13871   */\n      0x00\n        /* \"#utility.yul\":13859:13868   */\n      dup4\n        /* \"#utility.yul\":13855:13872   */\n      add\n        /* \"#utility.yul\":13846:13852   */\n      dup7\n        /* \"#utility.yul\":13802:13873   */\n      tag_303\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":13883:13955   */\n      tag_469\n        /* \"#utility.yul\":13951:13953   */\n      0x20\n        /* \"#utility.yul\":13940:13949   */\n      dup4\n        /* \"#utility.yul\":13936:13954   */\n      add\n        /* \"#utility.yul\":13927:13933   */\n      dup6\n        /* \"#utility.yul\":13883:13955   */\n      tag_303\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":13965:14037   */\n      tag_470\n        /* \"#utility.yul\":14033:14035   */\n      0x40\n        /* \"#utility.yul\":14022:14031   */\n      dup4\n        /* \"#utility.yul\":14018:14036   */\n      add\n        /* \"#utility.yul\":14009:14015   */\n      dup5\n        /* \"#utility.yul\":13965:14037   */\n      tag_284\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":13602:14044   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202227a373fc540a7b682224ca800fc24dd6ade251fbe8b159ce32d7703633a74f64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1870": {
									"entryPoint": null,
									"id": 1870,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 286,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_GrandToken_$1742_fromMemory": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_GrandToken_$1742t_uint256t_uint256_fromMemory": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_GrandToken_$1742": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_GrandToken_$1742": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2458:14",
										"nodeType": "YulBlock",
										"src": "0:2458:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "379:81:14",
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nativeSrc": "389:65:14",
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:14",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nativeSrc": "400:54:14",
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:14",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:14",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nativeSrc": "511:51:14",
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nativeSrc": "521:35:14",
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nativeSrc": "532:24:14",
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:14",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:14",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nativeSrc": "632:51:14",
													"nodeType": "YulBlock",
													"src": "632:51:14",
													"statements": [
														{
															"nativeSrc": "642:35:14",
															"nodeType": "YulAssignment",
															"src": "642:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "671:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "653:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:14"
																},
																"nativeSrc": "653:24:14",
																"nodeType": "YulFunctionCall",
																"src": "653:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "642:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_GrandToken_$1742",
												"nativeSrc": "568:115:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "614:5:14",
														"nodeType": "YulTypedName",
														"src": "614:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "624:7:14",
														"nodeType": "YulTypedName",
														"src": "624:7:14",
														"type": ""
													}
												],
												"src": "568:115:14"
											},
											{
												"body": {
													"nativeSrc": "751:98:14",
													"nodeType": "YulBlock",
													"src": "751:98:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "827:16:14",
																"nodeType": "YulBlock",
																"src": "827:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:14",
																					"nodeType": "YulLiteral",
																					"src": "836:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:1:14",
																					"nodeType": "YulLiteral",
																					"src": "839:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "829:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "829:6:14"
																			},
																			"nativeSrc": "829:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "829:12:14"
																		},
																		"nativeSrc": "829:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "829:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "774:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "818:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "818:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_GrandToken_$1742",
																					"nativeSrc": "781:36:14",
																					"nodeType": "YulIdentifier",
																					"src": "781:36:14"
																				},
																				"nativeSrc": "781:43:14",
																				"nodeType": "YulFunctionCall",
																				"src": "781:43:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "771:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:14"
																		},
																		"nativeSrc": "771:54:14",
																		"nodeType": "YulFunctionCall",
																		"src": "771:54:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "764:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:14"
																},
																"nativeSrc": "764:62:14",
																"nodeType": "YulFunctionCall",
																"src": "764:62:14"
															},
															"nativeSrc": "761:82:14",
															"nodeType": "YulIf",
															"src": "761:82:14"
														}
													]
												},
												"name": "validator_revert_t_contract$_GrandToken_$1742",
												"nativeSrc": "689:160:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "744:5:14",
														"nodeType": "YulTypedName",
														"src": "744:5:14",
														"type": ""
													}
												],
												"src": "689:160:14"
											},
											{
												"body": {
													"nativeSrc": "937:99:14",
													"nodeType": "YulBlock",
													"src": "937:99:14",
													"statements": [
														{
															"nativeSrc": "947:22:14",
															"nodeType": "YulAssignment",
															"src": "947:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "962:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "956:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "956:5:14"
																},
																"nativeSrc": "956:13:14",
																"nodeType": "YulFunctionCall",
																"src": "956:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "947:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "947:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_GrandToken_$1742",
																	"nativeSrc": "978:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "978:45:14"
																},
																"nativeSrc": "978:52:14",
																"nodeType": "YulFunctionCall",
																"src": "978:52:14"
															},
															"nativeSrc": "978:52:14",
															"nodeType": "YulExpressionStatement",
															"src": "978:52:14"
														}
													]
												},
												"name": "abi_decode_t_contract$_GrandToken_$1742_fromMemory",
												"nativeSrc": "855:181:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "915:6:14",
														"nodeType": "YulTypedName",
														"src": "915:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "923:3:14",
														"nodeType": "YulTypedName",
														"src": "923:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "931:5:14",
														"nodeType": "YulTypedName",
														"src": "931:5:14",
														"type": ""
													}
												],
												"src": "855:181:14"
											},
											{
												"body": {
													"nativeSrc": "1087:32:14",
													"nodeType": "YulBlock",
													"src": "1087:32:14",
													"statements": [
														{
															"nativeSrc": "1097:16:14",
															"nodeType": "YulAssignment",
															"src": "1097:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "1108:5:14",
																"nodeType": "YulIdentifier",
																"src": "1108:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1097:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1097:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1042:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1069:5:14",
														"nodeType": "YulTypedName",
														"src": "1069:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1079:7:14",
														"nodeType": "YulTypedName",
														"src": "1079:7:14",
														"type": ""
													}
												],
												"src": "1042:77:14"
											},
											{
												"body": {
													"nativeSrc": "1168:79:14",
													"nodeType": "YulBlock",
													"src": "1168:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1225:16:14",
																"nodeType": "YulBlock",
																"src": "1225:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1234:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1234:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1237:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1237:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1227:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1227:6:14"
																			},
																			"nativeSrc": "1227:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1227:12:14"
																		},
																		"nativeSrc": "1227:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1227:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1191:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1191:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1216:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1216:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1198:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "1198:17:14"
																				},
																				"nativeSrc": "1198:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1198:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1188:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1188:2:14"
																		},
																		"nativeSrc": "1188:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1188:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1181:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1181:6:14"
																},
																"nativeSrc": "1181:43:14",
																"nodeType": "YulFunctionCall",
																"src": "1181:43:14"
															},
															"nativeSrc": "1178:63:14",
															"nodeType": "YulIf",
															"src": "1178:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1125:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1161:5:14",
														"nodeType": "YulTypedName",
														"src": "1161:5:14",
														"type": ""
													}
												],
												"src": "1125:122:14"
											},
											{
												"body": {
													"nativeSrc": "1316:80:14",
													"nodeType": "YulBlock",
													"src": "1316:80:14",
													"statements": [
														{
															"nativeSrc": "1326:22:14",
															"nodeType": "YulAssignment",
															"src": "1326:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1341:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1341:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1335:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1335:5:14"
																},
																"nativeSrc": "1335:13:14",
																"nodeType": "YulFunctionCall",
																"src": "1335:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1326:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1326:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1384:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1384:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1357:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "1357:26:14"
																},
																"nativeSrc": "1357:33:14",
																"nodeType": "YulFunctionCall",
																"src": "1357:33:14"
															},
															"nativeSrc": "1357:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "1357:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1253:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1294:6:14",
														"nodeType": "YulTypedName",
														"src": "1294:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1302:3:14",
														"nodeType": "YulTypedName",
														"src": "1302:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1310:5:14",
														"nodeType": "YulTypedName",
														"src": "1310:5:14",
														"type": ""
													}
												],
												"src": "1253:143:14"
											},
											{
												"body": {
													"nativeSrc": "1532:571:14",
													"nodeType": "YulBlock",
													"src": "1532:571:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1578:83:14",
																"nodeType": "YulBlock",
																"src": "1578:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1580:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "1580:77:14"
																			},
																			"nativeSrc": "1580:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1580:79:14"
																		},
																		"nativeSrc": "1580:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1580:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1553:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1553:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1562:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1549:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1549:3:14"
																		},
																		"nativeSrc": "1549:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1549:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1574:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1574:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1545:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1545:3:14"
																},
																"nativeSrc": "1545:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1545:32:14"
															},
															"nativeSrc": "1542:119:14",
															"nodeType": "YulIf",
															"src": "1542:119:14"
														},
														{
															"nativeSrc": "1671:147:14",
															"nodeType": "YulBlock",
															"src": "1671:147:14",
															"statements": [
																{
																	"nativeSrc": "1686:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1686:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1700:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1700:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1690:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1690:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1715:93:14",
																	"nodeType": "YulAssignment",
																	"src": "1715:93:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1780:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1780:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1791:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1791:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1776:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:14"
																				},
																				"nativeSrc": "1776:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1776:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1800:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1800:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_GrandToken_$1742_fromMemory",
																			"nativeSrc": "1725:50:14",
																			"nodeType": "YulIdentifier",
																			"src": "1725:50:14"
																		},
																		"nativeSrc": "1725:83:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1725:83:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1715:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1715:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1828:129:14",
															"nodeType": "YulBlock",
															"src": "1828:129:14",
															"statements": [
																{
																	"nativeSrc": "1843:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1843:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1857:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1857:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1847:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1847:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1873:74:14",
																	"nodeType": "YulAssignment",
																	"src": "1873:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1919:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1919:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1930:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1930:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1915:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1915:3:14"
																				},
																				"nativeSrc": "1915:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1915:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1939:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1939:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1883:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "1883:31:14"
																		},
																		"nativeSrc": "1883:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1883:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1873:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1873:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1967:129:14",
															"nodeType": "YulBlock",
															"src": "1967:129:14",
															"statements": [
																{
																	"nativeSrc": "1982:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1982:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1996:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1996:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1986:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1986:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2012:74:14",
																	"nodeType": "YulAssignment",
																	"src": "2012:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2058:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2058:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2069:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2069:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2054:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2054:3:14"
																				},
																				"nativeSrc": "2054:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2054:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2078:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2078:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2022:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "2022:31:14"
																		},
																		"nativeSrc": "2022:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2022:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2012:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2012:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_GrandToken_$1742t_uint256t_uint256_fromMemory",
												"nativeSrc": "1402:701:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1486:9:14",
														"nodeType": "YulTypedName",
														"src": "1486:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1497:7:14",
														"nodeType": "YulTypedName",
														"src": "1497:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1509:6:14",
														"nodeType": "YulTypedName",
														"src": "1509:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1517:6:14",
														"nodeType": "YulTypedName",
														"src": "1517:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1525:6:14",
														"nodeType": "YulTypedName",
														"src": "1525:6:14",
														"type": ""
													}
												],
												"src": "1402:701:14"
											},
											{
												"body": {
													"nativeSrc": "2174:53:14",
													"nodeType": "YulBlock",
													"src": "2174:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2191:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2191:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2214:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2214:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2196:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "2196:17:14"
																		},
																		"nativeSrc": "2196:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2196:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2184:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2184:6:14"
																},
																"nativeSrc": "2184:37:14",
																"nodeType": "YulFunctionCall",
																"src": "2184:37:14"
															},
															"nativeSrc": "2184:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "2184:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2109:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2162:5:14",
														"nodeType": "YulTypedName",
														"src": "2162:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2169:3:14",
														"nodeType": "YulTypedName",
														"src": "2169:3:14",
														"type": ""
													}
												],
												"src": "2109:118:14"
											},
											{
												"body": {
													"nativeSrc": "2331:124:14",
													"nodeType": "YulBlock",
													"src": "2331:124:14",
													"statements": [
														{
															"nativeSrc": "2341:26:14",
															"nodeType": "YulAssignment",
															"src": "2341:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2353:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2353:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2364:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2364:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2349:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2349:3:14"
																},
																"nativeSrc": "2349:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2349:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2341:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2341:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2421:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2421:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2434:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2434:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2445:1:14",
																				"nodeType": "YulLiteral",
																				"src": "2445:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2430:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:14"
																		},
																		"nativeSrc": "2430:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2430:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2377:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "2377:43:14"
																},
																"nativeSrc": "2377:71:14",
																"nodeType": "YulFunctionCall",
																"src": "2377:71:14"
															},
															"nativeSrc": "2377:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "2377:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2233:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2303:9:14",
														"nodeType": "YulTypedName",
														"src": "2303:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2315:6:14",
														"nodeType": "YulTypedName",
														"src": "2315:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2326:4:14",
														"nodeType": "YulTypedName",
														"src": "2326:4:14",
														"type": ""
													}
												],
												"src": "2233:222:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_GrandToken_$1742(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_GrandToken_$1742(value) {\n        if iszero(eq(value, cleanup_t_contract$_GrandToken_$1742(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_GrandToken_$1742_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_GrandToken_$1742(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_GrandToken_$1742t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_GrandToken_$1742_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f6006555f600955348015610017575f5ffd5b50604051611f0a380380611f0a83398181016040528101906100399190610281565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100aa575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a191906102e0565b60405180910390fd5b6100b98161011e60201b60201c565b508260015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816004819055508060038190555043600a8190555042600b819055505050506102f9565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61020c826101e3565b9050919050565b5f61021d82610202565b9050919050565b61022d81610213565b8114610237575f5ffd5b50565b5f8151905061024881610224565b92915050565b5f819050919050565b6102608161024e565b811461026a575f5ffd5b50565b5f8151905061027b81610257565b92915050565b5f5f5f60608486031215610298576102976101df565b5b5f6102a58682870161023a565b93505060206102b68682870161026d565b92505060406102c78682870161026d565b9150509250925092565b6102da81610202565b82525050565b5f6020820190506102f35f8301846102d1565b92915050565b611c04806103065f395ff3fe608060405234801561000f575f5ffd5b5060043610610171575f3560e01c8063715018a6116100dc5780638dbb1e3a11610095578063b99265571161006f578063b9926557146103f3578063d129459b14610411578063e2bbb1581461042f578063f2fde38b1461044b57610171565b80638dbb1e3a14610374578063913e77ad146103a457806393f1a40b146103c257610171565b8063715018a6146102d657806378e97925146102e05780637abceffd146102fe57806383e271851461031a5780638aa28550146103385780638da5cb5b1461035657610171565b806346ca6bea1161012e57806346ca6bea1461023c57806348cd4cb11461025857806351eb05a6146102765780635312ea8e1461029257806357e78adc146102ae578063630b5ba1146102cc57610171565b8063081e3eda146101755780631526fe271461019357806317caf6f1146101c65780631aed6553146101e4578063212f14cc14610202578063441a3e7014610220575b5f5ffd5b61017d610467565b60405161018a91906114bd565b60405180910390f35b6101ad60048036038101906101a89190611504565b610473565b6040516101bd94939291906115a9565b60405180910390f35b6101ce6104cd565b6040516101db91906114bd565b60405180910390f35b6101ec6104d3565b6040516101f991906114bd565b60405180910390f35b61020a6104d9565b60405161021791906114bd565b60405180910390f35b61023a600480360381019061023591906115ec565b6104df565b005b6102566004803603810190610251919061165f565b610790565b005b610260610816565b60405161026d91906114bd565b60405180910390f35b610290600480360381019061028b9190611504565b61081c565b005b6102ac60048036038101906102a79190611504565b610a33565b005b6102b6610b68565b6040516102c391906114bd565b60405180910390f35b6102d4610b6e565b005b6102de610b9c565b005b6102e8610baf565b6040516102f591906114bd565b60405180910390f35b610318600480360381019061031391906116fb565b610bb5565b005b610322610ca8565b60405161032f91906114bd565b60405180910390f35b610340610cae565b60405161034d91906114bd565b60405180910390f35b61035e610cb3565b60405161036b919061175a565b60405180910390f35b61038e600480360381019061038991906115ec565b610cda565b60405161039b91906114bd565b60405180910390f35b6103ac610d5a565b6040516103b9919061175a565b60405180910390f35b6103dc60048036038101906103d7919061179d565b610d7f565b6040516103ea9291906117db565b60405180910390f35b6103fb610daa565b60405161040891906114bd565b60405180910390f35b610419610db9565b6040516104269190611822565b60405180910390f35b610449600480360381019061044491906115ec565b610dde565b005b6104656004803603810190610460919061183b565b611136565b005b5f600780549050905090565b60078181548110610482575f80fd5b905f5260205f2090600402015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60095481565b60035481565b60045481565b6234bc00600b546104f09190611893565b4211610531576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052890611920565b60405180910390fd5b5f600783815481106105465761054561193e565b5b905f5260205f20906004020190505f60085f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905082815f015410156105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e0906119b5565b60405180910390fd5b6105f28461081c565b5f816001015464e8d4a510008460030154845f015461061191906119d3565b61061b9190611a41565b6106259190611a71565b905083825f01546106369190611a71565b825f018190555064e8d4a510008360030154835f015461065691906119d3565b6106609190611a41565b82600101819055506106b4338260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111ba9092919063ffffffff16565b6107013385855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111ba9092919063ffffffff16565b84835f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb5678760405161078191906114bd565b60405180910390a45050505050565b610798611239565b80156107a7576107a6610b6e565b5b81600784815481106107bc576107bb61193e565b5b905f5260205f209060040201600101546009546107d99190611a71565b6107e39190611893565b60098190555081600784815481106107fe576107fd61193e565b5b905f5260205f20906004020160010181905550505050565b600a5481565b5f600782815481106108315761083061193e565b5b905f5260205f2090600402019050806002015443116108505750610a30565b5f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108ac919061175a565b602060405180830381865afa1580156108c7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108eb9190611ab8565b90505f8103610904574382600201819055505050610a30565b5f600954836001015460045461091e866002015443610cda565b61092891906119d3565b61093291906119d3565b61093c9190611a41565b90508164e8d4a510008261095091906119d3565b61095a9190611a41565b83600301546109699190611893565b83600301819055504383600201819055506a037a172815e4355715555560055411610a2c578060055461099c9190611893565b60058190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b81526004016109fe929190611ae3565b5f604051808303815f87803b158015610a15575f5ffd5b505af1158015610a27573d5f5f3e3d5ffd5b505050505b5050505b50565b5f60078281548110610a4857610a4761193e565b5b905f5260205f20906004020190505f60085f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015490505f826001015490505f835f01819055505f8360010181905550610b123383865f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111ba9092919063ffffffff16565b843373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059583604051610b5991906114bd565b60405180910390a35050505050565b60065481565b5f60078054905090505f5f90505b81811015610b9857610b8d8161081c565b806001019050610b7c565b5050565b610ba4611239565b610bad5f6112c0565b565b600b5481565b610bbd611239565b8015610bcc57610bcb610b6e565b5b82600954610bda9190611893565b600981905550600760405180608001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018581526020014381526020015f815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301555050505050565b60055481565b600381565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f6003548211610d035760038383610cf29190611a71565b610cfc91906119d3565b9050610d54565b6003548310610d1f578282610d189190611a71565b9050610d54565b60035482610d2d9190611a71565b600384600354610d3d9190611a71565b610d4791906119d3565b610d519190611893565b90505b92915050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6008602052815f5260405f20602052805f5260405f205f9150915050805f0154908060010154905082565b6a037a172815e4355715555581565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60078381548110610df357610df261193e565b5b905f5260205f20906004020190505f60085f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610ead929190611b0a565b602060405180830381865afa158015610ec8573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eec9190611ab8565b831115610f2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2590611b7b565b60405180910390fd5b610f7d333085855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611381909392919063ffffffff16565b610f868461081c565b5f816001015464e8d4a510008460030154845f0154610fa591906119d3565b610faf9190611a41565b610fb99190611a71565b905083825f0154610fca9190611893565b825f01819055506234bc00600b54610fe29190611893565b42118015610fef57505f81115b156110705764e8d4a510008360030154835f015461100d91906119d3565b6110179190611a41565b826001018190555061106b338260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111ba9092919063ffffffff16565b6110a7565b8064e8d4a510008460030154845f015461108a91906119d3565b6110949190611a41565b61109e9190611a71565b82600101819055505b84835f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78760405161112791906114bd565b60405180910390a45050505050565b61113e611239565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111ae575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111a5919061175a565b60405180910390fd5b6111b7816112c0565b50565b611234838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016111ed929190611ae3565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611403565b505050565b61124161149e565b73ffffffffffffffffffffffffffffffffffffffff1661125f610cb3565b73ffffffffffffffffffffffffffffffffffffffff16146112be5761128261149e565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112b5919061175a565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113fd848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016113b693929190611b99565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611403565b50505050565b5f5f60205f8451602086015f885af180611422576040513d5f823e3d81fd5b3d92505f519150505f821461143b576001811415611456565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561149857836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161148f919061175a565b60405180910390fd5b50505050565b5f33905090565b5f819050919050565b6114b7816114a5565b82525050565b5f6020820190506114d05f8301846114ae565b92915050565b5f5ffd5b6114e3816114a5565b81146114ed575f5ffd5b50565b5f813590506114fe816114da565b92915050565b5f60208284031215611519576115186114d6565b5b5f611526848285016114f0565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61157161156c6115678461152f565b61154e565b61152f565b9050919050565b5f61158282611557565b9050919050565b5f61159382611578565b9050919050565b6115a381611589565b82525050565b5f6080820190506115bc5f83018761159a565b6115c960208301866114ae565b6115d660408301856114ae565b6115e360608301846114ae565b95945050505050565b5f5f60408385031215611602576116016114d6565b5b5f61160f858286016114f0565b9250506020611620858286016114f0565b9150509250929050565b5f8115159050919050565b61163e8161162a565b8114611648575f5ffd5b50565b5f8135905061165981611635565b92915050565b5f5f5f60608486031215611676576116756114d6565b5b5f611683868287016114f0565b9350506020611694868287016114f0565b92505060406116a58682870161164b565b9150509250925092565b5f6116b98261152f565b9050919050565b5f6116ca826116af565b9050919050565b6116da816116c0565b81146116e4575f5ffd5b50565b5f813590506116f5816116d1565b92915050565b5f5f5f60608486031215611712576117116114d6565b5b5f61171f868287016114f0565b9350506020611730868287016116e7565b92505060406117418682870161164b565b9150509250925092565b611754816116af565b82525050565b5f60208201905061176d5f83018461174b565b92915050565b61177c816116af565b8114611786575f5ffd5b50565b5f8135905061179781611773565b92915050565b5f5f604083850312156117b3576117b26114d6565b5b5f6117c0858286016114f0565b92505060206117d185828601611789565b9150509250929050565b5f6040820190506117ee5f8301856114ae565b6117fb60208301846114ae565b9392505050565b5f61180c82611578565b9050919050565b61181c81611802565b82525050565b5f6020820190506118355f830184611813565b92915050565b5f602082840312156118505761184f6114d6565b5b5f61185d84828501611789565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61189d826114a5565b91506118a8836114a5565b92508282019050808211156118c0576118bf611866565b5b92915050565b5f82825260208201905092915050565b7f546f6f206561726c7900000000000000000000000000000000000000000000005f82015250565b5f61190a6009836118c6565b9150611915826118d6565b602082019050919050565b5f6020820190508181035f830152611937816118fe565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f77697468647261773a206e6f7420676f6f6400000000000000000000000000005f82015250565b5f61199f6012836118c6565b91506119aa8261196b565b602082019050919050565b5f6020820190508181035f8301526119cc81611993565b9050919050565b5f6119dd826114a5565b91506119e8836114a5565b92508282026119f6816114a5565b91508282048414831517611a0d57611a0c611866565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611a4b826114a5565b9150611a56836114a5565b925082611a6657611a65611a14565b5b828204905092915050565b5f611a7b826114a5565b9150611a86836114a5565b9250828203905081811115611a9e57611a9d611866565b5b92915050565b5f81519050611ab2816114da565b92915050565b5f60208284031215611acd57611acc6114d6565b5b5f611ada84828501611aa4565b91505092915050565b5f604082019050611af65f83018561174b565b611b0360208301846114ae565b9392505050565b5f604082019050611b1d5f83018561174b565b611b2a602083018461174b565b9392505050565b7f416c6c6f77616e6365206e6f74206869676820656e6f756768000000000000005f82015250565b5f611b656019836118c6565b9150611b7082611b31565b602082019050919050565b5f6020820190508181035f830152611b9281611b59565b9050919050565b5f606082019050611bac5f83018661174b565b611bb9602083018561174b565b611bc660408301846114ae565b94935050505056fea26469706673582212202227a373fc540a7b682224ca800fc24dd6ade251fbe8b159ce32d7703633a74f64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x6 SSTORE PUSH0 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x17 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1F0A CODESIZE SUB DUP1 PUSH2 0x1F0A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x39 SWAP2 SWAP1 PUSH2 0x281 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB9 DUP2 PUSH2 0x11E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xA DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xB DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x2F9 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20C DUP3 PUSH2 0x1E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21D DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D DUP2 PUSH2 0x213 JUMP JUMPDEST DUP2 EQ PUSH2 0x237 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x248 DUP2 PUSH2 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x260 DUP2 PUSH2 0x24E JUMP JUMPDEST DUP2 EQ PUSH2 0x26A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27B DUP2 PUSH2 0x257 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x298 JUMPI PUSH2 0x297 PUSH2 0x1DF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A5 DUP7 DUP3 DUP8 ADD PUSH2 0x23A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2B6 DUP7 DUP3 DUP8 ADD PUSH2 0x26D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2C7 DUP7 DUP3 DUP8 ADD PUSH2 0x26D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2DA DUP2 PUSH2 0x202 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x2D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C04 DUP1 PUSH2 0x306 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8DBB1E3A GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB9926557 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB9926557 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xD129459B EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44B JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x913E77AD EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x3C2 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x7ABCEFFD EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x83E27185 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x356 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x46CA6BEA GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x46CA6BEA EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x57E78ADC EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x2CC JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x212F14CC EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x220 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH2 0x4DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x165F JUMP JUMPDEST PUSH2 0x790 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x260 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B6 PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH2 0xB6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DE PUSH2 0xB9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0xBB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH2 0xCA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH2 0xCAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AC PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP3 SWAP2 SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH2 0xDAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x449 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH2 0xDDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x465 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x1136 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x482 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x34BC00 PUSH1 0xB SLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x528 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x546 JUMPI PUSH2 0x545 PUSH2 0x193E JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH0 PUSH1 0x8 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E0 SWAP1 PUSH2 0x19B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F2 DUP5 PUSH2 0x81C JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST PUSH2 0x625 SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST SWAP1 POP DUP4 DUP3 PUSH0 ADD SLOAD PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH5 0xE8D4A51000 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x660 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x6B4 CALLER DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11BA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x701 CALLER DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11BA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 DUP8 PUSH1 0x40 MLOAD PUSH2 0x781 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x798 PUSH2 0x1239 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A7 JUMPI PUSH2 0x7A6 PUSH2 0xB6E JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7BC JUMPI PUSH2 0x7BB PUSH2 0x193E JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0x193E JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x831 JUMPI PUSH2 0x830 PUSH2 0x193E JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x850 JUMPI POP PUSH2 0xA30 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C7 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EB SWAP2 SWAP1 PUSH2 0x1AB8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x904 JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0xA30 JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0x91E DUP7 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x932 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x93C SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST SWAP1 POP DUP2 PUSH5 0xE8D4A51000 DUP3 PUSH2 0x950 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x95A SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0x969 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST DUP4 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH11 0x37A172815E43557155555 PUSH1 0x5 SLOAD GT PUSH2 0xA2C JUMPI DUP1 PUSH1 0x5 SLOAD PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FE SWAP3 SWAP2 SWAP1 PUSH2 0x1AE3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA15 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA27 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA48 JUMPI PUSH2 0xA47 PUSH2 0x193E JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH0 PUSH1 0x8 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 DUP4 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xB12 CALLER DUP4 DUP7 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11BA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB59 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB98 JUMPI PUSH2 0xB8D DUP2 PUSH2 0x81C JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xB7C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBA4 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0xBAD PUSH0 PUSH2 0x12C0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBBD PUSH2 0x1239 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBCC JUMPI PUSH2 0xBCB PUSH2 0xB6E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x9 SLOAD PUSH2 0xBDA SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD DUP3 GT PUSH2 0xD03 JUMPI PUSH1 0x3 DUP4 DUP4 PUSH2 0xCF2 SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST PUSH2 0xCFC SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST SWAP1 POP PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP4 LT PUSH2 0xD1F JUMPI DUP3 DUP3 PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST SWAP1 POP PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP3 PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST PUSH1 0x3 DUP5 PUSH1 0x3 SLOAD PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST PUSH2 0xD47 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0xD51 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH11 0x37A172815E43557155555 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xDF3 JUMPI PUSH2 0xDF2 PUSH2 0x193E JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH0 PUSH1 0x8 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAD SWAP3 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEEC SWAP2 SWAP1 PUSH2 0x1AB8 JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF25 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF7D CALLER ADDRESS DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1381 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF86 DUP5 PUSH2 0x81C JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0xFA5 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0xFAF SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST PUSH2 0xFB9 SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST SWAP1 POP DUP4 DUP3 PUSH0 ADD SLOAD PUSH2 0xFCA SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH3 0x34BC00 PUSH1 0xB SLOAD PUSH2 0xFE2 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST TIMESTAMP GT DUP1 ISZERO PUSH2 0xFEF JUMPI POP PUSH0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1070 JUMPI PUSH5 0xE8D4A51000 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x100D SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1017 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x106B CALLER DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11BA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10A7 JUMP JUMPDEST DUP1 PUSH5 0xE8D4A51000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x108A SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1094 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST PUSH2 0x109E SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1127 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x113E PUSH2 0x1239 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A5 SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B7 DUP2 PUSH2 0x12C0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1234 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x11ED SWAP3 SWAP2 SWAP1 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1403 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1241 PUSH2 0x149E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x125F PUSH2 0xCB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12BE JUMPI PUSH2 0x1282 PUSH2 0x149E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B5 SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x13FD DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1403 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1422 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x143B JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1456 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1498 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B7 DUP2 PUSH2 0x14A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x14AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14E3 DUP2 PUSH2 0x14A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x14ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14FE DUP2 PUSH2 0x14DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1519 JUMPI PUSH2 0x1518 PUSH2 0x14D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1526 DUP5 DUP3 DUP6 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1571 PUSH2 0x156C PUSH2 0x1567 DUP5 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x154E JUMP JUMPDEST PUSH2 0x152F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1582 DUP3 PUSH2 0x1557 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1593 DUP3 PUSH2 0x1578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A3 DUP2 PUSH2 0x1589 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x15BC PUSH0 DUP4 ADD DUP8 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x15C9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x15D6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x15E3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14AE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1602 JUMPI PUSH2 0x1601 PUSH2 0x14D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x160F DUP6 DUP3 DUP7 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1620 DUP6 DUP3 DUP7 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x163E DUP2 PUSH2 0x162A JUMP JUMPDEST DUP2 EQ PUSH2 0x1648 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1659 DUP2 PUSH2 0x1635 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1676 JUMPI PUSH2 0x1675 PUSH2 0x14D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1683 DUP7 DUP3 DUP8 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1694 DUP7 DUP3 DUP8 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16A5 DUP7 DUP3 DUP8 ADD PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH2 0x16B9 DUP3 PUSH2 0x152F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16CA DUP3 PUSH2 0x16AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16DA DUP2 PUSH2 0x16C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x16E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F5 DUP2 PUSH2 0x16D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1712 JUMPI PUSH2 0x1711 PUSH2 0x14D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x171F DUP7 DUP3 DUP8 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1730 DUP7 DUP3 DUP8 ADD PUSH2 0x16E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1741 DUP7 DUP3 DUP8 ADD PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1754 DUP2 PUSH2 0x16AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176D PUSH0 DUP4 ADD DUP5 PUSH2 0x174B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177C DUP2 PUSH2 0x16AF JUMP JUMPDEST DUP2 EQ PUSH2 0x1786 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1797 DUP2 PUSH2 0x1773 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B3 JUMPI PUSH2 0x17B2 PUSH2 0x14D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17C0 DUP6 DUP3 DUP7 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1789 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17EE PUSH0 DUP4 ADD DUP6 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x17FB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14AE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x180C DUP3 PUSH2 0x1578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181C DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1835 PUSH0 DUP4 ADD DUP5 PUSH2 0x1813 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1850 JUMPI PUSH2 0x184F PUSH2 0x14D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x185D DUP5 DUP3 DUP6 ADD PUSH2 0x1789 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x189D DUP3 PUSH2 0x14A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A8 DUP4 PUSH2 0x14A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18C0 JUMPI PUSH2 0x18BF PUSH2 0x1866 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6F206561726C790000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x190A PUSH1 0x9 DUP4 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1915 DUP3 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1937 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x199F PUSH1 0x12 DUP4 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x19AA DUP3 PUSH2 0x196B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19CC DUP2 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19DD DUP3 PUSH2 0x14A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E8 DUP4 PUSH2 0x14A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x19F6 DUP2 PUSH2 0x14A5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A0D JUMPI PUSH2 0x1A0C PUSH2 0x1866 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A4B DUP3 PUSH2 0x14A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A56 DUP4 PUSH2 0x14A5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A66 JUMPI PUSH2 0x1A65 PUSH2 0x1A14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7B DUP3 PUSH2 0x14A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A86 DUP4 PUSH2 0x14A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A9E JUMPI PUSH2 0x1A9D PUSH2 0x1866 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AB2 DUP2 PUSH2 0x14DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ACD JUMPI PUSH2 0x1ACC PUSH2 0x14D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ADA DUP5 DUP3 DUP6 ADD PUSH2 0x1AA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AF6 PUSH0 DUP4 ADD DUP6 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x1B03 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14AE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B1D PUSH0 DUP4 ADD DUP6 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x1B2A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x174B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416C6C6F77616E6365206E6F74206869676820656E6F75676800000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B65 PUSH1 0x19 DUP4 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B70 DUP3 PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B92 DUP2 PUSH2 0x1B59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BAC PUSH0 DUP4 ADD DUP7 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x1BB9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x1BC6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0x27 LOG3 PUSH20 0xFC540A7B682224CA800FC24DD6ADE251FBE8B159 0xCE ORIGIN 0xD7 PUSH17 0x3633A74F64736F6C634300081C00330000 ",
							"sourceMap": "377:7533:13:-:0;;;1539:1;1511:29;;1873:1;1840:34;;2322:312;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2439:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;2469:6:13::1;2461:5;;:14;;;;;;;;;;;;;;;;;;2501;2485:13;:30;;;;2541:14;2525:13;:30;;;;2578:12;2565:10;:25;;;;2612:15;2600:9;:27;;;;2322:312:::0;;;377:7533;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:77::-;1079:7;1108:5;1097:16;;1042:77;;;:::o;1125:122::-;1198:24;1216:5;1198:24;:::i;:::-;1191:5;1188:35;1178:63;;1237:1;1234;1227:12;1178:63;1125:122;:::o;1253:143::-;1310:5;1341:6;1335:13;1326:22;;1357:33;1384:5;1357:33;:::i;:::-;1253:143;;;;:::o;1402:701::-;1509:6;1517;1525;1574:2;1562:9;1553:7;1549:23;1545:32;1542:119;;;1580:79;;:::i;:::-;1542:119;1700:1;1725:83;1800:7;1791:6;1780:9;1776:22;1725:83;:::i;:::-;1715:93;;1671:147;1857:2;1883:64;1939:7;1930:6;1919:9;1915:22;1883:64;:::i;:::-;1873:74;;1828:129;1996:2;2022:64;2078:7;2069:6;2058:9;2054:22;2022:64;:::i;:::-;2012:74;;1967:129;1402:701;;;;;:::o;2109:118::-;2196:24;2214:5;2196:24;:::i;:::-;2191:3;2184:37;2109:118;;:::o;2233:222::-;2326:4;2364:2;2353:9;2349:18;2341:26;;2377:71;2445:1;2434:9;2430:17;2421:6;2377:71;:::i;:::-;2233:222;;;;:::o;377:7533:13:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BONUS_MULTIPLIER_1779": {
									"entryPoint": 3246,
									"id": 1779,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@GRAND_CAP_1782": {
									"entryPoint": 3498,
									"id": 1782,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@GrandPerBlock_1776": {
									"entryPoint": 1241,
									"id": 1776,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Grand_1770": {
									"entryPoint": 3513,
									"id": 1770,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1362": {
									"entryPoint": 5123,
									"id": 1362,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4665,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1675": {
									"entryPoint": 5278,
									"id": 1675,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 4800,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addPool_1916": {
									"entryPoint": 2997,
									"id": 1916,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@bonusEndBlock_1774": {
									"entryPoint": 1235,
									"id": 1774,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@collector_1772": {
									"entryPoint": 3418,
									"id": 1772,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_2270": {
									"entryPoint": 3550,
									"id": 2270,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyWithdraw_2446": {
									"entryPoint": 2611,
									"id": 2446,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getMultiplier_1996": {
									"entryPoint": 3290,
									"id": 1996,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@grandMinted_1784": {
									"entryPoint": 3240,
									"id": 1784,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@massUpdatePools_2021": {
									"entryPoint": 2926,
									"id": 2021,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 3251,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@poolInfo_1791": {
									"entryPoint": 1139,
									"id": 1791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_1879": {
									"entryPoint": 1127,
									"id": 1879,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2972,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1067": {
									"entryPoint": 4993,
									"id": 1067,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_1040": {
									"entryPoint": 4538,
									"id": 1040,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setPool_1952": {
									"entryPoint": 1936,
									"id": 1952,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startBlock_1803": {
									"entryPoint": 2070,
									"id": 1803,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startTime_1805": {
									"entryPoint": 2991,
									"id": 1805,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAllocPoint_1801": {
									"entryPoint": 1229,
									"id": 1801,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalBoxes_1787": {
									"entryPoint": 2920,
									"id": 1787,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4406,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePool_2126": {
									"entryPoint": 2076,
									"id": 2126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_1798": {
									"entryPoint": 3455,
									"id": 1798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_2384": {
									"entryPoint": 1247,
									"id": 2384,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$967": {
									"entryPoint": 5863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 6045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$967t_bool": {
									"entryPoint": 5883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 5727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_GrandToken_$1742_to_t_address_fromStack": {
									"entryPoint": 6163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$967_to_t_address_fromStack": {
									"entryPoint": 5530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_25e66a24e97bfb0eb0e79a0138ac0364f38b3452aeb9bfd71dfcf6bc01fec525_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6922,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7065,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6883,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_GrandToken_$1742__to_t_address__fromStack_reversed": {
									"entryPoint": 6178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$967_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5545,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25e66a24e97bfb0eb0e79a0138ac0364f38b3452aeb9bfd71dfcf6bc01fec525__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6107,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$967": {
									"entryPoint": 5824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_GrandToken_$1742_to_t_address": {
									"entryPoint": 6146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$967_to_t_address": {
									"entryPoint": 5513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6246,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6676,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6462,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5334,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_25e66a24e97bfb0eb0e79a0138ac0364f38b3452aeb9bfd71dfcf6bc01fec525": {
									"entryPoint": 6961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1": {
									"entryPoint": 6358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df": {
									"entryPoint": 6507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$967": {
									"entryPoint": 5841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14047:14",
										"nodeType": "YulBlock",
										"src": "0:14047:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:14",
													"nodeType": "YulBlock",
													"src": "52:32:14",
													"statements": [
														{
															"nativeSrc": "62:16:14",
															"nodeType": "YulAssignment",
															"src": "62:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:14",
																"nodeType": "YulIdentifier",
																"src": "73:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:14",
														"nodeType": "YulTypedName",
														"src": "34:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:14",
														"nodeType": "YulTypedName",
														"src": "44:7:14",
														"type": ""
													}
												],
												"src": "7:77:14"
											},
											{
												"body": {
													"nativeSrc": "155:53:14",
													"nodeType": "YulBlock",
													"src": "155:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:14"
																		},
																		"nativeSrc": "177:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:14"
																},
																"nativeSrc": "165:37:14",
																"nodeType": "YulFunctionCall",
																"src": "165:37:14"
															},
															"nativeSrc": "165:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:14",
														"nodeType": "YulTypedName",
														"src": "143:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:14",
														"nodeType": "YulTypedName",
														"src": "150:3:14",
														"type": ""
													}
												],
												"src": "90:118:14"
											},
											{
												"body": {
													"nativeSrc": "312:124:14",
													"nodeType": "YulBlock",
													"src": "312:124:14",
													"statements": [
														{
															"nativeSrc": "322:26:14",
															"nodeType": "YulAssignment",
															"src": "322:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:14",
																		"nodeType": "YulLiteral",
																		"src": "345:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:14"
																},
																"nativeSrc": "330:18:14",
																"nodeType": "YulFunctionCall",
																"src": "330:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:14",
																				"nodeType": "YulLiteral",
																				"src": "426:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:14"
																		},
																		"nativeSrc": "411:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:14"
																},
																"nativeSrc": "358:71:14",
																"nodeType": "YulFunctionCall",
																"src": "358:71:14"
															},
															"nativeSrc": "358:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:14",
														"nodeType": "YulTypedName",
														"src": "284:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:14",
														"nodeType": "YulTypedName",
														"src": "296:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:14",
														"nodeType": "YulTypedName",
														"src": "307:4:14",
														"type": ""
													}
												],
												"src": "214:222:14"
											},
											{
												"body": {
													"nativeSrc": "482:35:14",
													"nodeType": "YulBlock",
													"src": "482:35:14",
													"statements": [
														{
															"nativeSrc": "492:19:14",
															"nodeType": "YulAssignment",
															"src": "492:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:14",
																		"nodeType": "YulLiteral",
																		"src": "508:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:14"
																},
																"nativeSrc": "502:9:14",
																"nodeType": "YulFunctionCall",
																"src": "502:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:14",
														"nodeType": "YulTypedName",
														"src": "475:6:14",
														"type": ""
													}
												],
												"src": "442:75:14"
											},
											{
												"body": {
													"nativeSrc": "612:28:14",
													"nodeType": "YulBlock",
													"src": "612:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:14",
																		"nodeType": "YulLiteral",
																		"src": "629:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:14",
																		"nodeType": "YulLiteral",
																		"src": "632:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:14"
																},
																"nativeSrc": "622:12:14",
																"nodeType": "YulFunctionCall",
																"src": "622:12:14"
															},
															"nativeSrc": "622:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:14"
											},
											{
												"body": {
													"nativeSrc": "735:28:14",
													"nodeType": "YulBlock",
													"src": "735:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:14",
																		"nodeType": "YulLiteral",
																		"src": "752:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:14",
																		"nodeType": "YulLiteral",
																		"src": "755:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:14"
																},
																"nativeSrc": "745:12:14",
																"nodeType": "YulFunctionCall",
																"src": "745:12:14"
															},
															"nativeSrc": "745:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:14"
											},
											{
												"body": {
													"nativeSrc": "812:79:14",
													"nodeType": "YulBlock",
													"src": "812:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:16:14",
																"nodeType": "YulBlock",
																"src": "869:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "878:1:14",
																					"nodeType": "YulLiteral",
																					"src": "878:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "881:1:14",
																					"nodeType": "YulLiteral",
																					"src": "881:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "871:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:14"
																			},
																			"nativeSrc": "871:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:14"
																		},
																		"nativeSrc": "871:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "835:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "860:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "842:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:14"
																				},
																				"nativeSrc": "842:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "832:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:14"
																		},
																		"nativeSrc": "832:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "825:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:14"
																},
																"nativeSrc": "825:43:14",
																"nodeType": "YulFunctionCall",
																"src": "825:43:14"
															},
															"nativeSrc": "822:63:14",
															"nodeType": "YulIf",
															"src": "822:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "769:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "805:5:14",
														"nodeType": "YulTypedName",
														"src": "805:5:14",
														"type": ""
													}
												],
												"src": "769:122:14"
											},
											{
												"body": {
													"nativeSrc": "949:87:14",
													"nodeType": "YulBlock",
													"src": "949:87:14",
													"statements": [
														{
															"nativeSrc": "959:29:14",
															"nodeType": "YulAssignment",
															"src": "959:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "981:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:14"
																},
																"nativeSrc": "968:20:14",
																"nodeType": "YulFunctionCall",
																"src": "968:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "997:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:14"
																},
																"nativeSrc": "997:33:14",
																"nodeType": "YulFunctionCall",
																"src": "997:33:14"
															},
															"nativeSrc": "997:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "997:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "897:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:14",
														"nodeType": "YulTypedName",
														"src": "927:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:14",
														"nodeType": "YulTypedName",
														"src": "935:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:14",
														"nodeType": "YulTypedName",
														"src": "943:5:14",
														"type": ""
													}
												],
												"src": "897:139:14"
											},
											{
												"body": {
													"nativeSrc": "1108:263:14",
													"nodeType": "YulBlock",
													"src": "1108:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:14",
																"nodeType": "YulBlock",
																"src": "1154:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:14"
																			},
																			"nativeSrc": "1156:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:14"
																		},
																		"nativeSrc": "1156:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:14"
																		},
																		"nativeSrc": "1125:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:14"
																},
																"nativeSrc": "1121:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:14"
															},
															"nativeSrc": "1118:119:14",
															"nodeType": "YulIf",
															"src": "1118:119:14"
														},
														{
															"nativeSrc": "1247:117:14",
															"nodeType": "YulBlock",
															"src": "1247:117:14",
															"statements": [
																{
																	"nativeSrc": "1262:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:63:14",
																	"nodeType": "YulAssignment",
																	"src": "1291:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1326:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1337:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:14"
																				},
																				"nativeSrc": "1322:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1301:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:14"
																		},
																		"nativeSrc": "1301:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1042:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:14",
														"nodeType": "YulTypedName",
														"src": "1078:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:14",
														"nodeType": "YulTypedName",
														"src": "1089:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:14",
														"nodeType": "YulTypedName",
														"src": "1101:6:14",
														"type": ""
													}
												],
												"src": "1042:329:14"
											},
											{
												"body": {
													"nativeSrc": "1422:81:14",
													"nodeType": "YulBlock",
													"src": "1422:81:14",
													"statements": [
														{
															"nativeSrc": "1432:65:14",
															"nodeType": "YulAssignment",
															"src": "1432:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:14",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:14"
																},
																"nativeSrc": "1443:54:14",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:14",
														"nodeType": "YulTypedName",
														"src": "1404:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:14",
														"nodeType": "YulTypedName",
														"src": "1414:7:14",
														"type": ""
													}
												],
												"src": "1377:126:14"
											},
											{
												"body": {
													"nativeSrc": "1541:28:14",
													"nodeType": "YulBlock",
													"src": "1541:28:14",
													"statements": [
														{
															"nativeSrc": "1551:12:14",
															"nodeType": "YulAssignment",
															"src": "1551:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "1558:5:14",
																"nodeType": "YulIdentifier",
																"src": "1558:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1551:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1551:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1509:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1527:5:14",
														"nodeType": "YulTypedName",
														"src": "1527:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1537:3:14",
														"nodeType": "YulTypedName",
														"src": "1537:3:14",
														"type": ""
													}
												],
												"src": "1509:60:14"
											},
											{
												"body": {
													"nativeSrc": "1635:82:14",
													"nodeType": "YulBlock",
													"src": "1635:82:14",
													"statements": [
														{
															"nativeSrc": "1645:66:14",
															"nodeType": "YulAssignment",
															"src": "1645:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1703:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1703:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1685:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "1685:17:14"
																				},
																				"nativeSrc": "1685:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1685:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1676:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "1676:8:14"
																		},
																		"nativeSrc": "1676:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1676:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1658:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "1658:17:14"
																},
																"nativeSrc": "1658:53:14",
																"nodeType": "YulFunctionCall",
																"src": "1658:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1645:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "1645:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1575:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1615:5:14",
														"nodeType": "YulTypedName",
														"src": "1615:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1625:9:14",
														"nodeType": "YulTypedName",
														"src": "1625:9:14",
														"type": ""
													}
												],
												"src": "1575:142:14"
											},
											{
												"body": {
													"nativeSrc": "1783:66:14",
													"nodeType": "YulBlock",
													"src": "1783:66:14",
													"statements": [
														{
															"nativeSrc": "1793:50:14",
															"nodeType": "YulAssignment",
															"src": "1793:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1837:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1837:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1806:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "1806:30:14"
																},
																"nativeSrc": "1806:37:14",
																"nodeType": "YulFunctionCall",
																"src": "1806:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1793:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "1793:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1723:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1763:5:14",
														"nodeType": "YulTypedName",
														"src": "1763:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1773:9:14",
														"nodeType": "YulTypedName",
														"src": "1773:9:14",
														"type": ""
													}
												],
												"src": "1723:126:14"
											},
											{
												"body": {
													"nativeSrc": "1929:66:14",
													"nodeType": "YulBlock",
													"src": "1929:66:14",
													"statements": [
														{
															"nativeSrc": "1939:50:14",
															"nodeType": "YulAssignment",
															"src": "1939:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1983:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1983:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1952:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "1952:30:14"
																},
																"nativeSrc": "1952:37:14",
																"nodeType": "YulFunctionCall",
																"src": "1952:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1939:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "1939:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$967_to_t_address",
												"nativeSrc": "1855:140:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1909:5:14",
														"nodeType": "YulTypedName",
														"src": "1909:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1919:9:14",
														"nodeType": "YulTypedName",
														"src": "1919:9:14",
														"type": ""
													}
												],
												"src": "1855:140:14"
											},
											{
												"body": {
													"nativeSrc": "2080:80:14",
													"nodeType": "YulBlock",
													"src": "2080:80:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2097:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2097:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2147:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2147:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$967_to_t_address",
																			"nativeSrc": "2102:44:14",
																			"nodeType": "YulIdentifier",
																			"src": "2102:44:14"
																		},
																		"nativeSrc": "2102:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2102:51:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:14"
																},
																"nativeSrc": "2090:64:14",
																"nodeType": "YulFunctionCall",
																"src": "2090:64:14"
															},
															"nativeSrc": "2090:64:14",
															"nodeType": "YulExpressionStatement",
															"src": "2090:64:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$967_to_t_address_fromStack",
												"nativeSrc": "2001:159:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2068:5:14",
														"nodeType": "YulTypedName",
														"src": "2068:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2075:3:14",
														"nodeType": "YulTypedName",
														"src": "2075:3:14",
														"type": ""
													}
												],
												"src": "2001:159:14"
											},
											{
												"body": {
													"nativeSrc": "2362:385:14",
													"nodeType": "YulBlock",
													"src": "2362:385:14",
													"statements": [
														{
															"nativeSrc": "2372:27:14",
															"nodeType": "YulAssignment",
															"src": "2372:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2384:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2384:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2395:3:14",
																		"nodeType": "YulLiteral",
																		"src": "2395:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2380:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2380:3:14"
																},
																"nativeSrc": "2380:19:14",
																"nodeType": "YulFunctionCall",
																"src": "2380:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2372:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2372:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2467:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2480:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2480:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2491:1:14",
																				"nodeType": "YulLiteral",
																				"src": "2491:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2476:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:14"
																		},
																		"nativeSrc": "2476:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2476:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$967_to_t_address_fromStack",
																	"nativeSrc": "2409:57:14",
																	"nodeType": "YulIdentifier",
																	"src": "2409:57:14"
																},
																"nativeSrc": "2409:85:14",
																"nodeType": "YulFunctionCall",
																"src": "2409:85:14"
															},
															"nativeSrc": "2409:85:14",
															"nodeType": "YulExpressionStatement",
															"src": "2409:85:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2548:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2548:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2561:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2561:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2572:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2572:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2557:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2557:3:14"
																		},
																		"nativeSrc": "2557:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2504:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "2504:43:14"
																},
																"nativeSrc": "2504:72:14",
																"nodeType": "YulFunctionCall",
																"src": "2504:72:14"
															},
															"nativeSrc": "2504:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "2504:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2630:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2630:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2643:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2643:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2654:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2654:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2639:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:14"
																		},
																		"nativeSrc": "2639:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2586:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "2586:43:14"
																},
																"nativeSrc": "2586:72:14",
																"nodeType": "YulFunctionCall",
																"src": "2586:72:14"
															},
															"nativeSrc": "2586:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "2586:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "2712:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2712:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2725:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2725:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2736:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2736:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2721:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2721:3:14"
																		},
																		"nativeSrc": "2721:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2721:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2668:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "2668:43:14"
																},
																"nativeSrc": "2668:72:14",
																"nodeType": "YulFunctionCall",
																"src": "2668:72:14"
															},
															"nativeSrc": "2668:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "2668:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$967_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2166:581:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2310:9:14",
														"nodeType": "YulTypedName",
														"src": "2310:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2322:6:14",
														"nodeType": "YulTypedName",
														"src": "2322:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2330:6:14",
														"nodeType": "YulTypedName",
														"src": "2330:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2338:6:14",
														"nodeType": "YulTypedName",
														"src": "2338:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2346:6:14",
														"nodeType": "YulTypedName",
														"src": "2346:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2357:4:14",
														"nodeType": "YulTypedName",
														"src": "2357:4:14",
														"type": ""
													}
												],
												"src": "2166:581:14"
											},
											{
												"body": {
													"nativeSrc": "2836:391:14",
													"nodeType": "YulBlock",
													"src": "2836:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2882:83:14",
																"nodeType": "YulBlock",
																"src": "2882:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2884:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2884:77:14"
																			},
																			"nativeSrc": "2884:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2884:79:14"
																		},
																		"nativeSrc": "2884:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2884:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2857:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2857:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2866:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2866:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2853:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2853:3:14"
																		},
																		"nativeSrc": "2853:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2853:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2878:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2878:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2849:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2849:3:14"
																},
																"nativeSrc": "2849:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2849:32:14"
															},
															"nativeSrc": "2846:119:14",
															"nodeType": "YulIf",
															"src": "2846:119:14"
														},
														{
															"nativeSrc": "2975:117:14",
															"nodeType": "YulBlock",
															"src": "2975:117:14",
															"statements": [
																{
																	"nativeSrc": "2990:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2990:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3004:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3004:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2994:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2994:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3019:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3019:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3054:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3054:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3065:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3065:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3050:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3050:3:14"
																				},
																				"nativeSrc": "3050:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3050:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3074:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3074:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3029:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3029:20:14"
																		},
																		"nativeSrc": "3029:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3029:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3019:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3019:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3102:118:14",
															"nodeType": "YulBlock",
															"src": "3102:118:14",
															"statements": [
																{
																	"nativeSrc": "3117:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3117:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3131:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3131:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3121:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3121:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3147:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3147:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3182:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3182:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3193:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3193:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3178:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3178:3:14"
																				},
																				"nativeSrc": "3178:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3178:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3202:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3202:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3157:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3157:20:14"
																		},
																		"nativeSrc": "3157:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3157:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3147:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3147:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2753:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2798:9:14",
														"nodeType": "YulTypedName",
														"src": "2798:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2809:7:14",
														"nodeType": "YulTypedName",
														"src": "2809:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2821:6:14",
														"nodeType": "YulTypedName",
														"src": "2821:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2829:6:14",
														"nodeType": "YulTypedName",
														"src": "2829:6:14",
														"type": ""
													}
												],
												"src": "2753:474:14"
											},
											{
												"body": {
													"nativeSrc": "3275:48:14",
													"nodeType": "YulBlock",
													"src": "3275:48:14",
													"statements": [
														{
															"nativeSrc": "3285:32:14",
															"nodeType": "YulAssignment",
															"src": "3285:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3310:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3310:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3303:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3303:6:14"
																		},
																		"nativeSrc": "3303:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3303:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3296:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3296:6:14"
																},
																"nativeSrc": "3296:21:14",
																"nodeType": "YulFunctionCall",
																"src": "3296:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3285:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "3285:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3233:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3257:5:14",
														"nodeType": "YulTypedName",
														"src": "3257:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3267:7:14",
														"nodeType": "YulTypedName",
														"src": "3267:7:14",
														"type": ""
													}
												],
												"src": "3233:90:14"
											},
											{
												"body": {
													"nativeSrc": "3369:76:14",
													"nodeType": "YulBlock",
													"src": "3369:76:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3423:16:14",
																"nodeType": "YulBlock",
																"src": "3423:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3432:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3432:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3435:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3435:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3425:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3425:6:14"
																			},
																			"nativeSrc": "3425:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3425:12:14"
																		},
																		"nativeSrc": "3425:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3425:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3392:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3392:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3414:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3414:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3399:14:14",
																					"nodeType": "YulIdentifier",
																					"src": "3399:14:14"
																				},
																				"nativeSrc": "3399:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3399:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3389:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3389:2:14"
																		},
																		"nativeSrc": "3389:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3389:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3382:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3382:6:14"
																},
																"nativeSrc": "3382:40:14",
																"nodeType": "YulFunctionCall",
																"src": "3382:40:14"
															},
															"nativeSrc": "3379:60:14",
															"nodeType": "YulIf",
															"src": "3379:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3329:116:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3362:5:14",
														"nodeType": "YulTypedName",
														"src": "3362:5:14",
														"type": ""
													}
												],
												"src": "3329:116:14"
											},
											{
												"body": {
													"nativeSrc": "3500:84:14",
													"nodeType": "YulBlock",
													"src": "3500:84:14",
													"statements": [
														{
															"nativeSrc": "3510:29:14",
															"nodeType": "YulAssignment",
															"src": "3510:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3532:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3532:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3519:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3519:12:14"
																},
																"nativeSrc": "3519:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3519:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3510:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3510:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3572:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3572:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3548:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "3548:23:14"
																},
																"nativeSrc": "3548:30:14",
																"nodeType": "YulFunctionCall",
																"src": "3548:30:14"
															},
															"nativeSrc": "3548:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "3548:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "3451:133:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3478:6:14",
														"nodeType": "YulTypedName",
														"src": "3478:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3486:3:14",
														"nodeType": "YulTypedName",
														"src": "3486:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3494:5:14",
														"nodeType": "YulTypedName",
														"src": "3494:5:14",
														"type": ""
													}
												],
												"src": "3451:133:14"
											},
											{
												"body": {
													"nativeSrc": "3687:516:14",
													"nodeType": "YulBlock",
													"src": "3687:516:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3733:83:14",
																"nodeType": "YulBlock",
																"src": "3733:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3735:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3735:77:14"
																			},
																			"nativeSrc": "3735:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3735:79:14"
																		},
																		"nativeSrc": "3735:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3735:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3708:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3708:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3717:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3717:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3704:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3704:3:14"
																		},
																		"nativeSrc": "3704:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3704:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3729:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3729:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3700:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3700:3:14"
																},
																"nativeSrc": "3700:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3700:32:14"
															},
															"nativeSrc": "3697:119:14",
															"nodeType": "YulIf",
															"src": "3697:119:14"
														},
														{
															"nativeSrc": "3826:117:14",
															"nodeType": "YulBlock",
															"src": "3826:117:14",
															"statements": [
																{
																	"nativeSrc": "3841:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3841:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3855:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3855:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3845:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3845:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3870:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3870:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3905:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3905:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3916:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3916:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3901:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3901:3:14"
																				},
																				"nativeSrc": "3901:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3901:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3925:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3925:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3880:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3880:20:14"
																		},
																		"nativeSrc": "3880:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3880:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3870:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3870:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3953:118:14",
															"nodeType": "YulBlock",
															"src": "3953:118:14",
															"statements": [
																{
																	"nativeSrc": "3968:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3968:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3982:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3972:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3972:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3998:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3998:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4033:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4033:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4044:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4044:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4029:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4029:3:14"
																				},
																				"nativeSrc": "4029:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4029:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4053:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4053:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4008:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4008:20:14"
																		},
																		"nativeSrc": "4008:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4008:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3998:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3998:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4081:115:14",
															"nodeType": "YulBlock",
															"src": "4081:115:14",
															"statements": [
																{
																	"nativeSrc": "4096:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4096:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4110:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4110:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4100:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4100:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4126:60:14",
																	"nodeType": "YulAssignment",
																	"src": "4126:60:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4158:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4158:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4169:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4169:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4154:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4154:3:14"
																				},
																				"nativeSrc": "4154:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4154:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4178:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4178:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "4136:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "4136:17:14"
																		},
																		"nativeSrc": "4136:50:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4136:50:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4126:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4126:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nativeSrc": "3590:613:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3641:9:14",
														"nodeType": "YulTypedName",
														"src": "3641:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3652:7:14",
														"nodeType": "YulTypedName",
														"src": "3652:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3664:6:14",
														"nodeType": "YulTypedName",
														"src": "3664:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3672:6:14",
														"nodeType": "YulTypedName",
														"src": "3672:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3680:6:14",
														"nodeType": "YulTypedName",
														"src": "3680:6:14",
														"type": ""
													}
												],
												"src": "3590:613:14"
											},
											{
												"body": {
													"nativeSrc": "4254:51:14",
													"nodeType": "YulBlock",
													"src": "4254:51:14",
													"statements": [
														{
															"nativeSrc": "4264:35:14",
															"nodeType": "YulAssignment",
															"src": "4264:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4293:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4293:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4275:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "4275:17:14"
																},
																"nativeSrc": "4275:24:14",
																"nodeType": "YulFunctionCall",
																"src": "4275:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4264:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "4264:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "4209:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4236:5:14",
														"nodeType": "YulTypedName",
														"src": "4236:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4246:7:14",
														"nodeType": "YulTypedName",
														"src": "4246:7:14",
														"type": ""
													}
												],
												"src": "4209:96:14"
											},
											{
												"body": {
													"nativeSrc": "4370:51:14",
													"nodeType": "YulBlock",
													"src": "4370:51:14",
													"statements": [
														{
															"nativeSrc": "4380:35:14",
															"nodeType": "YulAssignment",
															"src": "4380:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4409:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4409:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "4391:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "4391:17:14"
																},
																"nativeSrc": "4391:24:14",
																"nodeType": "YulFunctionCall",
																"src": "4391:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4380:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "4380:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$967",
												"nativeSrc": "4311:110:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4352:5:14",
														"nodeType": "YulTypedName",
														"src": "4352:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4362:7:14",
														"nodeType": "YulTypedName",
														"src": "4362:7:14",
														"type": ""
													}
												],
												"src": "4311:110:14"
											},
											{
												"body": {
													"nativeSrc": "4484:93:14",
													"nodeType": "YulBlock",
													"src": "4484:93:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4555:16:14",
																"nodeType": "YulBlock",
																"src": "4555:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4564:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4564:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4567:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4567:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4557:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4557:6:14"
																			},
																			"nativeSrc": "4557:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4557:12:14"
																		},
																		"nativeSrc": "4557:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4557:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4546:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4546:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$967",
																					"nativeSrc": "4514:31:14",
																					"nodeType": "YulIdentifier",
																					"src": "4514:31:14"
																				},
																				"nativeSrc": "4514:38:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4514:38:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4504:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "4504:2:14"
																		},
																		"nativeSrc": "4504:49:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4504:49:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4497:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4497:6:14"
																},
																"nativeSrc": "4497:57:14",
																"nodeType": "YulFunctionCall",
																"src": "4497:57:14"
															},
															"nativeSrc": "4494:77:14",
															"nodeType": "YulIf",
															"src": "4494:77:14"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$967",
												"nativeSrc": "4427:150:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4477:5:14",
														"nodeType": "YulTypedName",
														"src": "4477:5:14",
														"type": ""
													}
												],
												"src": "4427:150:14"
											},
											{
												"body": {
													"nativeSrc": "4649:101:14",
													"nodeType": "YulBlock",
													"src": "4649:101:14",
													"statements": [
														{
															"nativeSrc": "4659:29:14",
															"nodeType": "YulAssignment",
															"src": "4659:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4681:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4681:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4668:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "4668:12:14"
																},
																"nativeSrc": "4668:20:14",
																"nodeType": "YulFunctionCall",
																"src": "4668:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4659:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4659:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4738:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4738:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$967",
																	"nativeSrc": "4697:40:14",
																	"nodeType": "YulIdentifier",
																	"src": "4697:40:14"
																},
																"nativeSrc": "4697:47:14",
																"nodeType": "YulFunctionCall",
																"src": "4697:47:14"
															},
															"nativeSrc": "4697:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "4697:47:14"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$967",
												"nativeSrc": "4583:167:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4627:6:14",
														"nodeType": "YulTypedName",
														"src": "4627:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4635:3:14",
														"nodeType": "YulTypedName",
														"src": "4635:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4643:5:14",
														"nodeType": "YulTypedName",
														"src": "4643:5:14",
														"type": ""
													}
												],
												"src": "4583:167:14"
											},
											{
												"body": {
													"nativeSrc": "4867:530:14",
													"nodeType": "YulBlock",
													"src": "4867:530:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4913:83:14",
																"nodeType": "YulBlock",
																"src": "4913:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4915:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4915:77:14"
																			},
																			"nativeSrc": "4915:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4915:79:14"
																		},
																		"nativeSrc": "4915:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4915:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4888:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4888:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4897:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4897:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4884:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4884:3:14"
																		},
																		"nativeSrc": "4884:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4884:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4909:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4909:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4880:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4880:3:14"
																},
																"nativeSrc": "4880:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4880:32:14"
															},
															"nativeSrc": "4877:119:14",
															"nodeType": "YulIf",
															"src": "4877:119:14"
														},
														{
															"nativeSrc": "5006:117:14",
															"nodeType": "YulBlock",
															"src": "5006:117:14",
															"statements": [
																{
																	"nativeSrc": "5021:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5021:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5035:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5035:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5025:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5025:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5050:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5050:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5085:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5085:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5096:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5096:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5081:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5081:3:14"
																				},
																				"nativeSrc": "5081:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5081:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5105:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5105:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5060:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5060:20:14"
																		},
																		"nativeSrc": "5060:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5060:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5050:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5050:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5133:132:14",
															"nodeType": "YulBlock",
															"src": "5133:132:14",
															"statements": [
																{
																	"nativeSrc": "5148:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5148:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5162:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5162:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5152:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5152:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5178:77:14",
																	"nodeType": "YulAssignment",
																	"src": "5178:77:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5227:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5227:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5238:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5238:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5223:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5223:3:14"
																				},
																				"nativeSrc": "5223:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5223:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5247:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5247:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$967",
																			"nativeSrc": "5188:34:14",
																			"nodeType": "YulIdentifier",
																			"src": "5188:34:14"
																		},
																		"nativeSrc": "5188:67:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5188:67:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5178:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5178:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5275:115:14",
															"nodeType": "YulBlock",
															"src": "5275:115:14",
															"statements": [
																{
																	"nativeSrc": "5290:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5290:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5304:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5304:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5294:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5294:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5320:60:14",
																	"nodeType": "YulAssignment",
																	"src": "5320:60:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5352:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5352:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5363:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5363:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5348:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5348:3:14"
																				},
																				"nativeSrc": "5348:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5348:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5372:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5372:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "5330:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "5330:17:14"
																		},
																		"nativeSrc": "5330:50:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5330:50:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5320:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5320:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$967t_bool",
												"nativeSrc": "4756:641:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4821:9:14",
														"nodeType": "YulTypedName",
														"src": "4821:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4832:7:14",
														"nodeType": "YulTypedName",
														"src": "4832:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4844:6:14",
														"nodeType": "YulTypedName",
														"src": "4844:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4852:6:14",
														"nodeType": "YulTypedName",
														"src": "4852:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4860:6:14",
														"nodeType": "YulTypedName",
														"src": "4860:6:14",
														"type": ""
													}
												],
												"src": "4756:641:14"
											},
											{
												"body": {
													"nativeSrc": "5468:53:14",
													"nodeType": "YulBlock",
													"src": "5468:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5485:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5485:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5508:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5508:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5490:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "5490:17:14"
																		},
																		"nativeSrc": "5490:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5490:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5478:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5478:6:14"
																},
																"nativeSrc": "5478:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5478:37:14"
															},
															"nativeSrc": "5478:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "5478:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5403:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5456:5:14",
														"nodeType": "YulTypedName",
														"src": "5456:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5463:3:14",
														"nodeType": "YulTypedName",
														"src": "5463:3:14",
														"type": ""
													}
												],
												"src": "5403:118:14"
											},
											{
												"body": {
													"nativeSrc": "5625:124:14",
													"nodeType": "YulBlock",
													"src": "5625:124:14",
													"statements": [
														{
															"nativeSrc": "5635:26:14",
															"nodeType": "YulAssignment",
															"src": "5635:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5647:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5647:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5658:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5658:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5643:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5643:3:14"
																},
																"nativeSrc": "5643:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5643:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5635:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5635:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5715:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5715:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5728:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5728:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5739:1:14",
																				"nodeType": "YulLiteral",
																				"src": "5739:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5724:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5724:3:14"
																		},
																		"nativeSrc": "5724:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5724:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5671:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "5671:43:14"
																},
																"nativeSrc": "5671:71:14",
																"nodeType": "YulFunctionCall",
																"src": "5671:71:14"
															},
															"nativeSrc": "5671:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "5671:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5527:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5597:9:14",
														"nodeType": "YulTypedName",
														"src": "5597:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5609:6:14",
														"nodeType": "YulTypedName",
														"src": "5609:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5620:4:14",
														"nodeType": "YulTypedName",
														"src": "5620:4:14",
														"type": ""
													}
												],
												"src": "5527:222:14"
											},
											{
												"body": {
													"nativeSrc": "5798:79:14",
													"nodeType": "YulBlock",
													"src": "5798:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5855:16:14",
																"nodeType": "YulBlock",
																"src": "5855:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5864:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5864:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5867:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5867:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5857:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5857:6:14"
																			},
																			"nativeSrc": "5857:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5857:12:14"
																		},
																		"nativeSrc": "5857:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5857:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5821:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5821:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5846:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5846:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "5828:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "5828:17:14"
																				},
																				"nativeSrc": "5828:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5828:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5818:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "5818:2:14"
																		},
																		"nativeSrc": "5818:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5818:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5811:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5811:6:14"
																},
																"nativeSrc": "5811:43:14",
																"nodeType": "YulFunctionCall",
																"src": "5811:43:14"
															},
															"nativeSrc": "5808:63:14",
															"nodeType": "YulIf",
															"src": "5808:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "5755:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5791:5:14",
														"nodeType": "YulTypedName",
														"src": "5791:5:14",
														"type": ""
													}
												],
												"src": "5755:122:14"
											},
											{
												"body": {
													"nativeSrc": "5935:87:14",
													"nodeType": "YulBlock",
													"src": "5935:87:14",
													"statements": [
														{
															"nativeSrc": "5945:29:14",
															"nodeType": "YulAssignment",
															"src": "5945:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5967:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5967:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5954:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5954:12:14"
																},
																"nativeSrc": "5954:20:14",
																"nodeType": "YulFunctionCall",
																"src": "5954:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5945:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5945:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6010:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6010:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "5983:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "5983:26:14"
																},
																"nativeSrc": "5983:33:14",
																"nodeType": "YulFunctionCall",
																"src": "5983:33:14"
															},
															"nativeSrc": "5983:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "5983:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "5883:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5913:6:14",
														"nodeType": "YulTypedName",
														"src": "5913:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5921:3:14",
														"nodeType": "YulTypedName",
														"src": "5921:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5929:5:14",
														"nodeType": "YulTypedName",
														"src": "5929:5:14",
														"type": ""
													}
												],
												"src": "5883:139:14"
											},
											{
												"body": {
													"nativeSrc": "6111:391:14",
													"nodeType": "YulBlock",
													"src": "6111:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6157:83:14",
																"nodeType": "YulBlock",
																"src": "6157:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6159:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "6159:77:14"
																			},
																			"nativeSrc": "6159:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6159:79:14"
																		},
																		"nativeSrc": "6159:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6159:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6132:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6132:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6141:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6141:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6128:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6128:3:14"
																		},
																		"nativeSrc": "6128:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6128:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6153:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6153:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6124:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6124:3:14"
																},
																"nativeSrc": "6124:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6124:32:14"
															},
															"nativeSrc": "6121:119:14",
															"nodeType": "YulIf",
															"src": "6121:119:14"
														},
														{
															"nativeSrc": "6250:117:14",
															"nodeType": "YulBlock",
															"src": "6250:117:14",
															"statements": [
																{
																	"nativeSrc": "6265:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6265:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6279:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6279:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6269:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6269:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6294:63:14",
																	"nodeType": "YulAssignment",
																	"src": "6294:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6329:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6329:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6340:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6340:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6325:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6325:3:14"
																				},
																				"nativeSrc": "6325:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6325:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6349:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6349:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6304:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "6304:20:14"
																		},
																		"nativeSrc": "6304:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6304:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6294:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6294:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6377:118:14",
															"nodeType": "YulBlock",
															"src": "6377:118:14",
															"statements": [
																{
																	"nativeSrc": "6392:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6392:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6406:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6406:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6396:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6396:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6422:63:14",
																	"nodeType": "YulAssignment",
																	"src": "6422:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6457:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6457:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6468:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6468:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6453:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6453:3:14"
																				},
																				"nativeSrc": "6453:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6453:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6477:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6477:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6432:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "6432:20:14"
																		},
																		"nativeSrc": "6432:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6432:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6422:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6422:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "6028:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6073:9:14",
														"nodeType": "YulTypedName",
														"src": "6073:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6084:7:14",
														"nodeType": "YulTypedName",
														"src": "6084:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6096:6:14",
														"nodeType": "YulTypedName",
														"src": "6096:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6104:6:14",
														"nodeType": "YulTypedName",
														"src": "6104:6:14",
														"type": ""
													}
												],
												"src": "6028:474:14"
											},
											{
												"body": {
													"nativeSrc": "6634:206:14",
													"nodeType": "YulBlock",
													"src": "6634:206:14",
													"statements": [
														{
															"nativeSrc": "6644:26:14",
															"nodeType": "YulAssignment",
															"src": "6644:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6656:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6656:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6667:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6667:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6652:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6652:3:14"
																},
																"nativeSrc": "6652:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6652:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6644:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6644:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6724:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6724:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6737:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6737:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6748:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6748:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6733:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6733:3:14"
																		},
																		"nativeSrc": "6733:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6733:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6680:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "6680:43:14"
																},
																"nativeSrc": "6680:71:14",
																"nodeType": "YulFunctionCall",
																"src": "6680:71:14"
															},
															"nativeSrc": "6680:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "6680:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6805:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6805:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6818:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6818:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6829:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6829:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6814:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6814:3:14"
																		},
																		"nativeSrc": "6814:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6814:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6761:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "6761:43:14"
																},
																"nativeSrc": "6761:72:14",
																"nodeType": "YulFunctionCall",
																"src": "6761:72:14"
															},
															"nativeSrc": "6761:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "6761:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6508:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6598:9:14",
														"nodeType": "YulTypedName",
														"src": "6598:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6610:6:14",
														"nodeType": "YulTypedName",
														"src": "6610:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6618:6:14",
														"nodeType": "YulTypedName",
														"src": "6618:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6629:4:14",
														"nodeType": "YulTypedName",
														"src": "6629:4:14",
														"type": ""
													}
												],
												"src": "6508:332:14"
											},
											{
												"body": {
													"nativeSrc": "6925:66:14",
													"nodeType": "YulBlock",
													"src": "6925:66:14",
													"statements": [
														{
															"nativeSrc": "6935:50:14",
															"nodeType": "YulAssignment",
															"src": "6935:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6979:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6979:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6948:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "6948:30:14"
																},
																"nativeSrc": "6948:37:14",
																"nodeType": "YulFunctionCall",
																"src": "6948:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6935:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "6935:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_GrandToken_$1742_to_t_address",
												"nativeSrc": "6846:145:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6905:5:14",
														"nodeType": "YulTypedName",
														"src": "6905:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6915:9:14",
														"nodeType": "YulTypedName",
														"src": "6915:9:14",
														"type": ""
													}
												],
												"src": "6846:145:14"
											},
											{
												"body": {
													"nativeSrc": "7081:85:14",
													"nodeType": "YulBlock",
													"src": "7081:85:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7098:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7098:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7153:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7153:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_GrandToken_$1742_to_t_address",
																			"nativeSrc": "7103:49:14",
																			"nodeType": "YulIdentifier",
																			"src": "7103:49:14"
																		},
																		"nativeSrc": "7103:56:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7103:56:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7091:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7091:6:14"
																},
																"nativeSrc": "7091:69:14",
																"nodeType": "YulFunctionCall",
																"src": "7091:69:14"
															},
															"nativeSrc": "7091:69:14",
															"nodeType": "YulExpressionStatement",
															"src": "7091:69:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_GrandToken_$1742_to_t_address_fromStack",
												"nativeSrc": "6997:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7069:5:14",
														"nodeType": "YulTypedName",
														"src": "7069:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7076:3:14",
														"nodeType": "YulTypedName",
														"src": "7076:3:14",
														"type": ""
													}
												],
												"src": "6997:169:14"
											},
											{
												"body": {
													"nativeSrc": "7289:143:14",
													"nodeType": "YulBlock",
													"src": "7289:143:14",
													"statements": [
														{
															"nativeSrc": "7299:26:14",
															"nodeType": "YulAssignment",
															"src": "7299:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7311:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7311:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7322:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7322:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7307:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7307:3:14"
																},
																"nativeSrc": "7307:18:14",
																"nodeType": "YulFunctionCall",
																"src": "7307:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7299:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7299:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7398:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7398:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7411:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7411:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7422:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7422:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7407:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7407:3:14"
																		},
																		"nativeSrc": "7407:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7407:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_GrandToken_$1742_to_t_address_fromStack",
																	"nativeSrc": "7335:62:14",
																	"nodeType": "YulIdentifier",
																	"src": "7335:62:14"
																},
																"nativeSrc": "7335:90:14",
																"nodeType": "YulFunctionCall",
																"src": "7335:90:14"
															},
															"nativeSrc": "7335:90:14",
															"nodeType": "YulExpressionStatement",
															"src": "7335:90:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_GrandToken_$1742__to_t_address__fromStack_reversed",
												"nativeSrc": "7172:260:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7261:9:14",
														"nodeType": "YulTypedName",
														"src": "7261:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7273:6:14",
														"nodeType": "YulTypedName",
														"src": "7273:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7284:4:14",
														"nodeType": "YulTypedName",
														"src": "7284:4:14",
														"type": ""
													}
												],
												"src": "7172:260:14"
											},
											{
												"body": {
													"nativeSrc": "7504:263:14",
													"nodeType": "YulBlock",
													"src": "7504:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7550:83:14",
																"nodeType": "YulBlock",
																"src": "7550:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7552:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7552:77:14"
																			},
																			"nativeSrc": "7552:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7552:79:14"
																		},
																		"nativeSrc": "7552:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7552:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7525:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7525:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7534:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7534:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7521:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7521:3:14"
																		},
																		"nativeSrc": "7521:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7521:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7546:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7546:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7517:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7517:3:14"
																},
																"nativeSrc": "7517:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7517:32:14"
															},
															"nativeSrc": "7514:119:14",
															"nodeType": "YulIf",
															"src": "7514:119:14"
														},
														{
															"nativeSrc": "7643:117:14",
															"nodeType": "YulBlock",
															"src": "7643:117:14",
															"statements": [
																{
																	"nativeSrc": "7658:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7658:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7672:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7672:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7662:6:14",
																			"nodeType": "YulTypedName",
																			"src": "7662:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7687:63:14",
																	"nodeType": "YulAssignment",
																	"src": "7687:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7722:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "7722:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7733:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7733:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7718:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7718:3:14"
																				},
																				"nativeSrc": "7718:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7718:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7742:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7742:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7697:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "7697:20:14"
																		},
																		"nativeSrc": "7697:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7697:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7687:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "7687:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7438:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7474:9:14",
														"nodeType": "YulTypedName",
														"src": "7474:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7485:7:14",
														"nodeType": "YulTypedName",
														"src": "7485:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7497:6:14",
														"nodeType": "YulTypedName",
														"src": "7497:6:14",
														"type": ""
													}
												],
												"src": "7438:329:14"
											},
											{
												"body": {
													"nativeSrc": "7801:152:14",
													"nodeType": "YulBlock",
													"src": "7801:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7818:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7818:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7821:77:14",
																		"nodeType": "YulLiteral",
																		"src": "7821:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7811:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7811:6:14"
																},
																"nativeSrc": "7811:88:14",
																"nodeType": "YulFunctionCall",
																"src": "7811:88:14"
															},
															"nativeSrc": "7811:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "7811:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7915:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7915:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7918:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7918:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7908:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7908:6:14"
																},
																"nativeSrc": "7908:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7908:15:14"
															},
															"nativeSrc": "7908:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "7908:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7939:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7939:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7942:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7942:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7932:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7932:6:14"
																},
																"nativeSrc": "7932:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7932:15:14"
															},
															"nativeSrc": "7932:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "7932:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7773:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "7773:180:14"
											},
											{
												"body": {
													"nativeSrc": "8003:147:14",
													"nodeType": "YulBlock",
													"src": "8003:147:14",
													"statements": [
														{
															"nativeSrc": "8013:25:14",
															"nodeType": "YulAssignment",
															"src": "8013:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8036:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "8036:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8018:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "8018:17:14"
																},
																"nativeSrc": "8018:20:14",
																"nodeType": "YulFunctionCall",
																"src": "8018:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8013:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "8013:1:14"
																}
															]
														},
														{
															"nativeSrc": "8047:25:14",
															"nodeType": "YulAssignment",
															"src": "8047:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8070:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "8070:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8052:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "8052:17:14"
																},
																"nativeSrc": "8052:20:14",
																"nodeType": "YulFunctionCall",
																"src": "8052:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8047:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "8047:1:14"
																}
															]
														},
														{
															"nativeSrc": "8081:16:14",
															"nodeType": "YulAssignment",
															"src": "8081:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8092:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "8092:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8095:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "8095:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8088:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8088:3:14"
																},
																"nativeSrc": "8088:9:14",
																"nodeType": "YulFunctionCall",
																"src": "8088:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8081:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8081:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8121:22:14",
																"nodeType": "YulBlock",
																"src": "8121:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8123:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "8123:16:14"
																			},
																			"nativeSrc": "8123:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8123:18:14"
																		},
																		"nativeSrc": "8123:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8123:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8113:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "8113:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8116:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8116:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8110:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8110:2:14"
																},
																"nativeSrc": "8110:10:14",
																"nodeType": "YulFunctionCall",
																"src": "8110:10:14"
															},
															"nativeSrc": "8107:36:14",
															"nodeType": "YulIf",
															"src": "8107:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7959:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7990:1:14",
														"nodeType": "YulTypedName",
														"src": "7990:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7993:1:14",
														"nodeType": "YulTypedName",
														"src": "7993:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7999:3:14",
														"nodeType": "YulTypedName",
														"src": "7999:3:14",
														"type": ""
													}
												],
												"src": "7959:191:14"
											},
											{
												"body": {
													"nativeSrc": "8252:73:14",
													"nodeType": "YulBlock",
													"src": "8252:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8269:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8269:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8274:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8274:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8262:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8262:6:14"
																},
																"nativeSrc": "8262:19:14",
																"nodeType": "YulFunctionCall",
																"src": "8262:19:14"
															},
															"nativeSrc": "8262:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "8262:19:14"
														},
														{
															"nativeSrc": "8290:29:14",
															"nodeType": "YulAssignment",
															"src": "8290:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8309:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8309:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8314:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8314:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8305:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8305:3:14"
																},
																"nativeSrc": "8305:14:14",
																"nodeType": "YulFunctionCall",
																"src": "8305:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8290:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "8290:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8156:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8224:3:14",
														"nodeType": "YulTypedName",
														"src": "8224:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8229:6:14",
														"nodeType": "YulTypedName",
														"src": "8229:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8240:11:14",
														"nodeType": "YulTypedName",
														"src": "8240:11:14",
														"type": ""
													}
												],
												"src": "8156:169:14"
											},
											{
												"body": {
													"nativeSrc": "8437:53:14",
													"nodeType": "YulBlock",
													"src": "8437:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8459:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8459:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8467:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8467:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8455:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8455:3:14"
																		},
																		"nativeSrc": "8455:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8455:14:14"
																	},
																	{
																		"hexValue": "546f6f206561726c79",
																		"kind": "string",
																		"nativeSrc": "8471:11:14",
																		"nodeType": "YulLiteral",
																		"src": "8471:11:14",
																		"type": "",
																		"value": "Too early"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8448:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8448:6:14"
																},
																"nativeSrc": "8448:35:14",
																"nodeType": "YulFunctionCall",
																"src": "8448:35:14"
															},
															"nativeSrc": "8448:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "8448:35:14"
														}
													]
												},
												"name": "store_literal_in_memory_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1",
												"nativeSrc": "8331:159:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8429:6:14",
														"nodeType": "YulTypedName",
														"src": "8429:6:14",
														"type": ""
													}
												],
												"src": "8331:159:14"
											},
											{
												"body": {
													"nativeSrc": "8642:219:14",
													"nodeType": "YulBlock",
													"src": "8642:219:14",
													"statements": [
														{
															"nativeSrc": "8652:73:14",
															"nodeType": "YulAssignment",
															"src": "8652:73:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8718:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8718:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8723:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8723:1:14",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8659:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "8659:58:14"
																},
																"nativeSrc": "8659:66:14",
																"nodeType": "YulFunctionCall",
																"src": "8659:66:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8652:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8652:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8823:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8823:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1",
																	"nativeSrc": "8734:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "8734:88:14"
																},
																"nativeSrc": "8734:93:14",
																"nodeType": "YulFunctionCall",
																"src": "8734:93:14"
															},
															"nativeSrc": "8734:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "8734:93:14"
														},
														{
															"nativeSrc": "8836:19:14",
															"nodeType": "YulAssignment",
															"src": "8836:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8847:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8847:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8852:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8852:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8843:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8843:3:14"
																},
																"nativeSrc": "8843:12:14",
																"nodeType": "YulFunctionCall",
																"src": "8843:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8836:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8836:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8496:365:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8630:3:14",
														"nodeType": "YulTypedName",
														"src": "8630:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8638:3:14",
														"nodeType": "YulTypedName",
														"src": "8638:3:14",
														"type": ""
													}
												],
												"src": "8496:365:14"
											},
											{
												"body": {
													"nativeSrc": "9038:248:14",
													"nodeType": "YulBlock",
													"src": "9038:248:14",
													"statements": [
														{
															"nativeSrc": "9048:26:14",
															"nodeType": "YulAssignment",
															"src": "9048:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9060:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9060:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9071:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9071:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9056:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9056:3:14"
																},
																"nativeSrc": "9056:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9056:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9048:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9048:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9095:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9095:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9106:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9106:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9091:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9091:3:14"
																		},
																		"nativeSrc": "9091:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9091:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9114:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "9114:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9120:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9120:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9110:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9110:3:14"
																		},
																		"nativeSrc": "9110:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9110:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9084:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9084:6:14"
																},
																"nativeSrc": "9084:47:14",
																"nodeType": "YulFunctionCall",
																"src": "9084:47:14"
															},
															"nativeSrc": "9084:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "9084:47:14"
														},
														{
															"nativeSrc": "9140:139:14",
															"nodeType": "YulAssignment",
															"src": "9140:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9274:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "9274:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9148:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "9148:124:14"
																},
																"nativeSrc": "9148:131:14",
																"nodeType": "YulFunctionCall",
																"src": "9148:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9140:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9140:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8867:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9018:9:14",
														"nodeType": "YulTypedName",
														"src": "9018:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9033:4:14",
														"nodeType": "YulTypedName",
														"src": "9033:4:14",
														"type": ""
													}
												],
												"src": "8867:419:14"
											},
											{
												"body": {
													"nativeSrc": "9320:152:14",
													"nodeType": "YulBlock",
													"src": "9320:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9337:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9340:77:14",
																		"nodeType": "YulLiteral",
																		"src": "9340:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9330:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9330:6:14"
																},
																"nativeSrc": "9330:88:14",
																"nodeType": "YulFunctionCall",
																"src": "9330:88:14"
															},
															"nativeSrc": "9330:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "9330:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9434:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9434:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9437:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9437:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9427:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9427:6:14"
																},
																"nativeSrc": "9427:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9427:15:14"
															},
															"nativeSrc": "9427:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "9427:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9458:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9458:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9461:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9461:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9451:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9451:6:14"
																},
																"nativeSrc": "9451:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9451:15:14"
															},
															"nativeSrc": "9451:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "9451:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9292:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "9292:180:14"
											},
											{
												"body": {
													"nativeSrc": "9584:62:14",
													"nodeType": "YulBlock",
													"src": "9584:62:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9606:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9606:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9614:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9614:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9602:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9602:3:14"
																		},
																		"nativeSrc": "9602:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9602:14:14"
																	},
																	{
																		"hexValue": "77697468647261773a206e6f7420676f6f64",
																		"kind": "string",
																		"nativeSrc": "9618:20:14",
																		"nodeType": "YulLiteral",
																		"src": "9618:20:14",
																		"type": "",
																		"value": "withdraw: not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9595:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9595:6:14"
																},
																"nativeSrc": "9595:44:14",
																"nodeType": "YulFunctionCall",
																"src": "9595:44:14"
															},
															"nativeSrc": "9595:44:14",
															"nodeType": "YulExpressionStatement",
															"src": "9595:44:14"
														}
													]
												},
												"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
												"nativeSrc": "9478:168:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9576:6:14",
														"nodeType": "YulTypedName",
														"src": "9576:6:14",
														"type": ""
													}
												],
												"src": "9478:168:14"
											},
											{
												"body": {
													"nativeSrc": "9798:220:14",
													"nodeType": "YulBlock",
													"src": "9798:220:14",
													"statements": [
														{
															"nativeSrc": "9808:74:14",
															"nodeType": "YulAssignment",
															"src": "9808:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9874:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9874:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9879:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9879:2:14",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9815:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "9815:58:14"
																},
																"nativeSrc": "9815:67:14",
																"nodeType": "YulFunctionCall",
																"src": "9815:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9808:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9808:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9980:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9980:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																	"nativeSrc": "9891:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "9891:88:14"
																},
																"nativeSrc": "9891:93:14",
																"nodeType": "YulFunctionCall",
																"src": "9891:93:14"
															},
															"nativeSrc": "9891:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "9891:93:14"
														},
														{
															"nativeSrc": "9993:19:14",
															"nodeType": "YulAssignment",
															"src": "9993:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10004:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10004:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10009:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10009:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10000:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10000:3:14"
																},
																"nativeSrc": "10000:12:14",
																"nodeType": "YulFunctionCall",
																"src": "10000:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9993:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9993:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9652:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9786:3:14",
														"nodeType": "YulTypedName",
														"src": "9786:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9794:3:14",
														"nodeType": "YulTypedName",
														"src": "9794:3:14",
														"type": ""
													}
												],
												"src": "9652:366:14"
											},
											{
												"body": {
													"nativeSrc": "10195:248:14",
													"nodeType": "YulBlock",
													"src": "10195:248:14",
													"statements": [
														{
															"nativeSrc": "10205:26:14",
															"nodeType": "YulAssignment",
															"src": "10205:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10217:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10217:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10228:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10228:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10213:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10213:3:14"
																},
																"nativeSrc": "10213:18:14",
																"nodeType": "YulFunctionCall",
																"src": "10213:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10205:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10205:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10252:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10252:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10263:1:14",
																				"nodeType": "YulLiteral",
																				"src": "10263:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10248:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10248:3:14"
																		},
																		"nativeSrc": "10248:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10248:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10271:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "10271:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10277:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10277:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10267:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10267:3:14"
																		},
																		"nativeSrc": "10267:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10267:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10241:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10241:6:14"
																},
																"nativeSrc": "10241:47:14",
																"nodeType": "YulFunctionCall",
																"src": "10241:47:14"
															},
															"nativeSrc": "10241:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "10241:47:14"
														},
														{
															"nativeSrc": "10297:139:14",
															"nodeType": "YulAssignment",
															"src": "10297:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10431:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "10431:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10305:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "10305:124:14"
																},
																"nativeSrc": "10305:131:14",
																"nodeType": "YulFunctionCall",
																"src": "10305:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10297:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10297:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10024:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10175:9:14",
														"nodeType": "YulTypedName",
														"src": "10175:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10190:4:14",
														"nodeType": "YulTypedName",
														"src": "10190:4:14",
														"type": ""
													}
												],
												"src": "10024:419:14"
											},
											{
												"body": {
													"nativeSrc": "10497:362:14",
													"nodeType": "YulBlock",
													"src": "10497:362:14",
													"statements": [
														{
															"nativeSrc": "10507:25:14",
															"nodeType": "YulAssignment",
															"src": "10507:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10530:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10530:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10512:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "10512:17:14"
																},
																"nativeSrc": "10512:20:14",
																"nodeType": "YulFunctionCall",
																"src": "10512:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10507:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "10507:1:14"
																}
															]
														},
														{
															"nativeSrc": "10541:25:14",
															"nodeType": "YulAssignment",
															"src": "10541:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10564:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10564:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10546:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "10546:17:14"
																},
																"nativeSrc": "10546:20:14",
																"nodeType": "YulFunctionCall",
																"src": "10546:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10541:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "10541:1:14"
																}
															]
														},
														{
															"nativeSrc": "10575:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "10575:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10598:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10598:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10601:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10601:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10594:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10594:3:14"
																},
																"nativeSrc": "10594:9:14",
																"nodeType": "YulFunctionCall",
																"src": "10594:9:14"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10579:11:14",
																	"nodeType": "YulTypedName",
																	"src": "10579:11:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10612:41:14",
															"nodeType": "YulAssignment",
															"src": "10612:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10641:11:14",
																		"nodeType": "YulIdentifier",
																		"src": "10641:11:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10623:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "10623:17:14"
																},
																"nativeSrc": "10623:30:14",
																"nodeType": "YulFunctionCall",
																"src": "10623:30:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10612:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "10612:7:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10830:22:14",
																"nodeType": "YulBlock",
																"src": "10830:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10832:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "10832:16:14"
																			},
																			"nativeSrc": "10832:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10832:18:14"
																		},
																		"nativeSrc": "10832:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10832:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10763:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "10763:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10756:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "10756:6:14"
																				},
																				"nativeSrc": "10756:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10756:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10786:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "10786:1:14"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10793:7:14",
																								"nodeType": "YulIdentifier",
																								"src": "10793:7:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10802:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "10802:1:14"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10789:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "10789:3:14"
																						},
																						"nativeSrc": "10789:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "10789:15:14"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10783:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "10783:2:14"
																				},
																				"nativeSrc": "10783:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10783:22:14"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10736:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "10736:2:14"
																		},
																		"nativeSrc": "10736:83:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10736:83:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10716:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10716:6:14"
																},
																"nativeSrc": "10716:113:14",
																"nodeType": "YulFunctionCall",
																"src": "10716:113:14"
															},
															"nativeSrc": "10713:139:14",
															"nodeType": "YulIf",
															"src": "10713:139:14"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10449:410:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10480:1:14",
														"nodeType": "YulTypedName",
														"src": "10480:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10483:1:14",
														"nodeType": "YulTypedName",
														"src": "10483:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10489:7:14",
														"nodeType": "YulTypedName",
														"src": "10489:7:14",
														"type": ""
													}
												],
												"src": "10449:410:14"
											},
											{
												"body": {
													"nativeSrc": "10893:152:14",
													"nodeType": "YulBlock",
													"src": "10893:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10910:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10910:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10913:77:14",
																		"nodeType": "YulLiteral",
																		"src": "10913:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10903:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10903:6:14"
																},
																"nativeSrc": "10903:88:14",
																"nodeType": "YulFunctionCall",
																"src": "10903:88:14"
															},
															"nativeSrc": "10903:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "10903:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11007:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11007:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11010:4:14",
																		"nodeType": "YulLiteral",
																		"src": "11010:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11000:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11000:6:14"
																},
																"nativeSrc": "11000:15:14",
																"nodeType": "YulFunctionCall",
																"src": "11000:15:14"
															},
															"nativeSrc": "11000:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "11000:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11031:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11031:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11034:4:14",
																		"nodeType": "YulLiteral",
																		"src": "11034:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11024:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11024:6:14"
																},
																"nativeSrc": "11024:15:14",
																"nodeType": "YulFunctionCall",
																"src": "11024:15:14"
															},
															"nativeSrc": "11024:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "11024:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10865:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "10865:180:14"
											},
											{
												"body": {
													"nativeSrc": "11093:143:14",
													"nodeType": "YulBlock",
													"src": "11093:143:14",
													"statements": [
														{
															"nativeSrc": "11103:25:14",
															"nodeType": "YulAssignment",
															"src": "11103:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11126:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11126:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11108:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "11108:17:14"
																},
																"nativeSrc": "11108:20:14",
																"nodeType": "YulFunctionCall",
																"src": "11108:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11103:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "11103:1:14"
																}
															]
														},
														{
															"nativeSrc": "11137:25:14",
															"nodeType": "YulAssignment",
															"src": "11137:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11160:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11160:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11142:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "11142:17:14"
																},
																"nativeSrc": "11142:20:14",
																"nodeType": "YulFunctionCall",
																"src": "11142:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11137:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "11137:1:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11184:22:14",
																"nodeType": "YulBlock",
																"src": "11184:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11186:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "11186:16:14"
																			},
																			"nativeSrc": "11186:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11186:18:14"
																		},
																		"nativeSrc": "11186:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11186:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11181:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11181:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11174:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11174:6:14"
																},
																"nativeSrc": "11174:9:14",
																"nodeType": "YulFunctionCall",
																"src": "11174:9:14"
															},
															"nativeSrc": "11171:35:14",
															"nodeType": "YulIf",
															"src": "11171:35:14"
														},
														{
															"nativeSrc": "11216:14:14",
															"nodeType": "YulAssignment",
															"src": "11216:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11225:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11225:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11228:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11228:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11221:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11221:3:14"
																},
																"nativeSrc": "11221:9:14",
																"nodeType": "YulFunctionCall",
																"src": "11221:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11216:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "11216:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11051:185:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11082:1:14",
														"nodeType": "YulTypedName",
														"src": "11082:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11085:1:14",
														"nodeType": "YulTypedName",
														"src": "11085:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11091:1:14",
														"nodeType": "YulTypedName",
														"src": "11091:1:14",
														"type": ""
													}
												],
												"src": "11051:185:14"
											},
											{
												"body": {
													"nativeSrc": "11287:149:14",
													"nodeType": "YulBlock",
													"src": "11287:149:14",
													"statements": [
														{
															"nativeSrc": "11297:25:14",
															"nodeType": "YulAssignment",
															"src": "11297:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11320:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11320:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11302:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "11302:17:14"
																},
																"nativeSrc": "11302:20:14",
																"nodeType": "YulFunctionCall",
																"src": "11302:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11297:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "11297:1:14"
																}
															]
														},
														{
															"nativeSrc": "11331:25:14",
															"nodeType": "YulAssignment",
															"src": "11331:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11354:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11354:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11336:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "11336:17:14"
																},
																"nativeSrc": "11336:20:14",
																"nodeType": "YulFunctionCall",
																"src": "11336:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11331:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "11331:1:14"
																}
															]
														},
														{
															"nativeSrc": "11365:17:14",
															"nodeType": "YulAssignment",
															"src": "11365:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11377:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11377:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11380:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11380:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11373:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11373:3:14"
																},
																"nativeSrc": "11373:9:14",
																"nodeType": "YulFunctionCall",
																"src": "11373:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11365:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11365:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11407:22:14",
																"nodeType": "YulBlock",
																"src": "11407:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11409:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "11409:16:14"
																			},
																			"nativeSrc": "11409:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11409:18:14"
																		},
																		"nativeSrc": "11409:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11409:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11398:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "11398:4:14"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11404:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11404:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11395:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "11395:2:14"
																},
																"nativeSrc": "11395:11:14",
																"nodeType": "YulFunctionCall",
																"src": "11395:11:14"
															},
															"nativeSrc": "11392:37:14",
															"nodeType": "YulIf",
															"src": "11392:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11242:194:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11273:1:14",
														"nodeType": "YulTypedName",
														"src": "11273:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11276:1:14",
														"nodeType": "YulTypedName",
														"src": "11276:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11282:4:14",
														"nodeType": "YulTypedName",
														"src": "11282:4:14",
														"type": ""
													}
												],
												"src": "11242:194:14"
											},
											{
												"body": {
													"nativeSrc": "11505:80:14",
													"nodeType": "YulBlock",
													"src": "11505:80:14",
													"statements": [
														{
															"nativeSrc": "11515:22:14",
															"nodeType": "YulAssignment",
															"src": "11515:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11530:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11530:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11524:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "11524:5:14"
																},
																"nativeSrc": "11524:13:14",
																"nodeType": "YulFunctionCall",
																"src": "11524:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11515:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "11515:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11573:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "11573:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "11546:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "11546:26:14"
																},
																"nativeSrc": "11546:33:14",
																"nodeType": "YulFunctionCall",
																"src": "11546:33:14"
															},
															"nativeSrc": "11546:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "11546:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "11442:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11483:6:14",
														"nodeType": "YulTypedName",
														"src": "11483:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11491:3:14",
														"nodeType": "YulTypedName",
														"src": "11491:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11499:5:14",
														"nodeType": "YulTypedName",
														"src": "11499:5:14",
														"type": ""
													}
												],
												"src": "11442:143:14"
											},
											{
												"body": {
													"nativeSrc": "11668:274:14",
													"nodeType": "YulBlock",
													"src": "11668:274:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "11714:83:14",
																"nodeType": "YulBlock",
																"src": "11714:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11716:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11716:77:14"
																			},
																			"nativeSrc": "11716:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11716:79:14"
																		},
																		"nativeSrc": "11716:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11716:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11689:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11689:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11698:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11698:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11685:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11685:3:14"
																		},
																		"nativeSrc": "11685:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11685:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11710:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11710:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11681:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11681:3:14"
																},
																"nativeSrc": "11681:32:14",
																"nodeType": "YulFunctionCall",
																"src": "11681:32:14"
															},
															"nativeSrc": "11678:119:14",
															"nodeType": "YulIf",
															"src": "11678:119:14"
														},
														{
															"nativeSrc": "11807:128:14",
															"nodeType": "YulBlock",
															"src": "11807:128:14",
															"statements": [
																{
																	"nativeSrc": "11822:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11822:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11836:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11836:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11826:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11826:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11851:74:14",
																	"nodeType": "YulAssignment",
																	"src": "11851:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11897:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11897:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11908:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11908:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11893:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11893:3:14"
																				},
																				"nativeSrc": "11893:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11893:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11917:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11917:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "11861:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "11861:31:14"
																		},
																		"nativeSrc": "11861:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11861:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11851:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11851:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "11591:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11638:9:14",
														"nodeType": "YulTypedName",
														"src": "11638:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11649:7:14",
														"nodeType": "YulTypedName",
														"src": "11649:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11661:6:14",
														"nodeType": "YulTypedName",
														"src": "11661:6:14",
														"type": ""
													}
												],
												"src": "11591:351:14"
											},
											{
												"body": {
													"nativeSrc": "12074:206:14",
													"nodeType": "YulBlock",
													"src": "12074:206:14",
													"statements": [
														{
															"nativeSrc": "12084:26:14",
															"nodeType": "YulAssignment",
															"src": "12084:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12096:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "12096:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12107:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12107:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12092:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12092:3:14"
																},
																"nativeSrc": "12092:18:14",
																"nodeType": "YulFunctionCall",
																"src": "12092:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12084:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12084:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12164:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12164:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12177:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12177:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12188:1:14",
																				"nodeType": "YulLiteral",
																				"src": "12188:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12173:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12173:3:14"
																		},
																		"nativeSrc": "12173:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12173:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12120:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "12120:43:14"
																},
																"nativeSrc": "12120:71:14",
																"nodeType": "YulFunctionCall",
																"src": "12120:71:14"
															},
															"nativeSrc": "12120:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "12120:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12245:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12245:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12258:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12258:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12269:2:14",
																				"nodeType": "YulLiteral",
																				"src": "12269:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12254:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12254:3:14"
																		},
																		"nativeSrc": "12254:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12254:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12201:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "12201:43:14"
																},
																"nativeSrc": "12201:72:14",
																"nodeType": "YulFunctionCall",
																"src": "12201:72:14"
															},
															"nativeSrc": "12201:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "12201:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11948:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12038:9:14",
														"nodeType": "YulTypedName",
														"src": "12038:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12050:6:14",
														"nodeType": "YulTypedName",
														"src": "12050:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12058:6:14",
														"nodeType": "YulTypedName",
														"src": "12058:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12069:4:14",
														"nodeType": "YulTypedName",
														"src": "12069:4:14",
														"type": ""
													}
												],
												"src": "11948:332:14"
											},
											{
												"body": {
													"nativeSrc": "12412:206:14",
													"nodeType": "YulBlock",
													"src": "12412:206:14",
													"statements": [
														{
															"nativeSrc": "12422:26:14",
															"nodeType": "YulAssignment",
															"src": "12422:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12434:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "12434:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12445:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12445:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12430:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12430:3:14"
																},
																"nativeSrc": "12430:18:14",
																"nodeType": "YulFunctionCall",
																"src": "12430:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12422:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12422:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12502:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12502:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12515:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12515:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12526:1:14",
																				"nodeType": "YulLiteral",
																				"src": "12526:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12511:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12511:3:14"
																		},
																		"nativeSrc": "12511:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12511:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12458:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "12458:43:14"
																},
																"nativeSrc": "12458:71:14",
																"nodeType": "YulFunctionCall",
																"src": "12458:71:14"
															},
															"nativeSrc": "12458:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "12458:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12583:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12583:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12596:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12596:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12607:2:14",
																				"nodeType": "YulLiteral",
																				"src": "12607:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12592:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12592:3:14"
																		},
																		"nativeSrc": "12592:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12592:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12539:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "12539:43:14"
																},
																"nativeSrc": "12539:72:14",
																"nodeType": "YulFunctionCall",
																"src": "12539:72:14"
															},
															"nativeSrc": "12539:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "12539:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "12286:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12376:9:14",
														"nodeType": "YulTypedName",
														"src": "12376:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12388:6:14",
														"nodeType": "YulTypedName",
														"src": "12388:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12396:6:14",
														"nodeType": "YulTypedName",
														"src": "12396:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12407:4:14",
														"nodeType": "YulTypedName",
														"src": "12407:4:14",
														"type": ""
													}
												],
												"src": "12286:332:14"
											},
											{
												"body": {
													"nativeSrc": "12730:69:14",
													"nodeType": "YulBlock",
													"src": "12730:69:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12752:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12752:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12760:1:14",
																				"nodeType": "YulLiteral",
																				"src": "12760:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12748:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12748:3:14"
																		},
																		"nativeSrc": "12748:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12748:14:14"
																	},
																	{
																		"hexValue": "416c6c6f77616e6365206e6f74206869676820656e6f756768",
																		"kind": "string",
																		"nativeSrc": "12764:27:14",
																		"nodeType": "YulLiteral",
																		"src": "12764:27:14",
																		"type": "",
																		"value": "Allowance not high enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12741:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12741:6:14"
																},
																"nativeSrc": "12741:51:14",
																"nodeType": "YulFunctionCall",
																"src": "12741:51:14"
															},
															"nativeSrc": "12741:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "12741:51:14"
														}
													]
												},
												"name": "store_literal_in_memory_25e66a24e97bfb0eb0e79a0138ac0364f38b3452aeb9bfd71dfcf6bc01fec525",
												"nativeSrc": "12624:175:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12722:6:14",
														"nodeType": "YulTypedName",
														"src": "12722:6:14",
														"type": ""
													}
												],
												"src": "12624:175:14"
											},
											{
												"body": {
													"nativeSrc": "12951:220:14",
													"nodeType": "YulBlock",
													"src": "12951:220:14",
													"statements": [
														{
															"nativeSrc": "12961:74:14",
															"nodeType": "YulAssignment",
															"src": "12961:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13027:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13027:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13032:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13032:2:14",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12968:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "12968:58:14"
																},
																"nativeSrc": "12968:67:14",
																"nodeType": "YulFunctionCall",
																"src": "12968:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12961:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12961:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13133:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13133:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25e66a24e97bfb0eb0e79a0138ac0364f38b3452aeb9bfd71dfcf6bc01fec525",
																	"nativeSrc": "13044:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "13044:88:14"
																},
																"nativeSrc": "13044:93:14",
																"nodeType": "YulFunctionCall",
																"src": "13044:93:14"
															},
															"nativeSrc": "13044:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "13044:93:14"
														},
														{
															"nativeSrc": "13146:19:14",
															"nodeType": "YulAssignment",
															"src": "13146:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13157:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13157:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13162:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13162:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13153:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13153:3:14"
																},
																"nativeSrc": "13153:12:14",
																"nodeType": "YulFunctionCall",
																"src": "13153:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13146:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13146:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25e66a24e97bfb0eb0e79a0138ac0364f38b3452aeb9bfd71dfcf6bc01fec525_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12805:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12939:3:14",
														"nodeType": "YulTypedName",
														"src": "12939:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12947:3:14",
														"nodeType": "YulTypedName",
														"src": "12947:3:14",
														"type": ""
													}
												],
												"src": "12805:366:14"
											},
											{
												"body": {
													"nativeSrc": "13348:248:14",
													"nodeType": "YulBlock",
													"src": "13348:248:14",
													"statements": [
														{
															"nativeSrc": "13358:26:14",
															"nodeType": "YulAssignment",
															"src": "13358:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13370:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13370:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13381:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13381:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13366:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13366:3:14"
																},
																"nativeSrc": "13366:18:14",
																"nodeType": "YulFunctionCall",
																"src": "13366:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13358:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13358:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13405:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13405:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13416:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13416:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13401:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13401:3:14"
																		},
																		"nativeSrc": "13401:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13401:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13424:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "13424:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13430:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13430:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13420:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13420:3:14"
																		},
																		"nativeSrc": "13420:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13420:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13394:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13394:6:14"
																},
																"nativeSrc": "13394:47:14",
																"nodeType": "YulFunctionCall",
																"src": "13394:47:14"
															},
															"nativeSrc": "13394:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "13394:47:14"
														},
														{
															"nativeSrc": "13450:139:14",
															"nodeType": "YulAssignment",
															"src": "13450:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13584:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "13584:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25e66a24e97bfb0eb0e79a0138ac0364f38b3452aeb9bfd71dfcf6bc01fec525_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13458:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "13458:124:14"
																},
																"nativeSrc": "13458:131:14",
																"nodeType": "YulFunctionCall",
																"src": "13458:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13450:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13450:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25e66a24e97bfb0eb0e79a0138ac0364f38b3452aeb9bfd71dfcf6bc01fec525__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13177:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13328:9:14",
														"nodeType": "YulTypedName",
														"src": "13328:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13343:4:14",
														"nodeType": "YulTypedName",
														"src": "13343:4:14",
														"type": ""
													}
												],
												"src": "13177:419:14"
											},
											{
												"body": {
													"nativeSrc": "13756:288:14",
													"nodeType": "YulBlock",
													"src": "13756:288:14",
													"statements": [
														{
															"nativeSrc": "13766:26:14",
															"nodeType": "YulAssignment",
															"src": "13766:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13778:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13778:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13789:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13789:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13774:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13774:3:14"
																},
																"nativeSrc": "13774:18:14",
																"nodeType": "YulFunctionCall",
																"src": "13774:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13766:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13766:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13846:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13846:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13859:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13859:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13870:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13870:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13855:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13855:3:14"
																		},
																		"nativeSrc": "13855:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13855:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13802:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "13802:43:14"
																},
																"nativeSrc": "13802:71:14",
																"nodeType": "YulFunctionCall",
																"src": "13802:71:14"
															},
															"nativeSrc": "13802:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "13802:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13927:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13927:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13940:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13940:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13951:2:14",
																				"nodeType": "YulLiteral",
																				"src": "13951:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13936:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13936:3:14"
																		},
																		"nativeSrc": "13936:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13936:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13883:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "13883:43:14"
																},
																"nativeSrc": "13883:72:14",
																"nodeType": "YulFunctionCall",
																"src": "13883:72:14"
															},
															"nativeSrc": "13883:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "13883:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14009:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14009:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14022:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14022:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14033:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14033:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14018:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14018:3:14"
																		},
																		"nativeSrc": "14018:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14018:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13965:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "13965:43:14"
																},
																"nativeSrc": "13965:72:14",
																"nodeType": "YulFunctionCall",
																"src": "13965:72:14"
															},
															"nativeSrc": "13965:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "13965:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13602:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13712:9:14",
														"nodeType": "YulTypedName",
														"src": "13712:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13724:6:14",
														"nodeType": "YulTypedName",
														"src": "13724:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13732:6:14",
														"nodeType": "YulTypedName",
														"src": "13732:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13740:6:14",
														"nodeType": "YulTypedName",
														"src": "13740:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13751:4:14",
														"nodeType": "YulTypedName",
														"src": "13751:4:14",
														"type": ""
													}
												],
												"src": "13602:442:14"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$967_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$967_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$967_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$967_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$967_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$967(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$967(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$967(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$967(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$967(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$967t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$967(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function convert_t_contract$_GrandToken_$1742_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_GrandToken_$1742_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_GrandToken_$1742_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_GrandToken_$1742__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_GrandToken_$1742_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Too early\")\n\n    }\n\n    function abi_encode_t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw: not good\")\n\n    }\n\n    function abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_25e66a24e97bfb0eb0e79a0138ac0364f38b3452aeb9bfd71dfcf6bc01fec525(memPtr) {\n\n        mstore(add(memPtr, 0), \"Allowance not high enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_25e66a24e97bfb0eb0e79a0138ac0364f38b3452aeb9bfd71dfcf6bc01fec525_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_25e66a24e97bfb0eb0e79a0138ac0364f38b3452aeb9bfd71dfcf6bc01fec525(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25e66a24e97bfb0eb0e79a0138ac0364f38b3452aeb9bfd71dfcf6bc01fec525__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25e66a24e97bfb0eb0e79a0138ac0364f38b3452aeb9bfd71dfcf6bc01fec525_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610171575f3560e01c8063715018a6116100dc5780638dbb1e3a11610095578063b99265571161006f578063b9926557146103f3578063d129459b14610411578063e2bbb1581461042f578063f2fde38b1461044b57610171565b80638dbb1e3a14610374578063913e77ad146103a457806393f1a40b146103c257610171565b8063715018a6146102d657806378e97925146102e05780637abceffd146102fe57806383e271851461031a5780638aa28550146103385780638da5cb5b1461035657610171565b806346ca6bea1161012e57806346ca6bea1461023c57806348cd4cb11461025857806351eb05a6146102765780635312ea8e1461029257806357e78adc146102ae578063630b5ba1146102cc57610171565b8063081e3eda146101755780631526fe271461019357806317caf6f1146101c65780631aed6553146101e4578063212f14cc14610202578063441a3e7014610220575b5f5ffd5b61017d610467565b60405161018a91906114bd565b60405180910390f35b6101ad60048036038101906101a89190611504565b610473565b6040516101bd94939291906115a9565b60405180910390f35b6101ce6104cd565b6040516101db91906114bd565b60405180910390f35b6101ec6104d3565b6040516101f991906114bd565b60405180910390f35b61020a6104d9565b60405161021791906114bd565b60405180910390f35b61023a600480360381019061023591906115ec565b6104df565b005b6102566004803603810190610251919061165f565b610790565b005b610260610816565b60405161026d91906114bd565b60405180910390f35b610290600480360381019061028b9190611504565b61081c565b005b6102ac60048036038101906102a79190611504565b610a33565b005b6102b6610b68565b6040516102c391906114bd565b60405180910390f35b6102d4610b6e565b005b6102de610b9c565b005b6102e8610baf565b6040516102f591906114bd565b60405180910390f35b610318600480360381019061031391906116fb565b610bb5565b005b610322610ca8565b60405161032f91906114bd565b60405180910390f35b610340610cae565b60405161034d91906114bd565b60405180910390f35b61035e610cb3565b60405161036b919061175a565b60405180910390f35b61038e600480360381019061038991906115ec565b610cda565b60405161039b91906114bd565b60405180910390f35b6103ac610d5a565b6040516103b9919061175a565b60405180910390f35b6103dc60048036038101906103d7919061179d565b610d7f565b6040516103ea9291906117db565b60405180910390f35b6103fb610daa565b60405161040891906114bd565b60405180910390f35b610419610db9565b6040516104269190611822565b60405180910390f35b610449600480360381019061044491906115ec565b610dde565b005b6104656004803603810190610460919061183b565b611136565b005b5f600780549050905090565b60078181548110610482575f80fd5b905f5260205f2090600402015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60095481565b60035481565b60045481565b6234bc00600b546104f09190611893565b4211610531576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052890611920565b60405180910390fd5b5f600783815481106105465761054561193e565b5b905f5260205f20906004020190505f60085f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905082815f015410156105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e0906119b5565b60405180910390fd5b6105f28461081c565b5f816001015464e8d4a510008460030154845f015461061191906119d3565b61061b9190611a41565b6106259190611a71565b905083825f01546106369190611a71565b825f018190555064e8d4a510008360030154835f015461065691906119d3565b6106609190611a41565b82600101819055506106b4338260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111ba9092919063ffffffff16565b6107013385855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111ba9092919063ffffffff16565b84835f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb5678760405161078191906114bd565b60405180910390a45050505050565b610798611239565b80156107a7576107a6610b6e565b5b81600784815481106107bc576107bb61193e565b5b905f5260205f209060040201600101546009546107d99190611a71565b6107e39190611893565b60098190555081600784815481106107fe576107fd61193e565b5b905f5260205f20906004020160010181905550505050565b600a5481565b5f600782815481106108315761083061193e565b5b905f5260205f2090600402019050806002015443116108505750610a30565b5f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108ac919061175a565b602060405180830381865afa1580156108c7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108eb9190611ab8565b90505f8103610904574382600201819055505050610a30565b5f600954836001015460045461091e866002015443610cda565b61092891906119d3565b61093291906119d3565b61093c9190611a41565b90508164e8d4a510008261095091906119d3565b61095a9190611a41565b83600301546109699190611893565b83600301819055504383600201819055506a037a172815e4355715555560055411610a2c578060055461099c9190611893565b60058190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b81526004016109fe929190611ae3565b5f604051808303815f87803b158015610a15575f5ffd5b505af1158015610a27573d5f5f3e3d5ffd5b505050505b5050505b50565b5f60078281548110610a4857610a4761193e565b5b905f5260205f20906004020190505f60085f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015490505f826001015490505f835f01819055505f8360010181905550610b123383865f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111ba9092919063ffffffff16565b843373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059583604051610b5991906114bd565b60405180910390a35050505050565b60065481565b5f60078054905090505f5f90505b81811015610b9857610b8d8161081c565b806001019050610b7c565b5050565b610ba4611239565b610bad5f6112c0565b565b600b5481565b610bbd611239565b8015610bcc57610bcb610b6e565b5b82600954610bda9190611893565b600981905550600760405180608001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018581526020014381526020015f815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301555050505050565b60055481565b600381565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f6003548211610d035760038383610cf29190611a71565b610cfc91906119d3565b9050610d54565b6003548310610d1f578282610d189190611a71565b9050610d54565b60035482610d2d9190611a71565b600384600354610d3d9190611a71565b610d4791906119d3565b610d519190611893565b90505b92915050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6008602052815f5260405f20602052805f5260405f205f9150915050805f0154908060010154905082565b6a037a172815e4355715555581565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60078381548110610df357610df261193e565b5b905f5260205f20906004020190505f60085f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610ead929190611b0a565b602060405180830381865afa158015610ec8573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eec9190611ab8565b831115610f2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2590611b7b565b60405180910390fd5b610f7d333085855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611381909392919063ffffffff16565b610f868461081c565b5f816001015464e8d4a510008460030154845f0154610fa591906119d3565b610faf9190611a41565b610fb99190611a71565b905083825f0154610fca9190611893565b825f01819055506234bc00600b54610fe29190611893565b42118015610fef57505f81115b156110705764e8d4a510008360030154835f015461100d91906119d3565b6110179190611a41565b826001018190555061106b338260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111ba9092919063ffffffff16565b6110a7565b8064e8d4a510008460030154845f015461108a91906119d3565b6110949190611a41565b61109e9190611a71565b82600101819055505b84835f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78760405161112791906114bd565b60405180910390a45050505050565b61113e611239565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111ae575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111a5919061175a565b60405180910390fd5b6111b7816112c0565b50565b611234838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016111ed929190611ae3565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611403565b505050565b61124161149e565b73ffffffffffffffffffffffffffffffffffffffff1661125f610cb3565b73ffffffffffffffffffffffffffffffffffffffff16146112be5761128261149e565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112b5919061175a565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113fd848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016113b693929190611b99565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611403565b50505050565b5f5f60205f8451602086015f885af180611422576040513d5f823e3d81fd5b3d92505f519150505f821461143b576001811415611456565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561149857836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161148f919061175a565b60405180910390fd5b50505050565b5f33905090565b5f819050919050565b6114b7816114a5565b82525050565b5f6020820190506114d05f8301846114ae565b92915050565b5f5ffd5b6114e3816114a5565b81146114ed575f5ffd5b50565b5f813590506114fe816114da565b92915050565b5f60208284031215611519576115186114d6565b5b5f611526848285016114f0565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61157161156c6115678461152f565b61154e565b61152f565b9050919050565b5f61158282611557565b9050919050565b5f61159382611578565b9050919050565b6115a381611589565b82525050565b5f6080820190506115bc5f83018761159a565b6115c960208301866114ae565b6115d660408301856114ae565b6115e360608301846114ae565b95945050505050565b5f5f60408385031215611602576116016114d6565b5b5f61160f858286016114f0565b9250506020611620858286016114f0565b9150509250929050565b5f8115159050919050565b61163e8161162a565b8114611648575f5ffd5b50565b5f8135905061165981611635565b92915050565b5f5f5f60608486031215611676576116756114d6565b5b5f611683868287016114f0565b9350506020611694868287016114f0565b92505060406116a58682870161164b565b9150509250925092565b5f6116b98261152f565b9050919050565b5f6116ca826116af565b9050919050565b6116da816116c0565b81146116e4575f5ffd5b50565b5f813590506116f5816116d1565b92915050565b5f5f5f60608486031215611712576117116114d6565b5b5f61171f868287016114f0565b9350506020611730868287016116e7565b92505060406117418682870161164b565b9150509250925092565b611754816116af565b82525050565b5f60208201905061176d5f83018461174b565b92915050565b61177c816116af565b8114611786575f5ffd5b50565b5f8135905061179781611773565b92915050565b5f5f604083850312156117b3576117b26114d6565b5b5f6117c0858286016114f0565b92505060206117d185828601611789565b9150509250929050565b5f6040820190506117ee5f8301856114ae565b6117fb60208301846114ae565b9392505050565b5f61180c82611578565b9050919050565b61181c81611802565b82525050565b5f6020820190506118355f830184611813565b92915050565b5f602082840312156118505761184f6114d6565b5b5f61185d84828501611789565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61189d826114a5565b91506118a8836114a5565b92508282019050808211156118c0576118bf611866565b5b92915050565b5f82825260208201905092915050565b7f546f6f206561726c7900000000000000000000000000000000000000000000005f82015250565b5f61190a6009836118c6565b9150611915826118d6565b602082019050919050565b5f6020820190508181035f830152611937816118fe565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f77697468647261773a206e6f7420676f6f6400000000000000000000000000005f82015250565b5f61199f6012836118c6565b91506119aa8261196b565b602082019050919050565b5f6020820190508181035f8301526119cc81611993565b9050919050565b5f6119dd826114a5565b91506119e8836114a5565b92508282026119f6816114a5565b91508282048414831517611a0d57611a0c611866565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611a4b826114a5565b9150611a56836114a5565b925082611a6657611a65611a14565b5b828204905092915050565b5f611a7b826114a5565b9150611a86836114a5565b9250828203905081811115611a9e57611a9d611866565b5b92915050565b5f81519050611ab2816114da565b92915050565b5f60208284031215611acd57611acc6114d6565b5b5f611ada84828501611aa4565b91505092915050565b5f604082019050611af65f83018561174b565b611b0360208301846114ae565b9392505050565b5f604082019050611b1d5f83018561174b565b611b2a602083018461174b565b9392505050565b7f416c6c6f77616e6365206e6f74206869676820656e6f756768000000000000005f82015250565b5f611b656019836118c6565b9150611b7082611b31565b602082019050919050565b5f6020820190508181035f830152611b9281611b59565b9050919050565b5f606082019050611bac5f83018661174b565b611bb9602083018561174b565b611bc660408301846114ae565b94935050505056fea26469706673582212202227a373fc540a7b682224ca800fc24dd6ade251fbe8b159ce32d7703633a74f64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8DBB1E3A GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB9926557 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB9926557 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xD129459B EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44B JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x913E77AD EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x3C2 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x7ABCEFFD EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x83E27185 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x356 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x46CA6BEA GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x46CA6BEA EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x57E78ADC EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x2CC JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x212F14CC EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x220 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH2 0x4DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x165F JUMP JUMPDEST PUSH2 0x790 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x260 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B6 PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH2 0xB6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DE PUSH2 0xB9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0xBB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH2 0xCA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH2 0xCAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AC PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP3 SWAP2 SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH2 0xDAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x449 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH2 0xDDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x465 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x1136 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x482 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x34BC00 PUSH1 0xB SLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x528 SWAP1 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x546 JUMPI PUSH2 0x545 PUSH2 0x193E JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH0 PUSH1 0x8 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E0 SWAP1 PUSH2 0x19B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F2 DUP5 PUSH2 0x81C JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST PUSH2 0x625 SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST SWAP1 POP DUP4 DUP3 PUSH0 ADD SLOAD PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH5 0xE8D4A51000 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x660 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x6B4 CALLER DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11BA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x701 CALLER DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11BA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 DUP8 PUSH1 0x40 MLOAD PUSH2 0x781 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x798 PUSH2 0x1239 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A7 JUMPI PUSH2 0x7A6 PUSH2 0xB6E JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7BC JUMPI PUSH2 0x7BB PUSH2 0x193E JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0x193E JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x831 JUMPI PUSH2 0x830 PUSH2 0x193E JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x850 JUMPI POP PUSH2 0xA30 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C7 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EB SWAP2 SWAP1 PUSH2 0x1AB8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x904 JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0xA30 JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0x91E DUP7 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x932 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x93C SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST SWAP1 POP DUP2 PUSH5 0xE8D4A51000 DUP3 PUSH2 0x950 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x95A SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0x969 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST DUP4 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH11 0x37A172815E43557155555 PUSH1 0x5 SLOAD GT PUSH2 0xA2C JUMPI DUP1 PUSH1 0x5 SLOAD PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FE SWAP3 SWAP2 SWAP1 PUSH2 0x1AE3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA15 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA27 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA48 JUMPI PUSH2 0xA47 PUSH2 0x193E JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH0 PUSH1 0x8 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 DUP4 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xB12 CALLER DUP4 DUP7 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11BA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB59 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB98 JUMPI PUSH2 0xB8D DUP2 PUSH2 0x81C JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xB7C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBA4 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0xBAD PUSH0 PUSH2 0x12C0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBBD PUSH2 0x1239 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBCC JUMPI PUSH2 0xBCB PUSH2 0xB6E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x9 SLOAD PUSH2 0xBDA SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD DUP3 GT PUSH2 0xD03 JUMPI PUSH1 0x3 DUP4 DUP4 PUSH2 0xCF2 SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST PUSH2 0xCFC SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST SWAP1 POP PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP4 LT PUSH2 0xD1F JUMPI DUP3 DUP3 PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST SWAP1 POP PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP3 PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST PUSH1 0x3 DUP5 PUSH1 0x3 SLOAD PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST PUSH2 0xD47 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0xD51 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH11 0x37A172815E43557155555 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xDF3 JUMPI PUSH2 0xDF2 PUSH2 0x193E JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH0 PUSH1 0x8 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAD SWAP3 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEEC SWAP2 SWAP1 PUSH2 0x1AB8 JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF25 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF7D CALLER ADDRESS DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1381 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF86 DUP5 PUSH2 0x81C JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0xFA5 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0xFAF SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST PUSH2 0xFB9 SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST SWAP1 POP DUP4 DUP3 PUSH0 ADD SLOAD PUSH2 0xFCA SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH3 0x34BC00 PUSH1 0xB SLOAD PUSH2 0xFE2 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST TIMESTAMP GT DUP1 ISZERO PUSH2 0xFEF JUMPI POP PUSH0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1070 JUMPI PUSH5 0xE8D4A51000 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x100D SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1017 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x106B CALLER DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11BA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10A7 JUMP JUMPDEST DUP1 PUSH5 0xE8D4A51000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x108A SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1094 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST PUSH2 0x109E SWAP2 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1127 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x113E PUSH2 0x1239 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A5 SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B7 DUP2 PUSH2 0x12C0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1234 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x11ED SWAP3 SWAP2 SWAP1 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1403 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1241 PUSH2 0x149E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x125F PUSH2 0xCB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12BE JUMPI PUSH2 0x1282 PUSH2 0x149E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B5 SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x13FD DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1403 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1422 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x143B JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1456 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1498 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B7 DUP2 PUSH2 0x14A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x14AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14E3 DUP2 PUSH2 0x14A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x14ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14FE DUP2 PUSH2 0x14DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1519 JUMPI PUSH2 0x1518 PUSH2 0x14D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1526 DUP5 DUP3 DUP6 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1571 PUSH2 0x156C PUSH2 0x1567 DUP5 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x154E JUMP JUMPDEST PUSH2 0x152F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1582 DUP3 PUSH2 0x1557 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1593 DUP3 PUSH2 0x1578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A3 DUP2 PUSH2 0x1589 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x15BC PUSH0 DUP4 ADD DUP8 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x15C9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x15D6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x15E3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14AE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1602 JUMPI PUSH2 0x1601 PUSH2 0x14D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x160F DUP6 DUP3 DUP7 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1620 DUP6 DUP3 DUP7 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x163E DUP2 PUSH2 0x162A JUMP JUMPDEST DUP2 EQ PUSH2 0x1648 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1659 DUP2 PUSH2 0x1635 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1676 JUMPI PUSH2 0x1675 PUSH2 0x14D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1683 DUP7 DUP3 DUP8 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1694 DUP7 DUP3 DUP8 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16A5 DUP7 DUP3 DUP8 ADD PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH2 0x16B9 DUP3 PUSH2 0x152F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16CA DUP3 PUSH2 0x16AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16DA DUP2 PUSH2 0x16C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x16E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F5 DUP2 PUSH2 0x16D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1712 JUMPI PUSH2 0x1711 PUSH2 0x14D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x171F DUP7 DUP3 DUP8 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1730 DUP7 DUP3 DUP8 ADD PUSH2 0x16E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1741 DUP7 DUP3 DUP8 ADD PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1754 DUP2 PUSH2 0x16AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176D PUSH0 DUP4 ADD DUP5 PUSH2 0x174B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177C DUP2 PUSH2 0x16AF JUMP JUMPDEST DUP2 EQ PUSH2 0x1786 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1797 DUP2 PUSH2 0x1773 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B3 JUMPI PUSH2 0x17B2 PUSH2 0x14D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17C0 DUP6 DUP3 DUP7 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1789 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17EE PUSH0 DUP4 ADD DUP6 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x17FB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14AE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x180C DUP3 PUSH2 0x1578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181C DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1835 PUSH0 DUP4 ADD DUP5 PUSH2 0x1813 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1850 JUMPI PUSH2 0x184F PUSH2 0x14D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x185D DUP5 DUP3 DUP6 ADD PUSH2 0x1789 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x189D DUP3 PUSH2 0x14A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A8 DUP4 PUSH2 0x14A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18C0 JUMPI PUSH2 0x18BF PUSH2 0x1866 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6F206561726C790000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x190A PUSH1 0x9 DUP4 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1915 DUP3 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1937 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x199F PUSH1 0x12 DUP4 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x19AA DUP3 PUSH2 0x196B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19CC DUP2 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19DD DUP3 PUSH2 0x14A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E8 DUP4 PUSH2 0x14A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x19F6 DUP2 PUSH2 0x14A5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A0D JUMPI PUSH2 0x1A0C PUSH2 0x1866 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A4B DUP3 PUSH2 0x14A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A56 DUP4 PUSH2 0x14A5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A66 JUMPI PUSH2 0x1A65 PUSH2 0x1A14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7B DUP3 PUSH2 0x14A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A86 DUP4 PUSH2 0x14A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A9E JUMPI PUSH2 0x1A9D PUSH2 0x1866 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AB2 DUP2 PUSH2 0x14DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ACD JUMPI PUSH2 0x1ACC PUSH2 0x14D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ADA DUP5 DUP3 DUP6 ADD PUSH2 0x1AA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AF6 PUSH0 DUP4 ADD DUP6 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x1B03 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14AE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B1D PUSH0 DUP4 ADD DUP6 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x1B2A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x174B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416C6C6F77616E6365206E6F74206869676820656E6F75676800000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B65 PUSH1 0x19 DUP4 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B70 DUP3 PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B92 DUP2 PUSH2 0x1B59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BAC PUSH0 DUP4 ADD DUP7 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x1BB9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x1BC6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0x27 LOG3 PUSH20 0xFC540A7B682224CA800FC24DD6ADE251FBE8B159 0xCE ORIGIN 0xD7 PUSH17 0x3633A74F64736F6C634300081C00330000 ",
							"sourceMap": "377:7533:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2640:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1573:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1840:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1208:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1281;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6676:749;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3474:364;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1930:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4683:864;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7493:415;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1511:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4435:175;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1961:24:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2894:486;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1479:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1362:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3911:444:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1128:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1683:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1412:61;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1098:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5615:1011;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2640:93:13;2685:7;2711:8;:15;;;;2704:22;;2640:93;:::o;1573:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1840:34::-;;;;:::o;1208:28::-;;;;:::o;1281:::-;;;;:::o;6676:749::-;6783:7;6771:9;;:19;;;;:::i;:::-;6752:15;:39;6744:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;6816:21;6840:8;6849:4;6840:14;;;;;;;;:::i;:::-;;;;;;;;;;;;6816:38;;6864:21;6888:8;:14;6897:4;6888:14;;;;;;;;;;;:26;6903:10;6888:26;;;;;;;;;;;;;;;6864:50;;6948:7;6933:4;:11;;;:22;;6925:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;6989:16;7000:4;6989:10;:16::i;:::-;7016:15;7105:4;:15;;;7086:4;7049;:21;;;7035:4;:11;;;:35;;;;:::i;:::-;7034:56;;;;:::i;:::-;:86;;;;:::i;:::-;7016:104;;7159:7;7145:4;:11;;;:21;;;;:::i;:::-;7131:4;:11;;:35;;;;7234:4;7209;:21;;;7195:4;:11;;;:35;;;;:::i;:::-;7194:44;;;;:::i;:::-;7176:4;:15;;:62;;;;7249:39;7268:10;7280:7;7249:5;;;;;;;;;;;:18;;;;:39;;;;;:::i;:::-;7298:46;7324:10;7336:7;7298:4;:12;;;;;;;;;;;;:25;;;;:46;;;;;:::i;:::-;7404:4;7389;:12;;;;;;;;;;;;7360:58;;7369:10;7360:58;;;7410:7;7360:58;;;;;;:::i;:::-;;;;;;;;6734:691;;;6676:749;;:::o;3474:364::-;1531:13:0;:11;:13::i;:::-;3607:11:13::1;3603:59;;;3634:17;:15;:17::i;:::-;3603:59;3771:11;3731:8;3740:4;3731:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;3701:15;;:55;;;;:::i;:::-;:81;;;;:::i;:::-;3671:15;:111;;;;3820:11;3792:8;3801:4;3792:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;:39;;;;3474:364:::0;;;:::o;1930:25::-;;;;:::o;4683:864::-;4734:21;4758:8;4767:4;4758:14;;;;;;;;:::i;:::-;;;;;;;;;;;;4734:38;;4802:4;:20;;;4786:12;:36;4782:73;;4838:7;;;4782:73;4865:16;4884:4;:12;;;;;;;;;;;;:22;;;4915:4;4884:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4865:56;;4947:1;4935:8;:13;4931:99;;4987:12;4964:4;:20;;:35;;;;5013:7;;;;4931:99;5040:19;5208:15;;5189:4;:15;;;5161:13;;5063:83;5090:4;:20;;;5124:12;5063:13;:83::i;:::-;:111;;;;:::i;:::-;:141;;;;:::i;:::-;5062:161;;;;:::i;:::-;5040:183;;5330:8;5322:4;5308:11;:18;;;;:::i;:::-;5307:31;;;;:::i;:::-;5270:4;:21;;;:69;;;;:::i;:::-;5234:4;:21;;:105;;;;5372:12;5349:4;:20;;:35;;;;1448:25;5399:11;;:24;5395:146;;5467:11;5453;;:25;;;;:::i;:::-;5439:11;:39;;;;5492:5;;;;;;;;;;;:10;;;5511:4;5518:11;5492:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5395:146;4724:823;;;4683:864;;:::o;7493:415::-;7553:21;7577:8;7586:4;7577:14;;;;;;;;:::i;:::-;;;;;;;;;;;;7553:38;;7601:21;7625:8;:14;7634:4;7625:14;;;;;;;;;;;:26;7640:10;7625:26;;;;;;;;;;;;;;;7601:50;;7662:14;7679:4;:11;;;7662:28;;7700:14;7717:4;:15;;;7700:32;;7757:1;7743:4;:11;;:15;;;;7786:1;7768:4;:15;;:19;;;;7798:45;7824:10;7836:6;7798:4;:12;;;;;;;;;;;;:25;;;;:45;;;;;:::i;:::-;7888:4;7876:10;7858:43;;;7894:6;7858:43;;;;;;:::i;:::-;;;;;;;;7543:365;;;;7493:415;:::o;1511:29::-;;;;:::o;4435:175::-;4479:14;4496:8;:15;;;;4479:32;;4526:11;4540:1;4526:15;;4521:83;4549:6;4543:3;:12;4521:83;;;4578:15;4589:3;4578:10;:15::i;:::-;4557:5;;;;;4521:83;;;;4469:141;4435:175::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1961:24:13:-;;;;:::o;2894:486::-;1531:13:0;:11;:13::i;:::-;3030:11:13::1;3026:59;;;3057:17;:15;:17::i;:::-;3026:59;3131:11;3113:15;;:29;;;;:::i;:::-;3095:15;:47;;;;3152:8;3179:184;;;;;;;;3215:8;3179:184;;;;;;3253:11;3179:184;;;;3299:12;3179:184;;;;3347:1;3179:184;;::::0;3152:221:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2894:486:::0;;;:::o;1479:26::-;;;;:::o;1362:44::-;1405:1;1362:44;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3911:444:13:-;4007:7;4041:13;;4034:3;:20;4030:319;;1405:1;4084:5;4078:3;:11;;;;:::i;:::-;4077:32;;;;:::i;:::-;4070:39;;;;4030:319;4139:13;;4130:5;:22;4126:223;;4181:5;4175:3;:11;;;;:::i;:::-;4168:18;;;;4126:223;4324:13;;4318:3;:19;;;;:::i;:::-;1405:1;4257:5;4241:13;;:21;;;;:::i;:::-;4240:58;;;;:::i;:::-;:98;;;;:::i;:::-;4217:121;;3911:444;;;;;:::o;1128:24::-;;;;;;;;;;;;;:::o;1683:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1412:61::-;1448:25;1412:61;:::o;1098:23::-;;;;;;;;;;;;;:::o;5615:1011::-;5682:21;5706:8;5715:4;5706:14;;;;;;;;:::i;:::-;;;;;;;;;;;;5682:38;;5730:21;5754:8;:14;5763:4;5754:14;;;;;;;;;;;:26;5769:10;5754:26;;;;;;;;;;;;;;;5730:50;;5823:4;:12;;;;;;;;;;;;:22;;;5846:10;5866:4;5823:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5812:7;:60;;5791:132;;;;;;;;;;;;:::i;:::-;;;;;;;;;5933:65;5963:10;5983:4;5990:7;5933:4;:12;;;;;;;;;;;;:29;;;;:65;;;;;;:::i;:::-;6009:16;6020:4;6009:10;:16::i;:::-;6036:15;6125:4;:15;;;6106:4;6069;:21;;;6055:4;:11;;;:35;;;;:::i;:::-;6054:56;;;;:::i;:::-;:86;;;;:::i;:::-;6036:104;;6178:7;6164:4;:11;;;:21;;;;:::i;:::-;6150:4;:11;;:35;;;;6231:7;6219:9;;:19;;;;:::i;:::-;6200:15;:39;:54;;;;;6253:1;6243:7;:11;6200:54;6196:351;;;6328:4;6303;:21;;;6289:4;:11;;;:35;;;;:::i;:::-;6288:44;;;;:::i;:::-;6270:4;:15;;:62;;;;6346:39;6365:10;6377:7;6346:5;;;;;;;;;;;:18;;;;:39;;;;;:::i;:::-;6196:351;;;6529:7;6506:4;6465;:21;;;6451:4;:11;;;:35;;;;:::i;:::-;6450:60;;;;:::i;:::-;:86;;;;:::i;:::-;6416:4;:15;;:120;;;;6196:351;6605:4;6590;:12;;;;;;;;;;;;6562:57;;6570:10;6562:57;;;6611:7;6562:57;;;;;;:::i;:::-;;;;;;;;5672:954;;;5615:1011;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1271:160:8:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1670:188:8:-;1770:81;1790:5;1812;:18;;;1833:4;1839:2;1843:5;1797:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:19;:81::i;:::-;1670:188;;;;:::o;7738:720::-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;7:77:14:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:60::-;1537:3;1558:5;1551:12;;1509:60;;;:::o;1575:142::-;1625:9;1658:53;1676:34;1685:24;1703:5;1685:24;:::i;:::-;1676:34;:::i;:::-;1658:53;:::i;:::-;1645:66;;1575:142;;;:::o;1723:126::-;1773:9;1806:37;1837:5;1806:37;:::i;:::-;1793:50;;1723:126;;;:::o;1855:140::-;1919:9;1952:37;1983:5;1952:37;:::i;:::-;1939:50;;1855:140;;;:::o;2001:159::-;2102:51;2147:5;2102:51;:::i;:::-;2097:3;2090:64;2001:159;;:::o;2166:581::-;2357:4;2395:3;2384:9;2380:19;2372:27;;2409:85;2491:1;2480:9;2476:17;2467:6;2409:85;:::i;:::-;2504:72;2572:2;2561:9;2557:18;2548:6;2504:72;:::i;:::-;2586;2654:2;2643:9;2639:18;2630:6;2586:72;:::i;:::-;2668;2736:2;2725:9;2721:18;2712:6;2668:72;:::i;:::-;2166:581;;;;;;;:::o;2753:474::-;2821:6;2829;2878:2;2866:9;2857:7;2853:23;2849:32;2846:119;;;2884:79;;:::i;:::-;2846:119;3004:1;3029:53;3074:7;3065:6;3054:9;3050:22;3029:53;:::i;:::-;3019:63;;2975:117;3131:2;3157:53;3202:7;3193:6;3182:9;3178:22;3157:53;:::i;:::-;3147:63;;3102:118;2753:474;;;;;:::o;3233:90::-;3267:7;3310:5;3303:13;3296:21;3285:32;;3233:90;;;:::o;3329:116::-;3399:21;3414:5;3399:21;:::i;:::-;3392:5;3389:32;3379:60;;3435:1;3432;3425:12;3379:60;3329:116;:::o;3451:133::-;3494:5;3532:6;3519:20;3510:29;;3548:30;3572:5;3548:30;:::i;:::-;3451:133;;;;:::o;3590:613::-;3664:6;3672;3680;3729:2;3717:9;3708:7;3704:23;3700:32;3697:119;;;3735:79;;:::i;:::-;3697:119;3855:1;3880:53;3925:7;3916:6;3905:9;3901:22;3880:53;:::i;:::-;3870:63;;3826:117;3982:2;4008:53;4053:7;4044:6;4033:9;4029:22;4008:53;:::i;:::-;3998:63;;3953:118;4110:2;4136:50;4178:7;4169:6;4158:9;4154:22;4136:50;:::i;:::-;4126:60;;4081:115;3590:613;;;;;:::o;4209:96::-;4246:7;4275:24;4293:5;4275:24;:::i;:::-;4264:35;;4209:96;;;:::o;4311:110::-;4362:7;4391:24;4409:5;4391:24;:::i;:::-;4380:35;;4311:110;;;:::o;4427:150::-;4514:38;4546:5;4514:38;:::i;:::-;4507:5;4504:49;4494:77;;4567:1;4564;4557:12;4494:77;4427:150;:::o;4583:167::-;4643:5;4681:6;4668:20;4659:29;;4697:47;4738:5;4697:47;:::i;:::-;4583:167;;;;:::o;4756:641::-;4844:6;4852;4860;4909:2;4897:9;4888:7;4884:23;4880:32;4877:119;;;4915:79;;:::i;:::-;4877:119;5035:1;5060:53;5105:7;5096:6;5085:9;5081:22;5060:53;:::i;:::-;5050:63;;5006:117;5162:2;5188:67;5247:7;5238:6;5227:9;5223:22;5188:67;:::i;:::-;5178:77;;5133:132;5304:2;5330:50;5372:7;5363:6;5352:9;5348:22;5330:50;:::i;:::-;5320:60;;5275:115;4756:641;;;;;:::o;5403:118::-;5490:24;5508:5;5490:24;:::i;:::-;5485:3;5478:37;5403:118;;:::o;5527:222::-;5620:4;5658:2;5647:9;5643:18;5635:26;;5671:71;5739:1;5728:9;5724:17;5715:6;5671:71;:::i;:::-;5527:222;;;;:::o;5755:122::-;5828:24;5846:5;5828:24;:::i;:::-;5821:5;5818:35;5808:63;;5867:1;5864;5857:12;5808:63;5755:122;:::o;5883:139::-;5929:5;5967:6;5954:20;5945:29;;5983:33;6010:5;5983:33;:::i;:::-;5883:139;;;;:::o;6028:474::-;6096:6;6104;6153:2;6141:9;6132:7;6128:23;6124:32;6121:119;;;6159:79;;:::i;:::-;6121:119;6279:1;6304:53;6349:7;6340:6;6329:9;6325:22;6304:53;:::i;:::-;6294:63;;6250:117;6406:2;6432:53;6477:7;6468:6;6457:9;6453:22;6432:53;:::i;:::-;6422:63;;6377:118;6028:474;;;;;:::o;6508:332::-;6629:4;6667:2;6656:9;6652:18;6644:26;;6680:71;6748:1;6737:9;6733:17;6724:6;6680:71;:::i;:::-;6761:72;6829:2;6818:9;6814:18;6805:6;6761:72;:::i;:::-;6508:332;;;;;:::o;6846:145::-;6915:9;6948:37;6979:5;6948:37;:::i;:::-;6935:50;;6846:145;;;:::o;6997:169::-;7103:56;7153:5;7103:56;:::i;:::-;7098:3;7091:69;6997:169;;:::o;7172:260::-;7284:4;7322:2;7311:9;7307:18;7299:26;;7335:90;7422:1;7411:9;7407:17;7398:6;7335:90;:::i;:::-;7172:260;;;;:::o;7438:329::-;7497:6;7546:2;7534:9;7525:7;7521:23;7517:32;7514:119;;;7552:79;;:::i;:::-;7514:119;7672:1;7697:53;7742:7;7733:6;7722:9;7718:22;7697:53;:::i;:::-;7687:63;;7643:117;7438:329;;;;:::o;7773:180::-;7821:77;7818:1;7811:88;7918:4;7915:1;7908:15;7942:4;7939:1;7932:15;7959:191;7999:3;8018:20;8036:1;8018:20;:::i;:::-;8013:25;;8052:20;8070:1;8052:20;:::i;:::-;8047:25;;8095:1;8092;8088:9;8081:16;;8116:3;8113:1;8110:10;8107:36;;;8123:18;;:::i;:::-;8107:36;7959:191;;;;:::o;8156:169::-;8240:11;8274:6;8269:3;8262:19;8314:4;8309:3;8305:14;8290:29;;8156:169;;;;:::o;8331:159::-;8471:11;8467:1;8459:6;8455:14;8448:35;8331:159;:::o;8496:365::-;8638:3;8659:66;8723:1;8718:3;8659:66;:::i;:::-;8652:73;;8734:93;8823:3;8734:93;:::i;:::-;8852:2;8847:3;8843:12;8836:19;;8496:365;;;:::o;8867:419::-;9033:4;9071:2;9060:9;9056:18;9048:26;;9120:9;9114:4;9110:20;9106:1;9095:9;9091:17;9084:47;9148:131;9274:4;9148:131;:::i;:::-;9140:139;;8867:419;;;:::o;9292:180::-;9340:77;9337:1;9330:88;9437:4;9434:1;9427:15;9461:4;9458:1;9451:15;9478:168;9618:20;9614:1;9606:6;9602:14;9595:44;9478:168;:::o;9652:366::-;9794:3;9815:67;9879:2;9874:3;9815:67;:::i;:::-;9808:74;;9891:93;9980:3;9891:93;:::i;:::-;10009:2;10004:3;10000:12;9993:19;;9652:366;;;:::o;10024:419::-;10190:4;10228:2;10217:9;10213:18;10205:26;;10277:9;10271:4;10267:20;10263:1;10252:9;10248:17;10241:47;10305:131;10431:4;10305:131;:::i;:::-;10297:139;;10024:419;;;:::o;10449:410::-;10489:7;10512:20;10530:1;10512:20;:::i;:::-;10507:25;;10546:20;10564:1;10546:20;:::i;:::-;10541:25;;10601:1;10598;10594:9;10623:30;10641:11;10623:30;:::i;:::-;10612:41;;10802:1;10793:7;10789:15;10786:1;10783:22;10763:1;10756:9;10736:83;10713:139;;10832:18;;:::i;:::-;10713:139;10497:362;10449:410;;;;:::o;10865:180::-;10913:77;10910:1;10903:88;11010:4;11007:1;11000:15;11034:4;11031:1;11024:15;11051:185;11091:1;11108:20;11126:1;11108:20;:::i;:::-;11103:25;;11142:20;11160:1;11142:20;:::i;:::-;11137:25;;11181:1;11171:35;;11186:18;;:::i;:::-;11171:35;11228:1;11225;11221:9;11216:14;;11051:185;;;;:::o;11242:194::-;11282:4;11302:20;11320:1;11302:20;:::i;:::-;11297:25;;11336:20;11354:1;11336:20;:::i;:::-;11331:25;;11380:1;11377;11373:9;11365:17;;11404:1;11398:4;11395:11;11392:37;;;11409:18;;:::i;:::-;11392:37;11242:194;;;;:::o;11442:143::-;11499:5;11530:6;11524:13;11515:22;;11546:33;11573:5;11546:33;:::i;:::-;11442:143;;;;:::o;11591:351::-;11661:6;11710:2;11698:9;11689:7;11685:23;11681:32;11678:119;;;11716:79;;:::i;:::-;11678:119;11836:1;11861:64;11917:7;11908:6;11897:9;11893:22;11861:64;:::i;:::-;11851:74;;11807:128;11591:351;;;;:::o;11948:332::-;12069:4;12107:2;12096:9;12092:18;12084:26;;12120:71;12188:1;12177:9;12173:17;12164:6;12120:71;:::i;:::-;12201:72;12269:2;12258:9;12254:18;12245:6;12201:72;:::i;:::-;11948:332;;;;;:::o;12286:::-;12407:4;12445:2;12434:9;12430:18;12422:26;;12458:71;12526:1;12515:9;12511:17;12502:6;12458:71;:::i;:::-;12539:72;12607:2;12596:9;12592:18;12583:6;12539:72;:::i;:::-;12286:332;;;;;:::o;12624:175::-;12764:27;12760:1;12752:6;12748:14;12741:51;12624:175;:::o;12805:366::-;12947:3;12968:67;13032:2;13027:3;12968:67;:::i;:::-;12961:74;;13044:93;13133:3;13044:93;:::i;:::-;13162:2;13157:3;13153:12;13146:19;;12805:366;;;:::o;13177:419::-;13343:4;13381:2;13370:9;13366:18;13358:26;;13430:9;13424:4;13420:20;13416:1;13405:9;13401:17;13394:47;13458:131;13584:4;13458:131;:::i;:::-;13450:139;;13177:419;;;:::o;13602:442::-;13751:4;13789:2;13778:9;13774:18;13766:26;;13802:71;13870:1;13859:9;13855:17;13846:6;13802:71;:::i;:::-;13883:72;13951:2;13940:9;13936:18;13927:6;13883:72;:::i;:::-;13965;14033:2;14022:9;14018:18;14009:6;13965:72;:::i;:::-;13602:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1434400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BONUS_MULTIPLIER()": "436",
								"GRAND_CAP()": "369",
								"Grand()": "infinite",
								"GrandPerBlock()": "2537",
								"addPool(uint256,address,bool)": "infinite",
								"bonusEndBlock()": "2515",
								"collector()": "2575",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"getMultiplier(uint256,uint256)": "infinite",
								"grandMinted()": "2514",
								"massUpdatePools()": "infinite",
								"owner()": "2647",
								"poolInfo(uint256)": "infinite",
								"poolLength()": "2464",
								"renounceOwnership()": "infinite",
								"setPool(uint256,uint256,bool)": "infinite",
								"startBlock()": "2470",
								"startTime()": "2470",
								"totalAllocPoint()": "2493",
								"totalBoxes()": "2536",
								"transferOwnership(address)": "infinite",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 377,
									"end": 7910,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 377,
									"end": 7910,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 377,
									"end": 7910,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1539,
									"end": 1540,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1511,
									"end": 1540,
									"name": "PUSH",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 1511,
									"end": 1540,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1873,
									"end": 1874,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1840,
									"end": 1874,
									"name": "PUSH",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 1840,
									"end": 1874,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 2322,
									"end": 2634,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2439,
									"end": 2449,
									"name": "CALLER",
									"source": 13
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2469,
									"end": 2475,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2466,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2461,
									"end": 2466,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2475,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2501,
									"end": 2515,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2485,
									"end": 2498,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2485,
									"end": 2515,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2485,
									"end": 2515,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2485,
									"end": 2515,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2485,
									"end": 2515,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2541,
									"end": 2555,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2525,
									"end": 2538,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 2525,
									"end": 2555,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2525,
									"end": 2555,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2525,
									"end": 2555,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2525,
									"end": 2555,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2578,
									"end": 2590,
									"modifierDepth": 1,
									"name": "NUMBER",
									"source": 13
								},
								{
									"begin": 2565,
									"end": 2575,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "A"
								},
								{
									"begin": 2565,
									"end": 2590,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2565,
									"end": 2590,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2565,
									"end": 2590,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2565,
									"end": 2590,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2627,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2609,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 2600,
									"end": 2627,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2627,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2627,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2627,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2634,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 377,
									"end": 7910,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 377,
									"end": 7910,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 683,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 683,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 624,
									"end": 631,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 653,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 653,
									"end": 677,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 642,
									"end": 677,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 642,
									"end": 677,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 568,
									"end": 683,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 689,
									"end": 849,
									"name": "tag",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 689,
									"end": 849,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 818,
									"end": 823,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 781,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 781,
									"end": 824,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 781,
									"end": 824,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 771,
									"end": 825,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 761,
									"end": 843,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 839,
									"end": 840,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 829,
									"end": 841,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 761,
									"end": 843,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 689,
									"end": 849,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 689,
									"end": 849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 931,
									"end": 936,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 968,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 956,
									"end": 969,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 947,
									"end": 969,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 947,
									"end": 969,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1024,
									"end": 1029,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 978,
									"end": 1030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 855,
									"end": 1036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1042,
									"end": 1119,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 1042,
									"end": 1119,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1079,
									"end": 1086,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1108,
									"end": 1113,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1097,
									"end": 1113,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1097,
									"end": 1113,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1042,
									"end": 1119,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1042,
									"end": 1119,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1042,
									"end": 1119,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1042,
									"end": 1119,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1125,
									"end": 1247,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1125,
									"end": 1247,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1198,
									"end": 1222,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 1216,
									"end": 1221,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1198,
									"end": 1222,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 1198,
									"end": 1222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1198,
									"end": 1222,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 1198,
									"end": 1222,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1191,
									"end": 1196,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1188,
									"end": 1223,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1178,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 1178,
									"end": 1241,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1237,
									"end": 1238,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1234,
									"end": 1235,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1227,
									"end": 1239,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1178,
									"end": 1241,
									"name": "tag",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 1178,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1125,
									"end": 1247,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1125,
									"end": 1247,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1253,
									"end": 1396,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 1253,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1310,
									"end": 1315,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1341,
									"end": 1347,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1335,
									"end": 1348,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1326,
									"end": 1348,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1326,
									"end": 1348,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1357,
									"end": 1390,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 1384,
									"end": 1389,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1357,
									"end": 1390,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1357,
									"end": 1390,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1357,
									"end": 1390,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 1357,
									"end": 1390,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1253,
									"end": 1396,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1253,
									"end": 1396,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1253,
									"end": 1396,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1253,
									"end": 1396,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1253,
									"end": 1396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1402,
									"end": 2103,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1402,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1509,
									"end": 1515,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1517,
									"end": 1523,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 1531,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1574,
									"end": 1576,
									"name": "PUSH",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1553,
									"end": 1560,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1549,
									"end": 1572,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1545,
									"end": 1577,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 1542,
									"end": 1661,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1542,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 1542,
									"end": 1661,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1580,
									"end": 1659,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 1580,
									"end": 1659,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 1580,
									"end": 1659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1580,
									"end": 1659,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 1580,
									"end": 1659,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1542,
									"end": 1661,
									"name": "tag",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 1542,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1700,
									"end": 1701,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1725,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 1800,
									"end": 1807,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1791,
									"end": 1797,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1780,
									"end": 1789,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1776,
									"end": 1798,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1725,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1725,
									"end": 1808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1725,
									"end": 1808,
									"name": "tag",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 1725,
									"end": 1808,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1715,
									"end": 1808,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1715,
									"end": 1808,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1671,
									"end": 1818,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1857,
									"end": 1859,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1883,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 1939,
									"end": 1946,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1930,
									"end": 1936,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1919,
									"end": 1928,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1915,
									"end": 1937,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1883,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 1883,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1883,
									"end": 1947,
									"name": "tag",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 1883,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1873,
									"end": 1947,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1873,
									"end": 1947,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1828,
									"end": 1957,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1996,
									"end": 1998,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2022,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 2078,
									"end": 2085,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2075,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2058,
									"end": 2067,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 2054,
									"end": 2076,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2022,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 2022,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2022,
									"end": 2086,
									"name": "tag",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 2022,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2012,
									"end": 2086,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2012,
									"end": 2086,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1967,
									"end": 2096,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1402,
									"end": 2103,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1402,
									"end": 2103,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1402,
									"end": 2103,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1402,
									"end": 2103,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1402,
									"end": 2103,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1402,
									"end": 2103,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2109,
									"end": 2227,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 2109,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2196,
									"end": 2220,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 2214,
									"end": 2219,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2196,
									"end": 2220,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 2196,
									"end": 2220,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2196,
									"end": 2220,
									"name": "tag",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 2196,
									"end": 2220,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2191,
									"end": 2194,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2184,
									"end": 2221,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2109,
									"end": 2227,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2109,
									"end": 2227,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2109,
									"end": 2227,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2233,
									"end": 2455,
									"name": "tag",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 2233,
									"end": 2455,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2326,
									"end": 2330,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2364,
									"end": 2366,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2353,
									"end": 2362,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2349,
									"end": 2367,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2377,
									"end": 2448,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 2445,
									"end": 2446,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2434,
									"end": 2443,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2430,
									"end": 2447,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2421,
									"end": 2427,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2377,
									"end": 2448,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 2377,
									"end": 2448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2377,
									"end": 2448,
									"name": "tag",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 2377,
									"end": 2448,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2233,
									"end": 2455,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2233,
									"end": 2455,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2233,
									"end": 2455,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2233,
									"end": 2455,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2233,
									"end": 2455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 377,
									"end": 7910,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 377,
									"end": 7910,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 377,
									"end": 7910,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 7910,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 377,
									"end": 7910,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 7910,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 7910,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 377,
									"end": 7910,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 7910,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202227a373fc540a7b682224ca800fc24dd6ade251fbe8b159ce32d7703633a74f64736f6c634300081c0033",
									".code": [
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "8DBB1E3A"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "B9926557"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "B9926557"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "D129459B"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "E2BBB158"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "8DBB1E3A"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "913E77AD"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "93F1A40B"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "78E97925"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "7ABCEFFD"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "83E27185"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "8AA28550"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "46CA6BEA"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "46CA6BEA"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "48CD4CB1"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "51EB05A6"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "5312EA8E"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "57E78ADC"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "630B5BA1"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "81E3EDA"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "1526FE27"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "17CAF6F1"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "1AED6553"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "212F14CC"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "441A3E70"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 7910,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2640,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2640,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 1573,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1573,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1573,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 1840,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1840,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1208,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1208,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1281,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1281,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 6676,
											"end": 7425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 6676,
											"end": 7425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 3474,
											"end": 3838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 3474,
											"end": 3838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1930,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1930,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 4683,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4683,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 7493,
											"end": 7908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 7493,
											"end": 7908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1511,
											"end": 1540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1511,
											"end": 1540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4610,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 4435,
											"end": 4610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 4435,
											"end": 4610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 4435,
											"end": 4610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4610,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 4435,
											"end": 4610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4610,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1961,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1961,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2894,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 2894,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1479,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1479,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1362,
											"end": 1406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1362,
											"end": 1406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 3911,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 3911,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 3911,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1128,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 1128,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 1683,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1683,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 1683,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 1412,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1412,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 1098,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 1098,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 5615,
											"end": 6626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 5615,
											"end": 6626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2685,
											"end": 2692,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2719,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 2711,
											"end": 2726,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2726,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2726,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2704,
											"end": 2726,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2704,
											"end": 2726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "PUSH",
											"source": 13,
											"value": "34BC00"
										},
										{
											"begin": 6771,
											"end": 6780,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 6771,
											"end": 6780,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 6771,
											"end": 6790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 6771,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6752,
											"end": 6767,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 6752,
											"end": 6791,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 6744,
											"end": 6805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 6744,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6837,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6840,
											"end": 6848,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 6849,
											"end": 6853,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 6840,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6885,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6896,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 6888,
											"end": 6902,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6897,
											"end": 6901,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6902,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6902,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6902,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6888,
											"end": 6902,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6902,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6902,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6902,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6902,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6888,
											"end": 6902,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6902,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6902,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6903,
											"end": 6913,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6948,
											"end": 6955,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6933,
											"end": 6937,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6933,
											"end": 6944,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6933,
											"end": 6944,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6933,
											"end": 6944,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6933,
											"end": 6955,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6933,
											"end": 6955,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 6925,
											"end": 6978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 6925,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6989,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 7000,
											"end": 7004,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6989,
											"end": 6999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6989,
											"end": 7005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6989,
											"end": 7005,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 6989,
											"end": 7005,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7105,
											"end": 7109,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7086,
											"end": 7090,
											"name": "PUSH",
											"source": 13,
											"value": "E8D4A51000"
										},
										{
											"begin": 7049,
											"end": 7053,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7049,
											"end": 7070,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7049,
											"end": 7070,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7049,
											"end": 7070,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7035,
											"end": 7039,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7035,
											"end": 7046,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7035,
											"end": 7046,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7035,
											"end": 7046,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7035,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 7035,
											"end": 7070,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7035,
											"end": 7070,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7035,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 7035,
											"end": 7070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7035,
											"end": 7070,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 7035,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7034,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 7034,
											"end": 7090,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7034,
											"end": 7090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7034,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 7034,
											"end": 7090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7034,
											"end": 7090,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 7034,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7034,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 7034,
											"end": 7120,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7034,
											"end": 7120,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7034,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 7034,
											"end": 7120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7034,
											"end": 7120,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 7034,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7016,
											"end": 7120,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7159,
											"end": 7166,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7145,
											"end": 7149,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7145,
											"end": 7156,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7145,
											"end": 7156,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7145,
											"end": 7156,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7145,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 7145,
											"end": 7166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7145,
											"end": 7166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7145,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 7145,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7145,
											"end": 7166,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 7145,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7135,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7131,
											"end": 7142,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7166,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "PUSH",
											"source": 13,
											"value": "E8D4A51000"
										},
										{
											"begin": 7209,
											"end": 7213,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7230,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7195,
											"end": 7199,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7195,
											"end": 7206,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7206,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7195,
											"end": 7206,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7195,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 7195,
											"end": 7230,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7195,
											"end": 7230,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7195,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 7195,
											"end": 7230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7195,
											"end": 7230,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 7195,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7194,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 7194,
											"end": 7238,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7194,
											"end": 7238,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7194,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 7194,
											"end": 7238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7194,
											"end": 7238,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 7194,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7180,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7191,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7176,
											"end": 7191,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7238,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7238,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7238,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7238,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 7268,
											"end": 7278,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7280,
											"end": 7287,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7254,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7249,
											"end": 7254,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7254,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7254,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7254,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7254,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7249,
											"end": 7254,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7254,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7254,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7254,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7254,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7288,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7288,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7288,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7288,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7288,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7288,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 7249,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 7324,
											"end": 7334,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7336,
											"end": 7343,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7302,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7310,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7298,
											"end": 7310,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7310,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7298,
											"end": 7310,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7310,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7310,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7310,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7298,
											"end": 7310,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7310,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7310,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7310,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7298,
											"end": 7310,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7323,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7298,
											"end": 7323,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 7298,
											"end": 7323,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7344,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7344,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7344,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7344,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7298,
											"end": 7344,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7344,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 7298,
											"end": 7344,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7404,
											"end": 7408,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7389,
											"end": 7393,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7389,
											"end": 7401,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7389,
											"end": 7401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7389,
											"end": 7401,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7389,
											"end": 7401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7389,
											"end": 7401,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7389,
											"end": 7401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7389,
											"end": 7401,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7389,
											"end": 7401,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7389,
											"end": 7401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7389,
											"end": 7401,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 7389,
											"end": 7401,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7389,
											"end": 7401,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7369,
											"end": 7379,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "PUSH",
											"source": 13,
											"value": "F341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567"
										},
										{
											"begin": 7410,
											"end": 7417,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 7360,
											"end": 7418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7360,
											"end": 7418,
											"name": "LOG4",
											"source": 13
										},
										{
											"begin": 6734,
											"end": 7425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6734,
											"end": 7425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6734,
											"end": 7425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 7425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3618,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3603,
											"end": 3662,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3603,
											"end": 3662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 3603,
											"end": 3662,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3634,
											"end": 3651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 3634,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 3634,
											"end": 3651,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3634,
											"end": 3651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 3634,
											"end": 3651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3603,
											"end": 3662,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 3603,
											"end": 3662,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3782,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 3740,
											"end": 3744,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 3731,
											"end": 3745,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3745,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3731,
											"end": 3756,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3756,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3701,
											"end": 3716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 3701,
											"end": 3716,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3701,
											"end": 3756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 3701,
											"end": 3756,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3701,
											"end": 3756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3701,
											"end": 3756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 3701,
											"end": 3756,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3701,
											"end": 3756,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 3701,
											"end": 3756,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3701,
											"end": 3782,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 3701,
											"end": 3782,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3701,
											"end": 3782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3701,
											"end": 3782,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 3701,
											"end": 3782,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3701,
											"end": 3782,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 3701,
											"end": 3782,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3671,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 3671,
											"end": 3782,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3671,
											"end": 3782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3671,
											"end": 3782,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3671,
											"end": 3782,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3831,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 3801,
											"end": 3805,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 3792,
											"end": 3806,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3806,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3792,
											"end": 3817,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3831,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3831,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3831,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3831,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4734,
											"end": 4755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4758,
											"end": 4766,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 4758,
											"end": 4772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4734,
											"end": 4772,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4734,
											"end": 4772,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4806,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4822,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4802,
											"end": 4822,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4822,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4786,
											"end": 4798,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 4786,
											"end": 4822,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 4782,
											"end": 4855,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4845,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 4838,
											"end": 4845,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4855,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 4782,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4865,
											"end": 4881,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4884,
											"end": 4888,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4896,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4884,
											"end": 4896,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4896,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4884,
											"end": 4896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4896,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4896,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4884,
											"end": 4896,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4896,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4896,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4884,
											"end": 4896,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4906,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4884,
											"end": 4906,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4906,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 4915,
											"end": 4919,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 4884,
											"end": 4921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 4884,
											"end": 4921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4865,
											"end": 4921,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4865,
											"end": 4921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4947,
											"end": 4948,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4943,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 4948,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 4931,
											"end": 5030,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 4968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 4984,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4964,
											"end": 4984,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 4999,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 4999,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 4999,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 4999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5020,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5020,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 5013,
											"end": 5020,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5030,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 4931,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5040,
											"end": 5059,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5223,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 5208,
											"end": 5223,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5189,
											"end": 5193,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5189,
											"end": 5204,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5189,
											"end": 5204,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5189,
											"end": 5204,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5174,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5161,
											"end": 5174,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5063,
											"end": 5146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 5090,
											"end": 5094,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5110,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5090,
											"end": 5110,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5110,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5124,
											"end": 5136,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 5063,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 5063,
											"end": 5146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5063,
											"end": 5146,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 5063,
											"end": 5146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5063,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 5063,
											"end": 5174,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5063,
											"end": 5174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5063,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 5063,
											"end": 5174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5063,
											"end": 5174,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 5063,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5063,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 5063,
											"end": 5204,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5063,
											"end": 5204,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5063,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 5063,
											"end": 5204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5063,
											"end": 5204,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 5063,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5062,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 5062,
											"end": 5223,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5062,
											"end": 5223,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5062,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 5062,
											"end": 5223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5062,
											"end": 5223,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 5062,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5040,
											"end": 5223,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5040,
											"end": 5223,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5330,
											"end": 5338,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5326,
											"name": "PUSH",
											"source": 13,
											"value": "E8D4A51000"
										},
										{
											"begin": 5308,
											"end": 5319,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 5308,
											"end": 5326,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 5308,
											"end": 5326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5326,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 5308,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 5307,
											"end": 5338,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5338,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 5307,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5338,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 5307,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5274,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5291,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5270,
											"end": 5291,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5291,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 5270,
											"end": 5339,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5339,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 5270,
											"end": 5339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5339,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 5270,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5234,
											"end": 5238,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5234,
											"end": 5255,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5234,
											"end": 5255,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5234,
											"end": 5339,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5234,
											"end": 5339,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5234,
											"end": 5339,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5234,
											"end": 5339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5372,
											"end": 5384,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 5349,
											"end": 5353,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5349,
											"end": 5369,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5349,
											"end": 5369,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5349,
											"end": 5384,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5349,
											"end": 5384,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5349,
											"end": 5384,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5349,
											"end": 5384,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1473,
											"name": "PUSH",
											"source": 13,
											"value": "37A172815E43557155555"
										},
										{
											"begin": 5399,
											"end": 5410,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 5399,
											"end": 5410,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5399,
											"end": 5423,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5395,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 5395,
											"end": 5541,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5467,
											"end": 5478,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5453,
											"end": 5464,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 5453,
											"end": 5464,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5453,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 5453,
											"end": 5478,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5453,
											"end": 5478,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5453,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 5453,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5453,
											"end": 5478,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 5453,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5450,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 5439,
											"end": 5478,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5478,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5478,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5497,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5492,
											"end": 5497,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5497,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5497,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5497,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5497,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5492,
											"end": 5497,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5497,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5497,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5497,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5492,
											"end": 5497,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5502,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5492,
											"end": 5502,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5502,
											"name": "PUSH",
											"source": 13,
											"value": "40C10F19"
										},
										{
											"begin": 5511,
											"end": 5515,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 5518,
											"end": 5529,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 5492,
											"end": 5530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5395,
											"end": 5541,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 5395,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4724,
											"end": 5547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4724,
											"end": 5547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4724,
											"end": 5547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 5547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7553,
											"end": 7574,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7577,
											"end": 7585,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 7586,
											"end": 7590,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 7577,
											"end": 7591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7553,
											"end": 7591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7553,
											"end": 7591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 7622,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 7625,
											"end": 7639,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7638,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7639,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7639,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7625,
											"end": 7639,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7639,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7639,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7639,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7625,
											"end": 7639,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7639,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7639,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7640,
											"end": 7650,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7651,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 7651,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 7651,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7679,
											"end": 7683,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7679,
											"end": 7690,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7690,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7662,
											"end": 7690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7662,
											"end": 7690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7721,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7717,
											"end": 7732,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7700,
											"end": 7732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7700,
											"end": 7732,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7757,
											"end": 7758,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7743,
											"end": 7747,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7743,
											"end": 7754,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7743,
											"end": 7754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7743,
											"end": 7758,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7743,
											"end": 7758,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7743,
											"end": 7758,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7743,
											"end": 7758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7786,
											"end": 7787,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7772,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7768,
											"end": 7787,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7768,
											"end": 7787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7768,
											"end": 7787,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7768,
											"end": 7787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 7824,
											"end": 7834,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7836,
											"end": 7842,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7802,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7798,
											"end": 7810,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7823,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7798,
											"end": 7823,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 7798,
											"end": 7823,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7843,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7843,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7843,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7843,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7798,
											"end": 7843,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7843,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 7798,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7888,
											"end": 7892,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "PUSH",
											"source": 13,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 7894,
											"end": 7900,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 7858,
											"end": 7901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7901,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 7543,
											"end": 7908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7543,
											"end": 7908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7543,
											"end": 7908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7543,
											"end": 7908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4610,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 4435,
											"end": 4610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 4493,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4504,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 4496,
											"end": 4511,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4496,
											"end": 4511,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4496,
											"end": 4511,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4496,
											"end": 4511,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 4511,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 4511,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4526,
											"end": 4537,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4540,
											"end": 4541,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4526,
											"end": 4541,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4526,
											"end": 4541,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4604,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 4521,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4549,
											"end": 4555,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4543,
											"end": 4546,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4543,
											"end": 4555,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4604,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 4521,
											"end": 4604,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4578,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 4589,
											"end": 4592,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4578,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4578,
											"end": 4593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4578,
											"end": 4593,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 4578,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4557,
											"end": 4562,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4557,
											"end": 4562,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4557,
											"end": 4562,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4557,
											"end": 4562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4557,
											"end": 4562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 4521,
											"end": 4604,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4604,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 4521,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3030,
											"end": 3041,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3026,
											"end": 3085,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3026,
											"end": 3085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 3026,
											"end": 3085,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3074,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 3057,
											"end": 3072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 3057,
											"end": 3074,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3074,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 3057,
											"end": 3074,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3026,
											"end": 3085,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 3026,
											"end": 3085,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3131,
											"end": 3142,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3113,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 3113,
											"end": 3128,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3113,
											"end": 3142,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 3113,
											"end": 3142,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3113,
											"end": 3142,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3113,
											"end": 3142,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 3113,
											"end": 3142,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3113,
											"end": 3142,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 3113,
											"end": 3142,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 3095,
											"end": 3142,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3142,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3142,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3142,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3223,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3253,
											"end": 3264,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3299,
											"end": 3311,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3347,
											"end": 3348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 3380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1362,
											"end": 1406,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4014,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4054,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4041,
											"end": 4054,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4034,
											"end": 4037,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4034,
											"end": 4054,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 4030,
											"end": 4349,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4081,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 4078,
											"end": 4089,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4089,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4078,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4089,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 4078,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 4077,
											"end": 4109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4070,
											"end": 4109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4070,
											"end": 4109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4070,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 4070,
											"end": 4109,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4349,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 4030,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4139,
											"end": 4152,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4139,
											"end": 4152,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4135,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4152,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 4126,
											"end": 4349,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4181,
											"end": 4186,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4178,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 4175,
											"end": 4186,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4186,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4175,
											"end": 4186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4186,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 4175,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4349,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 4126,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4324,
											"end": 4337,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4324,
											"end": 4337,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4318,
											"end": 4321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4318,
											"end": 4337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4257,
											"end": 4262,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4241,
											"end": 4254,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4241,
											"end": 4254,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4241,
											"end": 4262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 4240,
											"end": 4298,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4298,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 4240,
											"end": 4298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4298,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 4240,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 4240,
											"end": 4338,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4338,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 4240,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4338,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 4240,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4217,
											"end": 4338,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4217,
											"end": 4338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 4355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1473,
											"name": "PUSH",
											"source": 13,
											"value": "37A172815E43557155555"
										},
										{
											"begin": 1412,
											"end": 1473,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5682,
											"end": 5703,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5714,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 5715,
											"end": 5719,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 5706,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5720,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5682,
											"end": 5720,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5682,
											"end": 5720,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5730,
											"end": 5751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5762,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 5754,
											"end": 5768,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5767,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5768,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5768,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5768,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5768,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5768,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5768,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5768,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5768,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5768,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5768,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5768,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5779,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5730,
											"end": 5780,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5730,
											"end": 5780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5827,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5845,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5823,
											"end": 5845,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5845,
											"name": "PUSH",
											"source": 13,
											"value": "DD62ED3E"
										},
										{
											"begin": 5846,
											"end": 5856,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 5866,
											"end": 5870,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 5823,
											"end": 5872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 5823,
											"end": 5872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 5823,
											"end": 5872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5812,
											"end": 5819,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5812,
											"end": 5872,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5812,
											"end": 5872,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 5791,
											"end": 5923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 5791,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 5963,
											"end": 5973,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 5983,
											"end": 5987,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 5990,
											"end": 5997,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5945,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5933,
											"end": 5945,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5945,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5933,
											"end": 5945,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5945,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5945,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5945,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5933,
											"end": 5945,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5945,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5945,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5945,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5933,
											"end": 5945,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5962,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5933,
											"end": 5962,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 5933,
											"end": 5962,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5998,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5998,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5998,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5998,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5998,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5933,
											"end": 5998,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5998,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 5933,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6009,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 6020,
											"end": 6024,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6009,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6009,
											"end": 6025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6009,
											"end": 6025,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 6009,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6036,
											"end": 6051,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6125,
											"end": 6129,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6125,
											"end": 6140,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6125,
											"end": 6140,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6125,
											"end": 6140,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6106,
											"end": 6110,
											"name": "PUSH",
											"source": 13,
											"value": "E8D4A51000"
										},
										{
											"begin": 6069,
											"end": 6073,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6069,
											"end": 6090,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6069,
											"end": 6090,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6069,
											"end": 6090,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6055,
											"end": 6059,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6055,
											"end": 6066,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6066,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6055,
											"end": 6066,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6055,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 6055,
											"end": 6090,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6055,
											"end": 6090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6055,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 6055,
											"end": 6090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6055,
											"end": 6090,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 6055,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 6054,
											"end": 6110,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6110,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 6054,
											"end": 6110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6110,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 6054,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 6054,
											"end": 6140,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6140,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 6054,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6140,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 6054,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 6185,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6164,
											"end": 6168,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6164,
											"end": 6175,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6175,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6164,
											"end": 6175,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6164,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 6164,
											"end": 6185,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6164,
											"end": 6185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6164,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 6164,
											"end": 6185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6164,
											"end": 6185,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 6164,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6150,
											"end": 6154,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6150,
											"end": 6161,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6150,
											"end": 6161,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6150,
											"end": 6185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6150,
											"end": 6185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6150,
											"end": 6185,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6150,
											"end": 6185,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6231,
											"end": 6238,
											"name": "PUSH",
											"source": 13,
											"value": "34BC00"
										},
										{
											"begin": 6219,
											"end": 6228,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 6219,
											"end": 6228,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6219,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 6219,
											"end": 6238,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6219,
											"end": 6238,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6219,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 6219,
											"end": 6238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6219,
											"end": 6238,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 6219,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 6215,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 6239,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 6254,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 6254,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 6200,
											"end": 6254,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 6254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6253,
											"end": 6254,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6243,
											"end": 6250,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6243,
											"end": 6254,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 6254,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 6200,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6547,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 6196,
											"end": 6547,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6328,
											"end": 6332,
											"name": "PUSH",
											"source": 13,
											"value": "E8D4A51000"
										},
										{
											"begin": 6303,
											"end": 6307,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6303,
											"end": 6324,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6303,
											"end": 6324,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6303,
											"end": 6324,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6289,
											"end": 6293,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6289,
											"end": 6300,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6289,
											"end": 6300,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6289,
											"end": 6300,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6289,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 6289,
											"end": 6324,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6289,
											"end": 6324,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6289,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 6289,
											"end": 6324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6289,
											"end": 6324,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 6289,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6288,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 6288,
											"end": 6332,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6288,
											"end": 6332,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6288,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 6288,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6288,
											"end": 6332,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 6288,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6270,
											"end": 6274,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6270,
											"end": 6285,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6270,
											"end": 6285,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6270,
											"end": 6332,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6270,
											"end": 6332,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6270,
											"end": 6332,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6270,
											"end": 6332,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 6365,
											"end": 6375,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6377,
											"end": 6384,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6351,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6364,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6364,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 6346,
											"end": 6364,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6385,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6385,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6385,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6385,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6385,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 6346,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 6196,
											"end": 6547,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6547,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 6196,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6529,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6506,
											"end": 6510,
											"name": "PUSH",
											"source": 13,
											"value": "E8D4A51000"
										},
										{
											"begin": 6465,
											"end": 6469,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6465,
											"end": 6486,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6465,
											"end": 6486,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6465,
											"end": 6486,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6455,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6462,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6451,
											"end": 6462,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6462,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 6451,
											"end": 6486,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6486,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 6451,
											"end": 6486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6486,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 6451,
											"end": 6486,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6450,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 6450,
											"end": 6510,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6450,
											"end": 6510,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6450,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 6450,
											"end": 6510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6450,
											"end": 6510,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 6450,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6450,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 6450,
											"end": 6536,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6450,
											"end": 6536,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6450,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 6450,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6450,
											"end": 6536,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 6450,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6416,
											"end": 6420,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6416,
											"end": 6431,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6416,
											"end": 6431,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6416,
											"end": 6536,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6416,
											"end": 6536,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6416,
											"end": 6536,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6416,
											"end": 6536,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6547,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 6196,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6605,
											"end": 6609,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6590,
											"end": 6594,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6590,
											"end": 6602,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6590,
											"end": 6602,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6590,
											"end": 6602,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6590,
											"end": 6602,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6590,
											"end": 6602,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6590,
											"end": 6602,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6590,
											"end": 6602,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 6590,
											"end": 6602,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 6590,
											"end": 6602,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6590,
											"end": 6602,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 6590,
											"end": 6602,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6590,
											"end": 6602,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6570,
											"end": 6580,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "PUSH",
											"source": 13,
											"value": "DCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7"
										},
										{
											"begin": 6611,
											"end": 6618,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 6562,
											"end": 6619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6619,
											"name": "LOG4",
											"source": 13
										},
										{
											"begin": 5672,
											"end": 6626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5672,
											"end": 6626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5672,
											"end": 6626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 6626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 1380,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1797,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 1770,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1509,
											"end": 1569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "tag",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1625,
											"end": 1634,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 1685,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 1676,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 1658,
											"end": 1711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1575,
											"end": 1717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 1806,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1723,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 1983,
											"end": 1988,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 1952,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1939,
											"end": 1989,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1939,
											"end": 1989,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1855,
											"end": 1995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 2147,
											"end": 2152,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 2102,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2097,
											"end": 2100,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2090,
											"end": 2154,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2001,
											"end": 2160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2357,
											"end": 2361,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2398,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2380,
											"end": 2399,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2372,
											"end": 2399,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2372,
											"end": 2399,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 2491,
											"end": 2492,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 2409,
											"end": 2494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2494,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 2409,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2504,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 2572,
											"end": 2574,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2561,
											"end": 2570,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2557,
											"end": 2575,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2504,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 2504,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2504,
											"end": 2576,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 2504,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2586,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 2654,
											"end": 2656,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2643,
											"end": 2652,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2630,
											"end": 2636,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2586,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 2586,
											"end": 2658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2586,
											"end": 2658,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 2586,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2668,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 2736,
											"end": 2738,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2725,
											"end": 2734,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2712,
											"end": 2718,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2668,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 2668,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2668,
											"end": 2740,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 2668,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2166,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 3227,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 2753,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2821,
											"end": 2827,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2835,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2880,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2857,
											"end": 2864,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2853,
											"end": 2876,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2849,
											"end": 2881,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 2884,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 2884,
											"end": 2963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 2963,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 2884,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 3074,
											"end": 3081,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3065,
											"end": 3071,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3050,
											"end": 3072,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3029,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 3029,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3029,
											"end": 3082,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 3029,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3082,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3082,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2975,
											"end": 3092,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3131,
											"end": 3133,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 3202,
											"end": 3209,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3193,
											"end": 3199,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3191,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3178,
											"end": 3200,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3157,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 3157,
											"end": 3210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3157,
											"end": 3210,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 3157,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3102,
											"end": 3220,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 3227,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 3227,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 3227,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 3227,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 3227,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 3227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3323,
											"name": "tag",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 3233,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3267,
											"end": 3274,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3315,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3303,
											"end": 3316,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3296,
											"end": 3317,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3285,
											"end": 3317,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3285,
											"end": 3317,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3323,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3323,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3323,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3329,
											"end": 3445,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 3329,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3399,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 3414,
											"end": 3419,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3399,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 3399,
											"end": 3420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3399,
											"end": 3420,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 3399,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3392,
											"end": 3397,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3389,
											"end": 3421,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3379,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 3379,
											"end": 3439,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3436,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3379,
											"end": 3439,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 3379,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3329,
											"end": 3445,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3329,
											"end": 3445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3451,
											"end": 3584,
											"name": "tag",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 3451,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3494,
											"end": 3499,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3538,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3519,
											"end": 3539,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3539,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3539,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 3572,
											"end": 3577,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 3548,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3451,
											"end": 3584,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3451,
											"end": 3584,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3451,
											"end": 3584,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3451,
											"end": 3584,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3451,
											"end": 3584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3590,
											"end": 4203,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 3590,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3664,
											"end": 3670,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3678,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3686,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3731,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3717,
											"end": 3726,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3708,
											"end": 3715,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3700,
											"end": 3732,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3697,
											"end": 3816,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3697,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 3697,
											"end": 3816,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3735,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 3735,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 3735,
											"end": 3814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3735,
											"end": 3814,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 3735,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3697,
											"end": 3816,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 3697,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 3925,
											"end": 3932,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 3922,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3905,
											"end": 3914,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3880,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 3880,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3880,
											"end": 3933,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 3880,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3870,
											"end": 3933,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3870,
											"end": 3933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3826,
											"end": 3943,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4008,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 4053,
											"end": 4060,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4044,
											"end": 4050,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4008,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 4008,
											"end": 4061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4008,
											"end": 4061,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 4008,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3998,
											"end": 4061,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3998,
											"end": 4061,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3953,
											"end": 4071,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4110,
											"end": 4112,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4136,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 4178,
											"end": 4185,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4169,
											"end": 4175,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4167,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4154,
											"end": 4176,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4136,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 4136,
											"end": 4186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4136,
											"end": 4186,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 4136,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4126,
											"end": 4186,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4126,
											"end": 4186,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4196,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3590,
											"end": 4203,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3590,
											"end": 4203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3590,
											"end": 4203,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3590,
											"end": 4203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3590,
											"end": 4203,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3590,
											"end": 4203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4209,
											"end": 4305,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 4209,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4246,
											"end": 4253,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4275,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 4275,
											"end": 4299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4275,
											"end": 4299,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 4275,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4264,
											"end": 4299,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4264,
											"end": 4299,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4209,
											"end": 4305,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4209,
											"end": 4305,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4209,
											"end": 4305,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4209,
											"end": 4305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4311,
											"end": 4421,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 4311,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4362,
											"end": 4369,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 4409,
											"end": 4414,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4391,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 4391,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4391,
											"end": 4415,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 4391,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4380,
											"end": 4415,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4380,
											"end": 4415,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4311,
											"end": 4421,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4311,
											"end": 4421,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4311,
											"end": 4421,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4311,
											"end": 4421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4427,
											"end": 4577,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 4427,
											"end": 4577,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4514,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 4546,
											"end": 4551,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4514,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 4514,
											"end": 4552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4514,
											"end": 4552,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 4514,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4504,
											"end": 4553,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4494,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 4494,
											"end": 4571,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4567,
											"end": 4568,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4565,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4569,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4494,
											"end": 4571,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 4494,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4427,
											"end": 4577,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4427,
											"end": 4577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4583,
											"end": 4750,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 4583,
											"end": 4750,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4643,
											"end": 4648,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4687,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4668,
											"end": 4688,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 4688,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 4688,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4697,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 4738,
											"end": 4743,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4697,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 4697,
											"end": 4744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4697,
											"end": 4744,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 4697,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4583,
											"end": 4750,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4583,
											"end": 4750,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4583,
											"end": 4750,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4583,
											"end": 4750,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4583,
											"end": 4750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4756,
											"end": 5397,
											"name": "tag",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 4756,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4844,
											"end": 4850,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4909,
											"end": 4911,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4897,
											"end": 4906,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4888,
											"end": 4895,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4884,
											"end": 4907,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4880,
											"end": 4912,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4877,
											"end": 4996,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4877,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 4877,
											"end": 4996,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4915,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 4915,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 4915,
											"end": 4994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4915,
											"end": 4994,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 4915,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4877,
											"end": 4996,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 4877,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5035,
											"end": 5036,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 5105,
											"end": 5112,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5096,
											"end": 5102,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5085,
											"end": 5094,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5081,
											"end": 5103,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5060,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 5060,
											"end": 5113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5060,
											"end": 5113,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 5060,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5113,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5006,
											"end": 5123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5162,
											"end": 5164,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5188,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 5247,
											"end": 5254,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5238,
											"end": 5244,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5227,
											"end": 5236,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5223,
											"end": 5245,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 5188,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5255,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 5188,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5178,
											"end": 5255,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5178,
											"end": 5255,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5133,
											"end": 5265,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5304,
											"end": 5306,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5330,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 5372,
											"end": 5379,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5363,
											"end": 5369,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5352,
											"end": 5361,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5348,
											"end": 5370,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5330,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 5330,
											"end": 5380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5330,
											"end": 5380,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 5330,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5320,
											"end": 5380,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5320,
											"end": 5380,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5390,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4756,
											"end": 5397,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4756,
											"end": 5397,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4756,
											"end": 5397,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4756,
											"end": 5397,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4756,
											"end": 5397,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4756,
											"end": 5397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5403,
											"end": 5521,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 5403,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5490,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 5508,
											"end": 5513,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5490,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 5490,
											"end": 5514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5490,
											"end": 5514,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 5490,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5485,
											"end": 5488,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5478,
											"end": 5515,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5403,
											"end": 5521,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5403,
											"end": 5521,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5403,
											"end": 5521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5527,
											"end": 5749,
											"name": "tag",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 5527,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5620,
											"end": 5624,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5660,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5647,
											"end": 5656,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5635,
											"end": 5661,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5635,
											"end": 5661,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5671,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 5739,
											"end": 5740,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5737,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5715,
											"end": 5721,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5671,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 5671,
											"end": 5742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5671,
											"end": 5742,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 5671,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5527,
											"end": 5749,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5527,
											"end": 5749,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5527,
											"end": 5749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5527,
											"end": 5749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5527,
											"end": 5749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5755,
											"end": 5877,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 5755,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5828,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 5846,
											"end": 5851,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5828,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 5828,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5828,
											"end": 5852,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 5828,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5821,
											"end": 5826,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5818,
											"end": 5853,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 5808,
											"end": 5871,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5867,
											"end": 5868,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5865,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5857,
											"end": 5869,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5808,
											"end": 5871,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 5808,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5755,
											"end": 5877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5755,
											"end": 5877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5883,
											"end": 6022,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 5883,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5929,
											"end": 5934,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 5973,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5945,
											"end": 5974,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5945,
											"end": 5974,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5983,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 6010,
											"end": 6015,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5983,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 5983,
											"end": 6016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5983,
											"end": 6016,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 5983,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5883,
											"end": 6022,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5883,
											"end": 6022,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5883,
											"end": 6022,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5883,
											"end": 6022,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5883,
											"end": 6022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6028,
											"end": 6502,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 6028,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6096,
											"end": 6102,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6110,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6155,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6141,
											"end": 6150,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6132,
											"end": 6139,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6128,
											"end": 6151,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6124,
											"end": 6156,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6121,
											"end": 6240,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6121,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 6121,
											"end": 6240,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6159,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 6159,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 6159,
											"end": 6238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6159,
											"end": 6238,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 6159,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6121,
											"end": 6240,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 6121,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6279,
											"end": 6280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 6349,
											"end": 6356,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6340,
											"end": 6346,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6329,
											"end": 6338,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6304,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 6304,
											"end": 6357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6304,
											"end": 6357,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 6304,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6294,
											"end": 6357,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6294,
											"end": 6357,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6250,
											"end": 6367,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6406,
											"end": 6408,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 6477,
											"end": 6484,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6468,
											"end": 6474,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6466,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6453,
											"end": 6475,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6432,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 6432,
											"end": 6485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6432,
											"end": 6485,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 6432,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6422,
											"end": 6485,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6422,
											"end": 6485,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6377,
											"end": 6495,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6028,
											"end": 6502,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6028,
											"end": 6502,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6028,
											"end": 6502,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6028,
											"end": 6502,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6028,
											"end": 6502,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6028,
											"end": 6502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6508,
											"end": 6840,
											"name": "tag",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 6508,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6629,
											"end": 6633,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6667,
											"end": 6669,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6665,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6644,
											"end": 6670,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6644,
											"end": 6670,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6680,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 6748,
											"end": 6749,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6737,
											"end": 6746,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6733,
											"end": 6750,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6724,
											"end": 6730,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6680,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 6680,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6680,
											"end": 6751,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 6680,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6761,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 6829,
											"end": 6831,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6818,
											"end": 6827,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6814,
											"end": 6832,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6805,
											"end": 6811,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6761,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 6761,
											"end": 6833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6761,
											"end": 6833,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 6761,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6508,
											"end": 6840,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6508,
											"end": 6840,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6508,
											"end": 6840,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6508,
											"end": 6840,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6508,
											"end": 6840,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6508,
											"end": 6840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6846,
											"end": 6991,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 6846,
											"end": 6991,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6915,
											"end": 6924,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6948,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 6979,
											"end": 6984,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6948,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 6948,
											"end": 6985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6948,
											"end": 6985,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 6948,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6935,
											"end": 6985,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6935,
											"end": 6985,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6846,
											"end": 6991,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6846,
											"end": 6991,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6846,
											"end": 6991,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6846,
											"end": 6991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6997,
											"end": 7166,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 6997,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7103,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 7153,
											"end": 7158,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7103,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 7103,
											"end": 7159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7103,
											"end": 7159,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 7103,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7098,
											"end": 7101,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7091,
											"end": 7160,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6997,
											"end": 7166,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6997,
											"end": 7166,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6997,
											"end": 7166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7432,
											"name": "tag",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 7172,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7284,
											"end": 7288,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7324,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7311,
											"end": 7320,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7307,
											"end": 7325,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7299,
											"end": 7325,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7299,
											"end": 7325,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7335,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 7422,
											"end": 7423,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7420,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7407,
											"end": 7424,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7398,
											"end": 7404,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7335,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 7335,
											"end": 7425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7335,
											"end": 7425,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 7335,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7432,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7432,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7432,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7432,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7438,
											"end": 7767,
											"name": "tag",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 7438,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7548,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7534,
											"end": 7543,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7525,
											"end": 7532,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7517,
											"end": 7549,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7514,
											"end": 7633,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7514,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 7514,
											"end": 7633,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7552,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 7552,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 7552,
											"end": 7631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7552,
											"end": 7631,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 7552,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7514,
											"end": 7633,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 7514,
											"end": 7633,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7672,
											"end": 7673,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7697,
											"end": 7750,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 7742,
											"end": 7749,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7733,
											"end": 7739,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7722,
											"end": 7731,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7718,
											"end": 7740,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7697,
											"end": 7750,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 7697,
											"end": 7750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7697,
											"end": 7750,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 7697,
											"end": 7750,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7687,
											"end": 7750,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7687,
											"end": 7750,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7643,
											"end": 7760,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7438,
											"end": 7767,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7438,
											"end": 7767,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7438,
											"end": 7767,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7438,
											"end": 7767,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7438,
											"end": 7767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7773,
											"end": 7953,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 7773,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7821,
											"end": 7898,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7818,
											"end": 7819,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7899,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7918,
											"end": 7922,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 7915,
											"end": 7916,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7923,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7942,
											"end": 7946,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7939,
											"end": 7940,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 7947,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7959,
											"end": 8150,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 7959,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7999,
											"end": 8002,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8018,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 8036,
											"end": 8037,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8018,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 8018,
											"end": 8038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8018,
											"end": 8038,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 8018,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8013,
											"end": 8038,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8013,
											"end": 8038,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8052,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 8070,
											"end": 8071,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8052,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 8052,
											"end": 8072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8052,
											"end": 8072,
											"name": "tag",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 8052,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8047,
											"end": 8072,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8047,
											"end": 8072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8095,
											"end": 8096,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8092,
											"end": 8093,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8088,
											"end": 8097,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8081,
											"end": 8097,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8081,
											"end": 8097,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8116,
											"end": 8119,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8113,
											"end": 8114,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8110,
											"end": 8120,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8107,
											"end": 8143,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8107,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 8107,
											"end": 8143,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 8123,
											"end": 8141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8107,
											"end": 8143,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 8107,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7959,
											"end": 8150,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7959,
											"end": 8150,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7959,
											"end": 8150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7959,
											"end": 8150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7959,
											"end": 8150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8156,
											"end": 8325,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 8156,
											"end": 8325,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8240,
											"end": 8251,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8274,
											"end": 8280,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8269,
											"end": 8272,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8262,
											"end": 8281,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8314,
											"end": 8318,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8309,
											"end": 8312,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8156,
											"end": 8325,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8156,
											"end": 8325,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8156,
											"end": 8325,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8156,
											"end": 8325,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8156,
											"end": 8325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8331,
											"end": 8490,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 8331,
											"end": 8490,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8471,
											"end": 8482,
											"name": "PUSH",
											"source": 14,
											"value": "546F6F206561726C790000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8467,
											"end": 8468,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8459,
											"end": 8465,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8455,
											"end": 8469,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8448,
											"end": 8483,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8331,
											"end": 8490,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8331,
											"end": 8490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8496,
											"end": 8861,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 8496,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8638,
											"end": 8641,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8659,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 8723,
											"end": 8724,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 8718,
											"end": 8721,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8659,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 8659,
											"end": 8725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8659,
											"end": 8725,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 8659,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8652,
											"end": 8725,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8652,
											"end": 8725,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8734,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 8823,
											"end": 8826,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8734,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 8734,
											"end": 8827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8734,
											"end": 8827,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 8734,
											"end": 8827,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8852,
											"end": 8854,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8847,
											"end": 8850,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8843,
											"end": 8855,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8836,
											"end": 8855,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8836,
											"end": 8855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8496,
											"end": 8861,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8496,
											"end": 8861,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8496,
											"end": 8861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8496,
											"end": 8861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8867,
											"end": 9286,
											"name": "tag",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 8867,
											"end": 9286,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9033,
											"end": 9037,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9071,
											"end": 9073,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9060,
											"end": 9069,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9056,
											"end": 9074,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9048,
											"end": 9074,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9048,
											"end": 9074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9120,
											"end": 9129,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9114,
											"end": 9118,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9110,
											"end": 9130,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9106,
											"end": 9107,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9095,
											"end": 9104,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9091,
											"end": 9108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9084,
											"end": 9131,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9148,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 9274,
											"end": 9278,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9148,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 9148,
											"end": 9279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9148,
											"end": 9279,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 9148,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9140,
											"end": 9279,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9140,
											"end": 9279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8867,
											"end": 9286,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8867,
											"end": 9286,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8867,
											"end": 9286,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8867,
											"end": 9286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9292,
											"end": 9472,
											"name": "tag",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 9292,
											"end": 9472,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9340,
											"end": 9417,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9330,
											"end": 9418,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9437,
											"end": 9441,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 9434,
											"end": 9435,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9427,
											"end": 9442,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9461,
											"end": 9465,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9458,
											"end": 9459,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9451,
											"end": 9466,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9478,
											"end": 9646,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 9478,
											"end": 9646,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9618,
											"end": 9638,
											"name": "PUSH",
											"source": 14,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 9614,
											"end": 9615,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9606,
											"end": 9612,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9602,
											"end": 9616,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9595,
											"end": 9639,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9478,
											"end": 9646,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9478,
											"end": 9646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9652,
											"end": 10018,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 9652,
											"end": 10018,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9794,
											"end": 9797,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 9879,
											"end": 9881,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 9874,
											"end": 9877,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9815,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 9815,
											"end": 9882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9815,
											"end": 9882,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 9815,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9808,
											"end": 9882,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9808,
											"end": 9882,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9891,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 9980,
											"end": 9983,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9891,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 9891,
											"end": 9984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9891,
											"end": 9984,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 9891,
											"end": 9984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10009,
											"end": 10011,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10004,
											"end": 10007,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10000,
											"end": 10012,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9993,
											"end": 10012,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9993,
											"end": 10012,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9652,
											"end": 10018,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9652,
											"end": 10018,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9652,
											"end": 10018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9652,
											"end": 10018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10443,
											"name": "tag",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 10024,
											"end": 10443,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10190,
											"end": 10194,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10230,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10217,
											"end": 10226,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10213,
											"end": 10231,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10205,
											"end": 10231,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10205,
											"end": 10231,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10277,
											"end": 10286,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10271,
											"end": 10275,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10267,
											"end": 10287,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10263,
											"end": 10264,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10252,
											"end": 10261,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10248,
											"end": 10265,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10241,
											"end": 10288,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10305,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 10431,
											"end": 10435,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10305,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 10305,
											"end": 10436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10305,
											"end": 10436,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 10305,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10297,
											"end": 10436,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10297,
											"end": 10436,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10443,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10443,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10443,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10449,
											"end": 10859,
											"name": "tag",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 10449,
											"end": 10859,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10489,
											"end": 10496,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10512,
											"end": 10532,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 10530,
											"end": 10531,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10512,
											"end": 10532,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 10512,
											"end": 10532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10512,
											"end": 10532,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 10512,
											"end": 10532,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10507,
											"end": 10532,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10507,
											"end": 10532,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10546,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 10564,
											"end": 10565,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10546,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 10546,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10546,
											"end": 10566,
											"name": "tag",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 10546,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10601,
											"end": 10602,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10598,
											"end": 10599,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10594,
											"end": 10603,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 10623,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 10641,
											"end": 10652,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10623,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 10623,
											"end": 10653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10623,
											"end": 10653,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 10623,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10612,
											"end": 10653,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10612,
											"end": 10653,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10802,
											"end": 10803,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10793,
											"end": 10800,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10789,
											"end": 10804,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10786,
											"end": 10787,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10783,
											"end": 10805,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 10763,
											"end": 10764,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10756,
											"end": 10765,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10736,
											"end": 10819,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 10713,
											"end": 10852,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 10713,
											"end": 10852,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10832,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 10832,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 10832,
											"end": 10850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10832,
											"end": 10850,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 10832,
											"end": 10850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10713,
											"end": 10852,
											"name": "tag",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 10713,
											"end": 10852,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10497,
											"end": 10859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10449,
											"end": 10859,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10449,
											"end": 10859,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10449,
											"end": 10859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10449,
											"end": 10859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10449,
											"end": 10859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10865,
											"end": 11045,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 10865,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10913,
											"end": 10990,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10910,
											"end": 10911,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10903,
											"end": 10991,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11010,
											"end": 11014,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 11007,
											"end": 11008,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11000,
											"end": 11015,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11034,
											"end": 11038,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11031,
											"end": 11032,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11024,
											"end": 11039,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11051,
											"end": 11236,
											"name": "tag",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 11051,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11091,
											"end": 11092,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11108,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 11126,
											"end": 11127,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11108,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 11108,
											"end": 11128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11108,
											"end": 11128,
											"name": "tag",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 11108,
											"end": 11128,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11103,
											"end": 11128,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11103,
											"end": 11128,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11142,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 11160,
											"end": 11161,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11142,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 11142,
											"end": 11162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11142,
											"end": 11162,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 11142,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11137,
											"end": 11162,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11137,
											"end": 11162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11181,
											"end": 11182,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11171,
											"end": 11206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 11171,
											"end": 11206,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11186,
											"end": 11204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 11186,
											"end": 11204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 11186,
											"end": 11204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11186,
											"end": 11204,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 11186,
											"end": 11204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11171,
											"end": 11206,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 11171,
											"end": 11206,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11228,
											"end": 11229,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11225,
											"end": 11226,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11221,
											"end": 11230,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 11216,
											"end": 11230,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11216,
											"end": 11230,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11051,
											"end": 11236,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11051,
											"end": 11236,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11051,
											"end": 11236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11051,
											"end": 11236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11051,
											"end": 11236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11436,
											"name": "tag",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 11242,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11282,
											"end": 11286,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11302,
											"end": 11322,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 11320,
											"end": 11321,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 11322,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 11302,
											"end": 11322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 11322,
											"name": "tag",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 11302,
											"end": 11322,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11297,
											"end": 11322,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11297,
											"end": 11322,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11336,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 11354,
											"end": 11355,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11336,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 11336,
											"end": 11356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11336,
											"end": 11356,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 11336,
											"end": 11356,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11331,
											"end": 11356,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11331,
											"end": 11356,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11380,
											"end": 11381,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11377,
											"end": 11378,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11373,
											"end": 11382,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11365,
											"end": 11382,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11365,
											"end": 11382,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11404,
											"end": 11405,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11398,
											"end": 11402,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11395,
											"end": 11406,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11392,
											"end": 11429,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11392,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 11392,
											"end": 11429,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 11409,
											"end": 11427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11392,
											"end": 11429,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 11392,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11436,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11436,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11436,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11436,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11442,
											"end": 11585,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 11442,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11499,
											"end": 11504,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11530,
											"end": 11536,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11524,
											"end": 11537,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11515,
											"end": 11537,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11515,
											"end": 11537,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11546,
											"end": 11579,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 11573,
											"end": 11578,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11546,
											"end": 11579,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 11546,
											"end": 11579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11546,
											"end": 11579,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 11546,
											"end": 11579,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11442,
											"end": 11585,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11442,
											"end": 11585,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11442,
											"end": 11585,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11442,
											"end": 11585,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11442,
											"end": 11585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11591,
											"end": 11942,
											"name": "tag",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 11591,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11661,
											"end": 11667,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11712,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11698,
											"end": 11707,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11689,
											"end": 11696,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11685,
											"end": 11708,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11681,
											"end": 11713,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11678,
											"end": 11797,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11678,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 11678,
											"end": 11797,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11716,
											"end": 11795,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 11716,
											"end": 11795,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 11716,
											"end": 11795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11716,
											"end": 11795,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 11716,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11678,
											"end": 11797,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 11678,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11836,
											"end": 11837,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11861,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 11917,
											"end": 11924,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11908,
											"end": 11914,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11897,
											"end": 11906,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11893,
											"end": 11915,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11861,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 11861,
											"end": 11925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11861,
											"end": 11925,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 11861,
											"end": 11925,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11851,
											"end": 11925,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11851,
											"end": 11925,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11807,
											"end": 11935,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11591,
											"end": 11942,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11591,
											"end": 11942,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11591,
											"end": 11942,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11591,
											"end": 11942,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11591,
											"end": 11942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11948,
											"end": 12280,
											"name": "tag",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 11948,
											"end": 12280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12069,
											"end": 12073,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12109,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12096,
											"end": 12105,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12092,
											"end": 12110,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12084,
											"end": 12110,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12084,
											"end": 12110,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12120,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 12188,
											"end": 12189,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12177,
											"end": 12186,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12173,
											"end": 12190,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12164,
											"end": 12170,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12120,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 12120,
											"end": 12191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12120,
											"end": 12191,
											"name": "tag",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 12120,
											"end": 12191,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12201,
											"end": 12273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 12269,
											"end": 12271,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12258,
											"end": 12267,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12254,
											"end": 12272,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12245,
											"end": 12251,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12201,
											"end": 12273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 12201,
											"end": 12273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12201,
											"end": 12273,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 12201,
											"end": 12273,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11948,
											"end": 12280,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11948,
											"end": 12280,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11948,
											"end": 12280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11948,
											"end": 12280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11948,
											"end": 12280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11948,
											"end": 12280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12286,
											"end": 12618,
											"name": "tag",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 12286,
											"end": 12618,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12407,
											"end": 12411,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12445,
											"end": 12447,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12434,
											"end": 12443,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12430,
											"end": 12448,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12422,
											"end": 12448,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12422,
											"end": 12448,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12458,
											"end": 12529,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 12526,
											"end": 12527,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12515,
											"end": 12524,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12511,
											"end": 12528,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12502,
											"end": 12508,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12458,
											"end": 12529,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 12458,
											"end": 12529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12458,
											"end": 12529,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 12458,
											"end": 12529,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12539,
											"end": 12611,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 12607,
											"end": 12609,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12596,
											"end": 12605,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12592,
											"end": 12610,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12583,
											"end": 12589,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12539,
											"end": 12611,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 12539,
											"end": 12611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12539,
											"end": 12611,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 12539,
											"end": 12611,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12286,
											"end": 12618,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 12286,
											"end": 12618,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12286,
											"end": 12618,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12286,
											"end": 12618,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12286,
											"end": 12618,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12286,
											"end": 12618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12624,
											"end": 12799,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 12624,
											"end": 12799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12764,
											"end": 12791,
											"name": "PUSH",
											"source": 14,
											"value": "416C6C6F77616E6365206E6F74206869676820656E6F75676800000000000000"
										},
										{
											"begin": 12760,
											"end": 12761,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12752,
											"end": 12758,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12748,
											"end": 12762,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12741,
											"end": 12792,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12624,
											"end": 12799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12624,
											"end": 12799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12805,
											"end": 13171,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 12805,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12947,
											"end": 12950,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12968,
											"end": 13035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 13032,
											"end": 13034,
											"name": "PUSH",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 13027,
											"end": 13030,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12968,
											"end": 13035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 12968,
											"end": 13035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12968,
											"end": 13035,
											"name": "tag",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 12968,
											"end": 13035,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12961,
											"end": 13035,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12961,
											"end": 13035,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13044,
											"end": 13137,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 13133,
											"end": 13136,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13044,
											"end": 13137,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 13044,
											"end": 13137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13044,
											"end": 13137,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 13044,
											"end": 13137,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13162,
											"end": 13164,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13157,
											"end": 13160,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13153,
											"end": 13165,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13146,
											"end": 13165,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13146,
											"end": 13165,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12805,
											"end": 13171,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12805,
											"end": 13171,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12805,
											"end": 13171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12805,
											"end": 13171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13177,
											"end": 13596,
											"name": "tag",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 13177,
											"end": 13596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13343,
											"end": 13347,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13381,
											"end": 13383,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13370,
											"end": 13379,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13366,
											"end": 13384,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13358,
											"end": 13384,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13358,
											"end": 13384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13430,
											"end": 13439,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13424,
											"end": 13428,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13420,
											"end": 13440,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13416,
											"end": 13417,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13405,
											"end": 13414,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13401,
											"end": 13418,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13394,
											"end": 13441,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13458,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 13584,
											"end": 13588,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13458,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 13458,
											"end": 13589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13458,
											"end": 13589,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 13458,
											"end": 13589,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13450,
											"end": 13589,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13450,
											"end": 13589,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13177,
											"end": 13596,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13177,
											"end": 13596,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13177,
											"end": 13596,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13177,
											"end": 13596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13602,
											"end": 14044,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 13602,
											"end": 14044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13751,
											"end": 13755,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13789,
											"end": 13791,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 13778,
											"end": 13787,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13774,
											"end": 13792,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13766,
											"end": 13792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13766,
											"end": 13792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13802,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 13870,
											"end": 13871,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13859,
											"end": 13868,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13855,
											"end": 13872,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13846,
											"end": 13852,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13802,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 13802,
											"end": 13873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13802,
											"end": 13873,
											"name": "tag",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 13802,
											"end": 13873,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13883,
											"end": 13955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 13951,
											"end": 13953,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13940,
											"end": 13949,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13936,
											"end": 13954,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13927,
											"end": 13933,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13883,
											"end": 13955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 13883,
											"end": 13955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13883,
											"end": 13955,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 13883,
											"end": 13955,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13965,
											"end": 14037,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 14033,
											"end": 14035,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14022,
											"end": 14031,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14018,
											"end": 14036,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14009,
											"end": 14015,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13965,
											"end": 14037,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 13965,
											"end": 14037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13965,
											"end": 14037,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 13965,
											"end": 14037,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13602,
											"end": 14044,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13602,
											"end": 14044,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13602,
											"end": 14044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13602,
											"end": 14044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13602,
											"end": 14044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13602,
											"end": 14044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13602,
											"end": 14044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"MasterGrand.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BONUS_MULTIPLIER()": "8aa28550",
							"GRAND_CAP()": "b9926557",
							"Grand()": "d129459b",
							"GrandPerBlock()": "212f14cc",
							"addPool(uint256,address,bool)": "7abceffd",
							"bonusEndBlock()": "1aed6553",
							"collector()": "913e77ad",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"grandMinted()": "83e27185",
							"massUpdatePools()": "630b5ba1",
							"owner()": "8da5cb5b",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"renounceOwnership()": "715018a6",
							"setPool(uint256,uint256,bool)": "46ca6bea",
							"startBlock()": "48cd4cb1",
							"startTime()": "78e97925",
							"totalAllocPoint()": "17caf6f1",
							"totalBoxes()": "57e78adc",
							"transferOwnership(address)": "f2fde38b",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract GrandToken\",\"name\":\"_Grand\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_GrandPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GRAND_CAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Grand\",\"outputs\":[{\"internalType\":\"contract GrandToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GrandPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grandMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accGrandPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBoxes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MasterGrand.sol\":\"MasterGrand\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"MasterGrand.sol\":{\"keccak256\":\"0x6c3b39de569b9bfcd147e2d5524f8419adaae29095d5570eda9003f4aafec01e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://895efdecd97d2944a2bbfdac2c6efe2572cc7f138ef5227976735f95e9168a76\",\"dweb:/ipfs/QmaTicTp98wjT4dmQjat2FjtSLyu3z8vMBSW6s1Kzx2XoS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "MasterGrand.sol:MasterGrand",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1770,
								"contract": "MasterGrand.sol:MasterGrand",
								"label": "Grand",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(GrandToken)1742"
							},
							{
								"astId": 1772,
								"contract": "MasterGrand.sol:MasterGrand",
								"label": "collector",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1774,
								"contract": "MasterGrand.sol:MasterGrand",
								"label": "bonusEndBlock",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1776,
								"contract": "MasterGrand.sol:MasterGrand",
								"label": "GrandPerBlock",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1784,
								"contract": "MasterGrand.sol:MasterGrand",
								"label": "grandMinted",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1787,
								"contract": "MasterGrand.sol:MasterGrand",
								"label": "totalBoxes",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1791,
								"contract": "MasterGrand.sol:MasterGrand",
								"label": "poolInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_struct(PoolInfo)1767_storage)dyn_storage"
							},
							{
								"astId": 1798,
								"contract": "MasterGrand.sol:MasterGrand",
								"label": "userInfo",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1757_storage))"
							},
							{
								"astId": 1801,
								"contract": "MasterGrand.sol:MasterGrand",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1803,
								"contract": "MasterGrand.sol:MasterGrand",
								"label": "startBlock",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1805,
								"contract": "MasterGrand.sol:MasterGrand",
								"label": "startTime",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1767_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1767_storage",
								"encoding": "dynamic_array",
								"label": "struct MasterGrand.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_contract(GrandToken)1742": {
								"encoding": "inplace",
								"label": "contract GrandToken",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)967": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1757_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MasterGrand.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1757_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1757_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct MasterGrand.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1757_storage)"
							},
							"t_struct(PoolInfo)1767_storage": {
								"encoding": "inplace",
								"label": "struct MasterGrand.PoolInfo",
								"members": [
									{
										"astId": 1760,
										"contract": "MasterGrand.sol:MasterGrand",
										"label": "lpToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)967"
									},
									{
										"astId": 1762,
										"contract": "MasterGrand.sol:MasterGrand",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1764,
										"contract": "MasterGrand.sol:MasterGrand",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1766,
										"contract": "MasterGrand.sol:MasterGrand",
										"label": "accGrandPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(UserInfo)1757_storage": {
								"encoding": "inplace",
								"label": "struct MasterGrand.UserInfo",
								"members": [
									{
										"astId": 1754,
										"contract": "MasterGrand.sol:MasterGrand",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1756,
										"contract": "MasterGrand.sol:MasterGrand",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1693
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1694,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1693,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1693,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1693
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1675,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1727
						],
						"IERC20": [
							967
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1727,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1727,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1727,
								967
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								901,
								910
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1727
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1728,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1727,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							967
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 968,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							374
						],
						"IERC20Errors": [
							279
						],
						"IERC721Errors": [
							327
						]
					},
					"id": 375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 279,
							"linearizedBaseContracts": [
								279
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 249,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 254,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 259,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 268,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 273,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 278,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 375,
							"src": "280:1764:4",
							"usedErrors": [
								249,
								254,
								259,
								268,
								273,
								278
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 280,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 327,
							"linearizedBaseContracts": [
								327
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 285,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 290,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 299,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 304,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 309,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 316,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 321,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 326,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 375,
							"src": "2190:2092:4",
							"usedErrors": [
								285,
								290,
								299,
								304,
								309,
								316,
								321,
								326
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 328,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 374,
							"linearizedBaseContracts": [
								374
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 339,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 344,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 349,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 356,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 361,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 366,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 373,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 375,
							"src": "4430:2107:4",
							"usedErrors": [
								339,
								344,
								349,
								356,
								361,
								366,
								373
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1693
						],
						"ERC20": [
							889
						],
						"IERC20": [
							967
						],
						"IERC20Errors": [
							279
						],
						"IERC20Metadata": [
							993
						]
					},
					"id": 890,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 376,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 378,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 890,
							"sourceUnit": 968,
							"src": "131:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 377,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 380,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 890,
							"sourceUnit": 994,
							"src": "168:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 379,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 993,
										"src": "176:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 890,
							"sourceUnit": 1694,
							"src": "232:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 381,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1693,
										"src": "240:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 890,
							"sourceUnit": 375,
							"src": "281:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 279,
										"src": "289:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 386,
										"name": "Context",
										"nameLocations": [
											"1133:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1693,
										"src": "1133:7:5"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:5"
								},
								{
									"baseName": {
										"id": 388,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "1142:6:5"
									},
									"id": 389,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:5"
								},
								{
									"baseName": {
										"id": 390,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 993,
										"src": "1150:14:5"
									},
									"id": 391,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:5"
								},
								{
									"baseName": {
										"id": 392,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 279,
										"src": "1166:12:5"
									},
									"id": 393,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:5"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 385,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:5",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 889,
							"linearizedBaseContracts": [
								889,
								279,
								993,
								967,
								1693
							],
							"name": "ERC20",
							"nameLocation": "1124:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 397,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "1185:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 396,
										"keyName": "account",
										"keyNameLocation": "1201:7:5",
										"keyType": {
											"id": 394,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 395,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "1245:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 402,
										"keyName": "account",
										"keyNameLocation": "1261:7:5",
										"keyType": {
											"id": 398,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 401,
											"keyName": "spender",
											"keyNameLocation": "1288:7:5",
											"keyType": {
												"id": 399,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 400,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 405,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "1335:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 404,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 407,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "1370:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 406,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "1396:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 408,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "1657:57:5",
										"statements": [
											{
												"expression": {
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 417,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "1667:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 418,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "1675:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:5"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 421,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "1690:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 422,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "1700:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:5"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:5",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 426,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1613:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 411,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1634:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:5"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:5"
									},
									"scope": 889,
									"src": "1601:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										980
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "1839:29:5",
										"statements": [
											{
												"expression": {
													"id": 432,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 407,
													"src": "1856:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 431,
												"id": 433,
												"nodeType": "Return",
												"src": "1849:12:5"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:5"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1824:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:5"
									},
									"scope": 889,
									"src": "1779:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										986
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "2043:31:5",
										"statements": [
											{
												"expression": {
													"id": 441,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 409,
													"src": "2060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 440,
												"id": 442,
												"nodeType": "Return",
												"src": "2053:14:5"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:5",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:5"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2028:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:5"
									},
									"scope": 889,
									"src": "1981:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										992
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2763:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 449,
												"id": 451,
												"nodeType": "Return",
												"src": "2773:9:5"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:5",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:5"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2756:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 447,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:5"
									},
									"scope": 889,
									"src": "2707:82:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										916
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2910:36:5",
										"statements": [
											{
												"expression": {
													"id": 459,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 405,
													"src": "2927:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 458,
												"id": 460,
												"nodeType": "Return",
												"src": "2920:19:5"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:5",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:5"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2901:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:5"
									},
									"scope": 889,
									"src": "2849:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										924
									],
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "3078:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 470,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "3095:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 472,
													"indexExpression": {
														"id": 471,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "3105:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 469,
												"id": 473,
												"nodeType": "Return",
												"src": "3088:25:5"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:5",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3023:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:5"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:5"
									},
									"scope": 889,
									"src": "3004:116:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										934
									],
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "3390:103:5",
										"statements": [
											{
												"assignments": [
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 498,
														"src": "3400:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 485,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 487,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "3416:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3448:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "3455:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3459:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "3438:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 484,
												"id": 497,
												"nodeType": "Return",
												"src": "3475:11:5"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:5",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3333:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3345:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:5"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3384:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 482,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:5"
									},
									"scope": 889,
									"src": "3315:178:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										944
									],
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "3640:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 509,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "3657:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 511,
														"indexExpression": {
															"id": 510,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "3669:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 513,
													"indexExpression": {
														"id": 512,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "3676:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 508,
												"id": 514,
												"nodeType": "Return",
												"src": "3650:34:5"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:5",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3570:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3585:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:5"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3631:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:5"
									},
									"scope": 889,
									"src": "3551:140:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										954
									],
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4077:107:5",
										"statements": [
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 539,
														"src": "4087:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 526,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 530,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 528,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "4103:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 532,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "4134:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "4141:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "4150:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 531,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															780,
															840
														],
														"referencedDeclaration": 780,
														"src": "4125:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 525,
												"id": 538,
												"nodeType": "Return",
												"src": "4166:11:5"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:5",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4015:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4032:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:5"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4071:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:5"
									},
									"scope": 889,
									"src": "3998:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										966
									],
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "4869:151:5",
										"statements": [
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "4879:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 552,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 554,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "4897:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 558,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "4935:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "4941:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4950:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 557,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "4919:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "4976:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "4982:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4986:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 563,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "4966:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 551,
												"id": 570,
												"nodeType": "Return",
												"src": "5002:11:5"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:5",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4798:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4812:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4824:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:5"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4863:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:5"
									},
									"scope": 889,
									"src": "4776:244:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "5462:231:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 582,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "5476:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 583,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 596,
												"nodeType": "IfStatement",
												"src": "5472:86:5",
												"trueBody": {
													"id": 595,
													"nodeType": "Block",
													"src": "5496:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 589,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 588,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "5517:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 594,
															"nodeType": "RevertStatement",
															"src": "5510:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "5571:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "5567:86:5",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "5589:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "5610:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "5603:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 613,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "5670:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "5676:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5680:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 612,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "5662:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:5"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "5412:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "5426:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "5438:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:5"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:5"
									},
									"scope": 889,
									"src": "5393:300:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "6083:1032:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 629,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "6097:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 630,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 666,
													"nodeType": "Block",
													"src": "6271:362:5",
													"statements": [
														{
															"assignments": [
																641
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 641,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 666,
																	"src": "6285:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 640,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 645,
															"initialValue": {
																"baseExpression": {
																	"id": 642,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "6307:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 644,
																"indexExpression": {
																	"id": 643,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6317:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 646,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "6340:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 647,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6354:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 656,
															"nodeType": "IfStatement",
															"src": "6336:115:5",
															"trueBody": {
																"id": 655,
																"nodeType": "Block",
																"src": "6361:90:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 650,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 622,
																					"src": "6411:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 651,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "6417:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 652,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 626,
																					"src": "6430:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 649,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "6386:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 654,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:5"
																	}
																]
															}
														},
														{
															"id": 665,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:5",
															"statements": [
																{
																	"expression": {
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 657,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 397,
																				"src": "6571:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 659,
																			"indexExpression": {
																				"id": 658,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 622,
																				"src": "6581:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 660,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 641,
																				"src": "6589:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 661,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 626,
																				"src": "6603:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 664,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:5"
																}
															]
														}
													]
												},
												"id": 667,
												"nodeType": "IfStatement",
												"src": "6093:540:5",
												"trueBody": {
													"id": 639,
													"nodeType": "Block",
													"src": "6117:148:5",
													"statements": [
														{
															"expression": {
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 635,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "6233:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 636,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6249:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 638,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 668,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "6647:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 669,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "6862:206:5",
													"statements": [
														{
															"id": 686,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:5",
															"statements": [
																{
																	"expression": {
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 680,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 397,
																				"src": "7021:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 682,
																			"indexExpression": {
																				"id": 681,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 624,
																				"src": "7031:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 683,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "7038:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 685,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:5"
																}
															]
														}
													]
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "6643:425:5",
												"trueBody": {
													"id": 679,
													"nodeType": "Block",
													"src": "6665:191:5",
													"statements": [
														{
															"id": 678,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:5",
															"statements": [
																{
																	"expression": {
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 674,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 405,
																			"src": "6810:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 675,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "6826:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 677,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:5"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 690,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "7092:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "7098:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "7102:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 689,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "7083:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "EmitStatement",
												"src": "7078:30:5"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:5",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6025:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6039:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6051:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:5"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:5"
									},
									"scope": 889,
									"src": "6008:1107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "7514:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 704,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "7528:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 705,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 718,
												"nodeType": "IfStatement",
												"src": "7524:91:5",
												"trueBody": {
													"id": 717,
													"nodeType": "Block",
													"src": "7551:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 711,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 710,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "7572:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 716,
															"nodeType": "RevertStatement",
															"src": "7565:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 720,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "7644:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "7653:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 719,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "7624:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:5"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:5",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "7473:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "7490:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:5"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:5"
									},
									"scope": 889,
									"src": "7458:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "8040:150:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 737,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "8054:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 738,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 751,
												"nodeType": "IfStatement",
												"src": "8050:89:5",
												"trueBody": {
													"id": 750,
													"nodeType": "Block",
													"src": "8077:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 746,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 744,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 743,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "8098:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 749,
															"nodeType": "RevertStatement",
															"src": "8091:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 753,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "8156:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 754,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "8177:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 752,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "8148:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:5"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "7999:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "8016:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:5"
									},
									"scope": 889,
									"src": "7984:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "8800:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 773,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "8819:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "8826:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "8835:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 772,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															780,
															840
														],
														"referencedDeclaration": 840,
														"src": "8810:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:5"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:5",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8744:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8759:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8776:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:5"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:5"
									},
									"scope": 889,
									"src": "8726:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "9799:334:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "9813:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 793,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 806,
												"nodeType": "IfStatement",
												"src": "9809:89:5",
												"trueBody": {
													"id": 805,
													"nodeType": "Block",
													"src": "9834:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 799,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 798,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "9855:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 804,
															"nodeType": "RevertStatement",
															"src": "9848:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 807,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "9911:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 808,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 821,
												"nodeType": "IfStatement",
												"src": "9907:90:5",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "9934:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 814,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 813,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "9955:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 819,
															"nodeType": "RevertStatement",
															"src": "9948:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 822,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "10006:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 825,
															"indexExpression": {
																"id": 823,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "10018:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 826,
														"indexExpression": {
															"id": 824,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "10025:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 827,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "10036:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:5"
											},
											{
												"condition": {
													"id": 830,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 789,
													"src": "10055:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 838,
												"nodeType": "IfStatement",
												"src": "10051:76:5",
												"trueBody": {
													"id": 837,
													"nodeType": "Block",
													"src": "10066:61:5",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 832,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "10094:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 833,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "10101:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 834,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "10110:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 831,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "10085:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 836,
															"nodeType": "EmitStatement",
															"src": "10080:36:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:5",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "9719:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "9734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "9751:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "9766:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 788,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:5"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:5"
									},
									"scope": 889,
									"src": "9701:432:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "10504:388:5",
										"statements": [
											{
												"assignments": [
													851
												],
												"declarations": [
													{
														"constant": false,
														"id": 851,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "10514:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 850,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"arguments": [
														{
															"id": 853,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "10551:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "10558:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 852,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "10541:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 857,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "10580:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 859,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 858,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 886,
												"nodeType": "IfStatement",
												"src": "10576:310:5",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "10619:267:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 864,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "10637:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 865,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "10656:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 874,
															"nodeType": "IfStatement",
															"src": "10633:130:5",
															"trueBody": {
																"id": 873,
																"nodeType": "Block",
																"src": "10663:100:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 868,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 845,
																					"src": "10715:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 869,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 851,
																					"src": "10724:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 870,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 847,
																					"src": "10742:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 867,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 268,
																				"src": "10688:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 872,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:5"
																	}
																]
															}
														},
														{
															"id": 884,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 876,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 843,
																				"src": "10813:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 877,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 845,
																				"src": "10820:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 878,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 851,
																					"src": "10829:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 879,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 847,
																					"src": "10848:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 875,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				780,
																				840
																			],
																			"referencedDeclaration": 840,
																			"src": "10804:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 883,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:5",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "10440:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "10455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "10472:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:5"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:5"
									},
									"scope": 889,
									"src": "10415:477:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 890,
							"src": "1106:9788:5",
							"usedErrors": [
								249,
								254,
								259,
								268,
								273,
								278
							],
							"usedEvents": [
								901,
								910
							]
						}
					],
					"src": "105:10790:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							967
						]
					},
					"id": 968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 891,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 892,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 967,
							"linearizedBaseContracts": [
								967
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 901,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 910,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 967,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 967,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 967,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 967,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 967,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 966,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 963,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 967,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 968,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								901,
								910
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							967
						],
						"IERC20Metadata": [
							993
						]
					},
					"id": 994,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 969,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 971,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 994,
							"sourceUnit": 968,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 970,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 973,
										"name": "IERC20",
										"nameLocations": [
											"306:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "306:6:7"
									},
									"id": 974,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 972,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:7",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 993,
							"linearizedBaseContracts": [
								993,
								967
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:7"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "417:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 977,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:7"
									},
									"scope": 993,
									"src": "378:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 986,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:7"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 983,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 993,
									"src": "499:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 992,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:7"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "674:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 989,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:7"
									},
									"scope": 993,
									"src": "631:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 994,
							"src": "278:405:7",
							"usedErrors": [],
							"usedEvents": [
								901,
								910
							]
						}
					],
					"src": "125:559:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1663
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							967
						],
						"SafeERC20": [
							1404
						]
					},
					"id": 1405,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 995,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 997,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1405,
							"sourceUnit": 968,
							"src": "141:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 996,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "149:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 999,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1405,
							"sourceUnit": 230,
							"src": "179:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 998,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 1001,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1405,
							"sourceUnit": 1664,
							"src": "238:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1000,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1663,
										"src": "246:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1002,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1404,
							"linearizedBaseContracts": [
								1404
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:8",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 1007,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "875:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:8"
									},
									"src": "844:46:8"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:8",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 1016,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1011:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1028:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1054:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:8"
									},
									"src": "972:109:8"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "1343:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1028,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "1373:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1031,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1020,
																		"src": "1395:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 934,
																	"src": "1395:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1033,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1022,
																			"src": "1412:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1034,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "1416:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1035,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 1029,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1027,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "1353:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:8"
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:8",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "1293:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1019,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1018,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "1293:6:8"
													},
													"referencedDeclaration": 967,
													"src": "1293:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "1307:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "1319:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:8"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:8"
									},
									"scope": 1404,
									"src": "1271:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "1760:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1054,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "1790:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1057,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "1812:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 966,
																	"src": "1812:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1059,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1046,
																			"src": "1833:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1060,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "1839:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1061,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1050,
																			"src": "1843:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1062,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1055,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1053,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "1770:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:8"
											}
										]
									},
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:8",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1696:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1043,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1042,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "1696:6:8"
													},
													"referencedDeclaration": 967,
													"src": "1696:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1710:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1724:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1736:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:8"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:8"
									},
									"scope": 1404,
									"src": "1670:188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "2600:139:8",
										"statements": [
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1097,
														"src": "2610:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1078,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1084,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1404",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1404",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1082,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "2664:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1080,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "2633:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "2633:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "2695:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1091,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "2702:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1092,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "2711:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1093,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "2726:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1089,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "2682:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:8"
											}
										]
									},
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:8",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "2545:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1070,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1069,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "2545:6:8"
													},
													"referencedDeclaration": 967,
													"src": "2545:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "2559:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "2576:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:8"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:8"
									},
									"scope": 1404,
									"src": "2514:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "3505:370:8",
										"statements": [
											{
												"id": 1139,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:8",
												"statements": [
													{
														"assignments": [
															1110
														],
														"declarations": [
															{
																"constant": false,
																"id": 1110,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:8",
																"nodeType": "VariableDeclaration",
																"scope": 1139,
																"src": "3539:24:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1109,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1119,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1115,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1404",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1404",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1113,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1117,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "3597:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1111,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "3566:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "3566:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1120,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "3623:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1121,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "3642:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1130,
														"nodeType": "IfStatement",
														"src": "3619:160:8",
														"trueBody": {
															"id": 1129,
															"nodeType": "Block",
															"src": "3661:118:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1124,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1104,
																				"src": "3719:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1125,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1110,
																				"src": "3728:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1126,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1106,
																				"src": "3746:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1123,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1016,
																			"src": "3686:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1128,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1132,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "3805:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1133,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "3812:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1134,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "3821:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1135,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "3840:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1131,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "3792:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1138,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:8",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "3438:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1100,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "3438:6:8"
													},
													"referencedDeclaration": 967,
													"src": "3438:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "3452:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "3469:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:8"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:8"
									},
									"scope": 1404,
									"src": "3407:468:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "4529:303:8",
										"statements": [
											{
												"assignments": [
													1153
												],
												"declarations": [
													{
														"constant": false,
														"id": 1153,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1187,
														"src": "4539:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1152,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1162,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1156,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "4582:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$967",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:8",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "4582:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1158,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "4598:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1159,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "4607:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1160,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1154,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:8",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:8"
											},
											{
												"condition": {
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:8",
													"subExpression": {
														"arguments": [
															{
																"id": 1164,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "4654:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$967",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1165,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "4661:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$967",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1163,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "4630:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "4625:201:8",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "4676:150:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1169,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "4710:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1172,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1145,
																					"src": "4732:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$967",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 954,
																				"src": "4732:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1174,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1147,
																						"src": "4748:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1175,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1176,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1170,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:8",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1168,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "4690:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1179,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1181,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "4795:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1182,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "4802:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1180,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "4775:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1184,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:8",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4474:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1144,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1143,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "4474:6:8"
													},
													"referencedDeclaration": 967,
													"src": "4474:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4488:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4505:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:8"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:8"
									},
									"scope": 1404,
									"src": "4452:380:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "5279:219:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1201,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1194,
																"src": "5293:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1215,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "5402:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1216,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "5406:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1217,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "5413:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1213,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "5380:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:8",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5380:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1228,
													"nodeType": "IfStatement",
													"src": "5375:117:8",
													"trueBody": {
														"id": 1227,
														"nodeType": "Block",
														"src": "5420:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1223,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1192,
																					"src": "5474:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1222,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1221,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1220,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1007,
																		"src": "5441:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1226,
																"nodeType": "RevertStatement",
																"src": "5434:47:8"
															}
														]
													}
												},
												"id": 1229,
												"nodeType": "IfStatement",
												"src": "5289:203:8",
												"trueBody": {
													"id": 1212,
													"nodeType": "Block",
													"src": "5314:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1207,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1192,
																		"src": "5341:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1208,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "5348:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1209,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "5352:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1206,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "5328:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1211,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:8",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5208:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1190,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5208:8:8"
													},
													"referencedDeclaration": 229,
													"src": "5208:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5224:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5236:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5251:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1197,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:8"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:8"
									},
									"scope": 1404,
									"src": "5176:322:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "6017:239:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1246,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "6031:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1261,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "6154:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1262,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "6160:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1263,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "6164:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1264,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1243,
																	"src": "6171:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1259,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "6128:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:8",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6128:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1275,
													"nodeType": "IfStatement",
													"src": "6123:127:8",
													"trueBody": {
														"id": 1274,
														"nodeType": "Block",
														"src": "6178:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1270,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1235,
																					"src": "6232:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1269,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1268,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1267,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1007,
																		"src": "6199:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1273,
																"nodeType": "RevertStatement",
																"src": "6192:47:8"
															}
														]
													}
												},
												"id": 1276,
												"nodeType": "IfStatement",
												"src": "6027:223:8",
												"trueBody": {
													"id": 1258,
													"nodeType": "Block",
													"src": "6052:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "6083:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1253,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "6090:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1254,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "6096:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1255,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1241,
																		"src": "6100:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1251,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "6066:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1257,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:8",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "5895:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1234,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1233,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5895:8:8"
													},
													"referencedDeclaration": 229,
													"src": "5895:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "5919:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "5941:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "5961:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "5984:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:8"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:8"
									},
									"scope": 1404,
									"src": "5850:406:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "7023:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1291,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1284,
																"src": "7037:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1305,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "7145:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1306,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "7149:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1307,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "7156:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1303,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "7124:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:8",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7124:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1318,
													"nodeType": "IfStatement",
													"src": "7119:116:8",
													"trueBody": {
														"id": 1317,
														"nodeType": "Block",
														"src": "7163:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1313,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1282,
																					"src": "7217:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1311,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1310,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1007,
																		"src": "7184:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1316,
																"nodeType": "RevertStatement",
																"src": "7177:47:8"
															}
														]
													}
												},
												"id": 1319,
												"nodeType": "IfStatement",
												"src": "7033:202:8",
												"trueBody": {
													"id": 1302,
													"nodeType": "Block",
													"src": "7058:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1297,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "7085:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1298,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "7092:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1299,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1286,
																		"src": "7096:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1296,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "7072:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1301,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:8",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "6952:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1281,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1280,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6952:8:8"
													},
													"referencedDeclaration": 229,
													"src": "6952:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "6968:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "6980:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "6995:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:8"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:8"
									},
									"scope": 1404,
									"src": "6921:320:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "7808:650:8",
										"statements": [
											{
												"assignments": [
													1331
												],
												"declarations": [
													{
														"constant": false,
														"id": 1331,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1361,
														"src": "7818:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1330,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1332,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:8"
											},
											{
												"assignments": [
													1334
												],
												"declarations": [
													{
														"constant": false,
														"id": 1334,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1361,
														"src": "7846:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1333,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1335,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:8"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:8",
													"nodeType": "YulBlock",
													"src": "7900:396:8",
													"statements": [
														{
															"nativeSrc": "7914:75:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:8"
																		},
																		"nativeSrc": "7934:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:8"
																		},
																		"nativeSrc": "7951:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:8"
																		},
																		"nativeSrc": "7968:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:8"
																},
																"nativeSrc": "7929:60:8",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:8",
																"nodeType": "YulBlock",
																"src": "8050:157:8",
																"statements": [
																	{
																		"nativeSrc": "8068:22:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:8",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:8"
																			},
																			"nativeSrc": "8079:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:8"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:8",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:8"
																					},
																					"nativeSrc": "8130:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:8"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:8",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:8"
																			},
																			"nativeSrc": "8107:40:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:8"
																		},
																		"nativeSrc": "8107:40:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:8"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:8"
																					},
																					"nativeSrc": "8176:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:8"
																			},
																			"nativeSrc": "8164:29:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:8"
																		},
																		"nativeSrc": "8164:29:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:8"
																},
																"nativeSrc": "8034:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:8"
															},
															"nativeSrc": "8031:176:8",
															"nodeType": "YulIf",
															"src": "8031:176:8"
														},
														{
															"nativeSrc": "8220:30:8",
															"nodeType": "YulAssignment",
															"src": "8220:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:8"
																},
																"nativeSrc": "8234:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:8"
																}
															]
														},
														{
															"nativeSrc": "8263:23:8",
															"nodeType": "YulAssignment",
															"src": "8263:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:8"
																},
																"nativeSrc": "8278:8:8",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1331,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1334,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1325,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1336,
												"nodeType": "InlineAssembly",
												"src": "7875:421:8"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1337,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "8310:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1348,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "8362:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:8",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1342,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1325,
																			"src": "8336:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$967",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$967",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1340,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:8",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1360,
												"nodeType": "IfStatement",
												"src": "8306:146:8",
												"trueBody": {
													"id": 1359,
													"nodeType": "Block",
													"src": "8380:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1355,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1325,
																				"src": "8434:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$967",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$967",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1353,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1352,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "8401:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1358,
															"nodeType": "RevertStatement",
															"src": "8394:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "7767:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1324,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1323,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "7767:6:8"
													},
													"referencedDeclaration": 967,
													"src": "7767:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "7781:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:8"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:8"
									},
									"scope": 1404,
									"src": "7738:720:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "9049:391:8",
										"statements": [
											{
												"assignments": [
													1374
												],
												"declarations": [
													{
														"constant": false,
														"id": 1374,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1402,
														"src": "9059:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1373,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1375,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:8"
											},
											{
												"assignments": [
													1377
												],
												"declarations": [
													{
														"constant": false,
														"id": 1377,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1402,
														"src": "9081:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1376,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1378,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:8"
											},
											{
												"assignments": [
													1380
												],
												"declarations": [
													{
														"constant": false,
														"id": 1380,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1402,
														"src": "9109:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1379,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1381,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:8"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:8",
													"nodeType": "YulBlock",
													"src": "9163:174:8",
													"statements": [
														{
															"nativeSrc": "9177:71:8",
															"nodeType": "YulAssignment",
															"src": "9177:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:8"
																		},
																		"nativeSrc": "9193:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:8"
																		},
																		"nativeSrc": "9210:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:8"
																		},
																		"nativeSrc": "9227:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:8"
																},
																"nativeSrc": "9188:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:8"
																}
															]
														},
														{
															"nativeSrc": "9261:30:8",
															"nodeType": "YulAssignment",
															"src": "9261:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:8"
																},
																"nativeSrc": "9275:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:8"
																}
															]
														},
														{
															"nativeSrc": "9304:23:8",
															"nodeType": "YulAssignment",
															"src": "9304:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:8"
																},
																"nativeSrc": "9319:8:8",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1377,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1380,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1374,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1366,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1382,
												"nodeType": "InlineAssembly",
												"src": "9138:199:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1383,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "9353:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1384,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1377,
																		"src": "9365:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1395,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1380,
																		"src": "9416:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:8",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1389,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1366,
																						"src": "9391:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$967",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$967",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1388,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1387,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1399,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1372,
												"id": 1401,
												"nodeType": "Return",
												"src": "9346:87:8"
											}
										]
									},
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "8993:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1365,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1364,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "8993:6:8"
													},
													"referencedDeclaration": 967,
													"src": "8993:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "9007:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:8"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "9043:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1370,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:8"
									},
									"scope": 1404,
									"src": "8960:480:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1405,
							"src": "750:8692:8",
							"usedErrors": [
								1007,
								1016
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1663
						],
						"Errors": [
							1715
						]
					},
					"id": 1664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1406,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1408,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1664,
							"sourceUnit": 1716,
							"src": "127:36:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1407,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1715,
										"src": "135:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1409,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1663,
							"linearizedBaseContracts": [
								1663
							],
							"name": "Address",
							"nameLocation": "241:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:9",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1414,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "358:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:9"
									},
									"src": "335:39:9"
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "1361:278:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1424,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1663",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1663",
																		"typeString": "library Address"
																	}
																],
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1422,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1427,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "1399:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1441,
												"nodeType": "IfStatement",
												"src": "1371:125:9",
												"trueBody": {
													"id": 1440,
													"nodeType": "Block",
													"src": "1407:89:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1434,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1663",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1663",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1433,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1432,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1437,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "1478:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1429,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1715,
																		"src": "1428:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1715_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1703,
																	"src": "1428:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1439,
															"nodeType": "RevertStatement",
															"src": "1421:64:9"
														}
													]
												}
											},
											{
												"assignments": [
													1443,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1443,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1460,
														"src": "1507:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1442,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1450,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1444,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "1525:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1446,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "1547:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:9"
											},
											{
												"condition": {
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:9",
													"subExpression": {
														"id": 1451,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "1573:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1459,
												"nodeType": "IfStatement",
												"src": "1568:65:9",
												"trueBody": {
													"id": 1458,
													"nodeType": "Block",
													"src": "1582:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1453,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1715,
																		"src": "1603:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1715_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1706,
																	"src": "1603:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1457,
															"nodeType": "RevertStatement",
															"src": "1596:26:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "1309:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "1336:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:9"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:9"
									},
									"scope": 1663,
									"src": "1290:349:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "2573:62:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1472,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "2612:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1473,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "2620:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1471,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "2590:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1470,
												"id": 1476,
												"nodeType": "Return",
												"src": "2583:45:9"
											}
										]
									},
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "2506:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "2522:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:9"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "2559:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:9"
									},
									"scope": 1663,
									"src": "2484:151:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "3072:294:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1492,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1663",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1663",
																		"typeString": "library Address"
																	}
																],
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1490,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1495,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "3110:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1509,
												"nodeType": "IfStatement",
												"src": "3082:123:9",
												"trueBody": {
													"id": 1508,
													"nodeType": "Block",
													"src": "3117:88:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1502,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1663",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1663",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1500,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1505,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "3188:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1497,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1715,
																		"src": "3138:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1715_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1703,
																	"src": "3138:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1507,
															"nodeType": "RevertStatement",
															"src": "3131:63:9"
														}
													]
												}
											},
											{
												"assignments": [
													1511,
													1513
												],
												"declarations": [
													{
														"constant": false,
														"id": 1511,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1527,
														"src": "3215:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1510,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1513,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1527,
														"src": "3229:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1512,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1520,
												"initialValue": {
													"arguments": [
														{
															"id": 1518,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "3282:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1514,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "3256:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1516,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "3275:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1522,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "3331:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1523,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "3339:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1524,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "3348:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1521,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "3304:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1489,
												"id": 1526,
												"nodeType": "Return",
												"src": "3297:62:9"
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "2990:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "3006:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1482,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "3025:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:9"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "3058:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:9"
									},
									"scope": 1663,
									"src": "2959:407:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "3605:154:9",
										"statements": [
											{
												"assignments": [
													1539,
													1541
												],
												"declarations": [
													{
														"constant": false,
														"id": 1539,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "3616:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1538,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1541,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "3630:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1540,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1546,
												"initialValue": {
													"arguments": [
														{
															"id": 1544,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "3675:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1542,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "3657:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:9",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1548,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "3724:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1549,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "3732:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1550,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "3741:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1547,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "3697:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1537,
												"id": 1552,
												"nodeType": "Return",
												"src": "3690:62:9"
											}
										]
									},
									"documentation": {
										"id": 1529,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "3533:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "3549:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1532,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:9"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "3591:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1535,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:9"
									},
									"scope": 1663,
									"src": "3505:254:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "3997:156:9",
										"statements": [
											{
												"assignments": [
													1565,
													1567
												],
												"declarations": [
													{
														"constant": false,
														"id": 1565,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1579,
														"src": "4008:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1564,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1567,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1579,
														"src": "4022:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1566,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1572,
												"initialValue": {
													"arguments": [
														{
															"id": 1570,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "4069:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1568,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "4049:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:9",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1574,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "4118:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1575,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "4126:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1576,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "4135:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1573,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "4091:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1563,
												"id": 1578,
												"nodeType": "Return",
												"src": "4084:62:9"
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "3930:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "3946:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1558,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:9"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "3983:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:9"
									},
									"scope": 1663,
									"src": "3900:253:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "4579:424:9",
										"statements": [
											{
												"condition": {
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:9",
													"subExpression": {
														"id": 1592,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "4594:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1617,
													"nodeType": "Block",
													"src": "4653:344:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1599,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1587,
																			"src": "4841:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1603,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "4867:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1614,
															"nodeType": "IfStatement",
															"src": "4837:119:9",
															"trueBody": {
																"id": 1613,
																"nodeType": "Block",
																"src": "4892:64:9",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1610,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1583,
																					"src": "4934:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1609,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1414,
																				"src": "4917:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1612,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1615,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1587,
																"src": "4976:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1591,
															"id": 1616,
															"nodeType": "Return",
															"src": "4969:17:9"
														}
													]
												},
												"id": 1618,
												"nodeType": "IfStatement",
												"src": "4589:408:9",
												"trueBody": {
													"id": 1598,
													"nodeType": "Block",
													"src": "4603:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1595,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1587,
																		"src": "4625:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1594,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1662,
																	"src": "4617:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1597,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:9",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "4466:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "4490:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1584,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "4512:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:9"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "4565:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:9"
									},
									"scope": 1663,
									"src": "4421:582:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "5307:122:9",
										"statements": [
											{
												"condition": {
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:9",
													"subExpression": {
														"id": 1630,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "5322:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1639,
													"nodeType": "Block",
													"src": "5381:42:9",
													"statements": [
														{
															"expression": {
																"id": 1637,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "5402:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1629,
															"id": 1638,
															"nodeType": "Return",
															"src": "5395:17:9"
														}
													]
												},
												"id": 1640,
												"nodeType": "IfStatement",
												"src": "5317:106:9",
												"trueBody": {
													"id": 1636,
													"nodeType": "Block",
													"src": "5331:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1633,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1625,
																		"src": "5353:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1632,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1662,
																	"src": "5345:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1635,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:9",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "5231:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1622,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "5245:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1624,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:9"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "5293:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:9"
									},
									"scope": 1663,
									"src": "5205:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "5598:432:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1648,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "5674:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1659,
													"nodeType": "Block",
													"src": "5973:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1654,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1715,
																		"src": "5994:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1715_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1706,
																	"src": "5994:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1658,
															"nodeType": "RevertStatement",
															"src": "5987:26:9"
														}
													]
												},
												"id": 1660,
												"nodeType": "IfStatement",
												"src": "5670:354:9",
												"trueBody": {
													"id": 1653,
													"nodeType": "Block",
													"src": "5697:270:9",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:9",
																"nodeType": "YulBlock",
																"src": "5824:133:9",
																"statements": [
																	{
																		"nativeSrc": "5842:40:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:9"
																			},
																			"nativeSrc": "5865:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:9"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:9",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:9",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:9",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:9"
																					},
																					"nativeSrc": "5906:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:9"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:9"
																			},
																			"nativeSrc": "5899:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:9"
																		},
																		"nativeSrc": "5899:44:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:9"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1645,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1645,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:9",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1652,
															"nodeType": "InlineAssembly",
															"src": "5799:158:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:9",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "5560:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1644,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:9"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:9"
									},
									"scope": 1663,
									"src": "5543:487:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1664,
							"src": "233:5799:9",
							"usedErrors": [
								1414
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1693
						]
					},
					"id": 1694,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1666,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1693,
							"linearizedBaseContracts": [
								1693
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1671,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1670,
												"id": 1673,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1693,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1680,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1679,
												"id": 1682,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1677,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1693,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "935:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1688,
												"id": 1690,
												"nodeType": "Return",
												"src": "945:8:10"
											}
										]
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "926:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:10"
									},
									"scope": 1693,
									"src": "863:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1694,
							"src": "624:338:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1715
						]
					},
					"id": 1716,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1695,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1696,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:11",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1715,
							"linearizedBaseContracts": [
								1715
							],
							"name": "Errors",
							"nameLocation": "419:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:11",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1703,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "557:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "574:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:11"
									},
									"src": "531:59:11"
								},
								{
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:11",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1706,
									"name": "FailedCall",
									"nameLocation": "696:10:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:11"
									},
									"src": "690:19:11"
								},
								{
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:11",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1709,
									"name": "FailedDeployment",
									"nameLocation": "772:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:11"
									},
									"src": "766:25:11"
								},
								{
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:11",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1714,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "884:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:11"
									},
									"src": "860:33:11"
								}
							],
							"scope": 1716,
							"src": "411:484:11",
							"usedErrors": [
								1703,
								1706,
								1709,
								1714
							],
							"usedEvents": []
						}
					],
					"src": "100:796:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1727
						]
					},
					"id": 1728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1717,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1718,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:12",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1727,
							"linearizedBaseContracts": [
								1727
							],
							"name": "IERC165",
							"nameLocation": "432:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "818:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1720,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:12"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "861:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:12"
									},
									"scope": 1727,
									"src": "791:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1728,
							"src": "422:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:12"
				},
				"id": 12
			},
			"MasterGrand.sol": {
				"ast": {
					"absolutePath": "MasterGrand.sol",
					"exportedSymbols": {
						"Address": [
							1663
						],
						"Context": [
							1693
						],
						"ERC20": [
							889
						],
						"GrandToken": [
							1742
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							967
						],
						"IERC20Errors": [
							279
						],
						"IERC20Metadata": [
							993
						],
						"MasterGrand": [
							2447
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							1404
						]
					},
					"id": 2448,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1729,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1730,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2448,
							"sourceUnit": 1405,
							"src": "59:65:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1731,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2448,
							"sourceUnit": 890,
							"src": "126:55:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1732,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2448,
							"sourceUnit": 148,
							"src": "182:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1733,
										"name": "IERC20",
										"nameLocations": [
											"260:6:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "260:6:13"
									},
									"id": 1734,
									"nodeType": "InheritanceSpecifier",
									"src": "260:6:13"
								}
							],
							"canonicalName": "GrandToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1742,
							"linearizedBaseContracts": [
								1742,
								967
							],
							"name": "GrandToken",
							"nameLocation": "246:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 1741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "282:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "295:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "287:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "308:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "300:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:30:13"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:0:13"
									},
									"scope": 1742,
									"src": "273:53:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2448,
							"src": "236:92:13",
							"usedErrors": [],
							"usedEvents": [
								901,
								910
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1743,
										"name": "Ownable",
										"nameLocations": [
											"401:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "401:7:13"
									},
									"id": 1744,
									"nodeType": "InheritanceSpecifier",
									"src": "401:7:13"
								}
							],
							"canonicalName": "MasterGrand",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2447,
							"linearizedBaseContracts": [
								2447,
								147,
								1693
							],
							"name": "MasterGrand",
							"nameLocation": "386:11:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1748,
									"libraryName": {
										"id": 1745,
										"name": "SafeERC20",
										"nameLocations": [
											"421:9:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1404,
										"src": "421:9:13"
									},
									"nodeType": "UsingForDirective",
									"src": "415:27:13",
									"typeName": {
										"id": 1747,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1746,
											"name": "IERC20",
											"nameLocations": [
												"435:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 967,
											"src": "435:6:13"
										},
										"referencedDeclaration": 967,
										"src": "435:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$967",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 1752,
									"libraryName": {
										"id": 1749,
										"name": "SafeERC20",
										"nameLocations": [
											"453:9:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1404,
										"src": "453:9:13"
									},
									"nodeType": "UsingForDirective",
									"src": "447:31:13",
									"typeName": {
										"id": 1751,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1750,
											"name": "GrandToken",
											"nameLocations": [
												"467:10:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1742,
											"src": "467:10:13"
										},
										"referencedDeclaration": 1742,
										"src": "467:10:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_GrandToken_$1742",
											"typeString": "contract GrandToken"
										}
									}
								},
								{
									"canonicalName": "MasterGrand.UserInfo",
									"id": 1757,
									"members": [
										{
											"constant": false,
											"id": 1754,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "544:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1757,
											"src": "536:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1753,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "536:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1756,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "613:10:13",
											"nodeType": "VariableDeclaration",
											"scope": 1757,
											"src": "605:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1755,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "605:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "517:8:13",
									"nodeType": "StructDefinition",
									"scope": 2447,
									"src": "510:159:13",
									"visibility": "public"
								},
								{
									"canonicalName": "MasterGrand.PoolInfo",
									"id": 1767,
									"members": [
										{
											"constant": false,
											"id": 1760,
											"mutability": "mutable",
											"name": "lpToken",
											"nameLocation": "734:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1767,
											"src": "727:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$967",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 1759,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1758,
													"name": "IERC20",
													"nameLocations": [
														"727:6:13"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 967,
													"src": "727:6:13"
												},
												"referencedDeclaration": 967,
												"src": "727:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1762,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "792:10:13",
											"nodeType": "VariableDeclaration",
											"scope": 1767,
											"src": "784:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1761,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "784:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1764,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nameLocation": "904:15:13",
											"nodeType": "VariableDeclaration",
											"scope": 1767,
											"src": "896:23:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1763,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "896:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1766,
											"mutability": "mutable",
											"name": "accGrandPerShare",
											"nameLocation": "990:16:13",
											"nodeType": "VariableDeclaration",
											"scope": 1767,
											"src": "982:24:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1765,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "982:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "708:8:13",
									"nodeType": "StructDefinition",
									"scope": 2447,
									"src": "701:367:13",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d129459b",
									"id": 1770,
									"mutability": "mutable",
									"name": "Grand",
									"nameLocation": "1116:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 2447,
									"src": "1098:23:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_GrandToken_$1742",
										"typeString": "contract GrandToken"
									},
									"typeName": {
										"id": 1769,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1768,
											"name": "GrandToken",
											"nameLocations": [
												"1098:10:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1742,
											"src": "1098:10:13"
										},
										"referencedDeclaration": 1742,
										"src": "1098:10:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_GrandToken_$1742",
											"typeString": "contract GrandToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "913e77ad",
									"id": 1772,
									"mutability": "mutable",
									"name": "collector",
									"nameLocation": "1143:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 2447,
									"src": "1128:24:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1771,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1aed6553",
									"id": 1774,
									"mutability": "mutable",
									"name": "bonusEndBlock",
									"nameLocation": "1223:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2447,
									"src": "1208:28:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1773,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1208:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "212f14cc",
									"id": 1776,
									"mutability": "mutable",
									"name": "GrandPerBlock",
									"nameLocation": "1296:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2447,
									"src": "1281:28:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1775,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1281:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8aa28550",
									"id": 1779,
									"mutability": "constant",
									"name": "BONUS_MULTIPLIER",
									"nameLocation": "1386:16:13",
									"nodeType": "VariableDeclaration",
									"scope": 2447,
									"src": "1362:44:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1777,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1362:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 1778,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1405:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b9926557",
									"id": 1782,
									"mutability": "constant",
									"name": "GRAND_CAP",
									"nameLocation": "1436:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 2447,
									"src": "1412:61:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1780,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1412:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34323033333333333333333333333333333333333333333333",
										"id": 1781,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1448:25:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4203333333333333333333333_by_1",
											"typeString": "int_const 4203333333333333333333333"
										},
										"value": "4203333333333333333333333"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "83e27185",
									"id": 1784,
									"mutability": "mutable",
									"name": "grandMinted",
									"nameLocation": "1494:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2447,
									"src": "1479:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1783,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1479:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "57e78adc",
									"id": 1787,
									"mutability": "mutable",
									"name": "totalBoxes",
									"nameLocation": "1526:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2447,
									"src": "1511:29:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1785,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1511:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1786,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1539:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1791,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "1591:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 2447,
									"src": "1573:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1767_storage_$dyn_storage",
										"typeString": "struct MasterGrand.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 1789,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1788,
												"name": "PoolInfo",
												"nameLocations": [
													"1573:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1767,
												"src": "1573:8:13"
											},
											"referencedDeclaration": 1767,
											"src": "1573:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
												"typeString": "struct MasterGrand.PoolInfo"
											}
										},
										"id": 1790,
										"nodeType": "ArrayTypeName",
										"src": "1573:10:13",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1767_storage_$dyn_storage_ptr",
											"typeString": "struct MasterGrand.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1798,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "1739:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 2447,
									"src": "1683:64:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1757_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct MasterGrand.UserInfo))"
									},
									"typeName": {
										"id": 1797,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1792,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1691:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1683:48:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1757_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct MasterGrand.UserInfo))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1796,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1793,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1710:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1702:28:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1757_storage_$",
												"typeString": "mapping(address => struct MasterGrand.UserInfo)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1795,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1794,
													"name": "UserInfo",
													"nameLocations": [
														"1721:8:13"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1757,
													"src": "1721:8:13"
												},
												"referencedDeclaration": 1757,
												"src": "1721:8:13",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
													"typeString": "struct MasterGrand.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1801,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "1855:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 2447,
									"src": "1840:34:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1799,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1840:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1800,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1873:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 1803,
									"mutability": "mutable",
									"name": "startBlock",
									"nameLocation": "1945:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2447,
									"src": "1930:25:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1802,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1930:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 1805,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "1976:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 2447,
									"src": "1961:24:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1804,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1961:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "dcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7",
									"id": 1815,
									"name": "Deposit",
									"nameLocation": "1998:7:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2022:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "2006:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2006:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"indexed": true,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "2044:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "2028:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2071:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "2055:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2084:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "2076:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2076:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2005:86:13"
									},
									"src": "1992:100:13"
								},
								{
									"anonymous": false,
									"eventSelector": "f341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567",
									"id": 1825,
									"name": "Withdraw",
									"nameLocation": "2103:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2128:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "2112:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2112:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"indexed": true,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "2150:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "2134:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2134:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2177:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "2161:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2190:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "2182:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:86:13"
									},
									"src": "2097:101:13"
								},
								{
									"anonymous": false,
									"eventSelector": "bb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595",
									"id": 1833,
									"name": "EmergencyWithdraw",
									"nameLocation": "2209:17:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2252:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "2236:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2282:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "2266:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2303:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "2295:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2226:89:13"
									},
									"src": "2203:113:13"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "2451:183:13",
										"statements": [
											{
												"expression": {
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1847,
														"name": "Grand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "2461:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GrandToken_$1742",
															"typeString": "contract GrandToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1848,
														"name": "_Grand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1836,
														"src": "2469:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GrandToken_$1742",
															"typeString": "contract GrandToken"
														}
													},
													"src": "2461:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GrandToken_$1742",
														"typeString": "contract GrandToken"
													}
												},
												"id": 1850,
												"nodeType": "ExpressionStatement",
												"src": "2461:14:13"
											},
											{
												"expression": {
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1851,
														"name": "GrandPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1776,
														"src": "2485:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1852,
														"name": "_GrandPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "2501:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2485:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1854,
												"nodeType": "ExpressionStatement",
												"src": "2485:30:13"
											},
											{
												"expression": {
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1855,
														"name": "bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1774,
														"src": "2525:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1856,
														"name": "_bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "2541:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2525:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1858,
												"nodeType": "ExpressionStatement",
												"src": "2525:30:13"
											},
											{
												"expression": {
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1859,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "2565:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1860,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2578:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2584:6:13",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2578:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2565:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1863,
												"nodeType": "ExpressionStatement",
												"src": "2565:25:13"
											},
											{
												"expression": {
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1864,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "2600:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1865,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2612:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2618:9:13",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2612:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2600:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "2600:27:13"
											}
										]
									},
									"id": 1870,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1843,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2439:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2443:6:13",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2439:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1845,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1842,
												"name": "Ownable",
												"nameLocations": [
													"2431:7:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2431:7:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2431:19:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "_Grand",
												"nameLocation": "2354:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "2343:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_GrandToken_$1742",
													"typeString": "contract GrandToken"
												},
												"typeName": {
													"id": 1835,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1834,
														"name": "GrandToken",
														"nameLocations": [
															"2343:10:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1742,
														"src": "2343:10:13"
													},
													"referencedDeclaration": 1742,
													"src": "2343:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GrandToken_$1742",
														"typeString": "contract GrandToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "_GrandPerBlock",
												"nameLocation": "2378:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "2370:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "_bonusEndBlock",
												"nameLocation": "2410:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "2402:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2333:97:13"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2451:0:13"
									},
									"scope": 2447,
									"src": "2322:312:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1878,
										"nodeType": "Block",
										"src": "2694:39:13",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1875,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "2711:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1767_storage_$dyn_storage",
															"typeString": "struct MasterGrand.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2720:6:13",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2711:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1874,
												"id": 1877,
												"nodeType": "Return",
												"src": "2704:22:13"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 1879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "2649:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2659:2:13"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "2685:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:9:13"
									},
									"scope": 2447,
									"src": "2640:93:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "3016:364:13",
										"statements": [
											{
												"condition": {
													"id": 1891,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1886,
													"src": "3030:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1896,
												"nodeType": "IfStatement",
												"src": "3026:59:13",
												"trueBody": {
													"id": 1895,
													"nodeType": "Block",
													"src": "3043:42:13",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1892,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2021,
																	"src": "3057:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3057:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1894,
															"nodeType": "ExpressionStatement",
															"src": "3057:17:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1897,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "3095:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1898,
															"name": "totalAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "3113:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1899,
															"name": "_allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "3131:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3113:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3095:47:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1902,
												"nodeType": "ExpressionStatement",
												"src": "3095:47:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1907,
																	"name": "_lpToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1884,
																	"src": "3215:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1908,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1881,
																	"src": "3253:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1909,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3299:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3305:6:13",
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "3299:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3347:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1906,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "3179:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1767_storage_ptr_$",
																	"typeString": "type(struct MasterGrand.PoolInfo storage pointer)"
																}
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"3206:7:13",
																"3241:10:13",
																"3282:15:13",
																"3329:16:13"
															],
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardBlock",
																"accGrandPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "3179:184:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1767_memory_ptr",
																"typeString": "struct MasterGrand.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1767_memory_ptr",
																"typeString": "struct MasterGrand.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1903,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "3152:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1767_storage_$dyn_storage",
																"typeString": "struct MasterGrand.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3161:4:13",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3152:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$1767_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$1767_storage_$returns$__$attached_to$_t_array$_t_struct$_PoolInfo_$1767_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct MasterGrand.PoolInfo storage ref[] storage pointer,struct MasterGrand.PoolInfo storage ref)"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3152:221:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "3152:221:13"
											}
										]
									},
									"functionSelector": "7abceffd",
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1889,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1888,
												"name": "onlyOwner",
												"nameLocations": [
													"3006:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3006:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3006:9:13"
										}
									],
									"name": "addPool",
									"nameLocation": "2903:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "2928:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "2920:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2920:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "_lpToken",
												"nameLocation": "2956:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "2949:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1883,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1882,
														"name": "IERC20",
														"nameLocations": [
															"2949:6:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "2949:6:13"
													},
													"referencedDeclaration": 967,
													"src": "2949:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "2979:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "2974:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1885,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2974:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2910:86:13"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3016:0:13"
									},
									"scope": 2447,
									"src": "2894:486:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "3593:245:13",
										"statements": [
											{
												"condition": {
													"id": 1927,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1922,
													"src": "3607:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1932,
												"nodeType": "IfStatement",
												"src": "3603:59:13",
												"trueBody": {
													"id": 1931,
													"nodeType": "Block",
													"src": "3620:42:13",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1928,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2021,
																	"src": "3634:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3634:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1930,
															"nodeType": "ExpressionStatement",
															"src": "3634:17:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1933,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "3671:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1934,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "3701:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1935,
																		"name": "poolInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1791,
																		"src": "3731:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1767_storage_$dyn_storage",
																			"typeString": "struct MasterGrand.PoolInfo storage ref[] storage ref"
																		}
																	},
																	"id": 1937,
																	"indexExpression": {
																		"id": 1936,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1918,
																		"src": "3740:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3731:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1767_storage",
																		"typeString": "struct MasterGrand.PoolInfo storage ref"
																	}
																},
																"id": 1938,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3746:10:13",
																"memberName": "allocPoint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1762,
																"src": "3731:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3701:55:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1940,
															"name": "_allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "3771:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3701:81:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3671:111:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1943,
												"nodeType": "ExpressionStatement",
												"src": "3671:111:13"
											},
											{
												"expression": {
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1944,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "3792:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1767_storage_$dyn_storage",
																	"typeString": "struct MasterGrand.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1946,
															"indexExpression": {
																"id": 1945,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "3801:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3792:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1767_storage",
																"typeString": "struct MasterGrand.PoolInfo storage ref"
															}
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3807:10:13",
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1762,
														"src": "3792:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1948,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1920,
														"src": "3820:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3792:39:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1950,
												"nodeType": "ExpressionStatement",
												"src": "3792:39:13"
											}
										]
									},
									"functionSelector": "46ca6bea",
									"id": 1952,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1925,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1924,
												"name": "onlyOwner",
												"nameLocations": [
													"3583:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3583:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3583:9:13"
										}
									],
									"name": "setPool",
									"nameLocation": "3483:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "3508:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "3500:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3500:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "3530:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "3522:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3522:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "3556:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "3551:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3551:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:83:13"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3593:0:13"
									},
									"scope": 2447,
									"src": "3474:364:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "4020:335:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1961,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1956,
														"src": "4034:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1962,
														"name": "bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1774,
														"src": "4041:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4034:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1972,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1954,
															"src": "4130:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 1973,
															"name": "bonusEndBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "4139:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4130:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1992,
														"nodeType": "Block",
														"src": "4203:146:13",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1982,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1980,
																						"name": "bonusEndBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1774,
																						"src": "4241:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1981,
																						"name": "_from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1954,
																						"src": "4257:5:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4241:21:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1983,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4240:23:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1984,
																			"name": "BONUS_MULTIPLIER",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1779,
																			"src": "4282:16:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4240:58:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1988,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1986,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1956,
																					"src": "4318:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1987,
																					"name": "bonusEndBlock",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1774,
																					"src": "4324:13:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4318:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1989,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4317:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4240:98:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1960,
																"id": 1991,
																"nodeType": "Return",
																"src": "4217:121:13"
															}
														]
													},
													"id": 1993,
													"nodeType": "IfStatement",
													"src": "4126:223:13",
													"trueBody": {
														"id": 1979,
														"nodeType": "Block",
														"src": "4154:43:13",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1975,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1956,
																		"src": "4175:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1976,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1954,
																		"src": "4181:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4175:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1960,
																"id": 1978,
																"nodeType": "Return",
																"src": "4168:18:13"
															}
														]
													}
												},
												"id": 1994,
												"nodeType": "IfStatement",
												"src": "4030:319:13",
												"trueBody": {
													"id": 1971,
													"nodeType": "Block",
													"src": "4056:64:13",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1964,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1956,
																				"src": "4078:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1965,
																				"name": "_from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1954,
																				"src": "4084:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4078:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1967,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4077:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1968,
																	"name": "BONUS_MULTIPLIER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "4093:16:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4077:32:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1960,
															"id": 1970,
															"nodeType": "Return",
															"src": "4070:39:13"
														}
													]
												}
											}
										]
									},
									"functionSelector": "8dbb1e3a",
									"id": 1996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "3920:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3942:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "3934:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3934:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3957:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "3949:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3949:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3933:28:13"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "4007:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:9:13"
									},
									"scope": 2447,
									"src": "3911:444:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2020,
										"nodeType": "Block",
										"src": "4469:141:13",
										"statements": [
											{
												"assignments": [
													2000
												],
												"declarations": [
													{
														"constant": false,
														"id": 2000,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "4487:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2020,
														"src": "4479:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1999,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4479:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2003,
												"initialValue": {
													"expression": {
														"id": 2001,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "4496:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1767_storage_$dyn_storage",
															"typeString": "struct MasterGrand.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4505:6:13",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4496:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4479:32:13"
											},
											{
												"body": {
													"id": 2018,
													"nodeType": "Block",
													"src": "4564:40:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2015,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2005,
																		"src": "4589:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2014,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2126,
																	"src": "4578:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4578:15:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2017,
															"nodeType": "ExpressionStatement",
															"src": "4578:15:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2008,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "4543:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2009,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2000,
														"src": "4549:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4543:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2019,
												"initializationExpression": {
													"assignments": [
														2005
													],
													"declarations": [
														{
															"constant": false,
															"id": 2005,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "4534:3:13",
															"nodeType": "VariableDeclaration",
															"scope": 2019,
															"src": "4526:11:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2004,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4526:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2007,
													"initialValue": {
														"hexValue": "30",
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4540:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4526:15:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4557:5:13",
														"subExpression": {
															"id": 2011,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "4559:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2013,
													"nodeType": "ExpressionStatement",
													"src": "4557:5:13"
												},
												"nodeType": "ForStatement",
												"src": "4521:83:13"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 2021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "4444:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:2:13"
									},
									"returnParameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4469:0:13"
									},
									"scope": 2447,
									"src": "4435:175:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2125,
										"nodeType": "Block",
										"src": "4724:823:13",
										"statements": [
											{
												"assignments": [
													2028
												],
												"declarations": [
													{
														"constant": false,
														"id": 2028,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4751:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2125,
														"src": "4734:21:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
															"typeString": "struct MasterGrand.PoolInfo"
														},
														"typeName": {
															"id": 2027,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2026,
																"name": "PoolInfo",
																"nameLocations": [
																	"4734:8:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1767,
																"src": "4734:8:13"
															},
															"referencedDeclaration": 1767,
															"src": "4734:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																"typeString": "struct MasterGrand.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2032,
												"initialValue": {
													"baseExpression": {
														"id": 2029,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "4758:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1767_storage_$dyn_storage",
															"typeString": "struct MasterGrand.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2031,
													"indexExpression": {
														"id": 2030,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2023,
														"src": "4767:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4758:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1767_storage",
														"typeString": "struct MasterGrand.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4734:38:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2033,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4786:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4792:6:13",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "4786:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 2035,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "4802:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																"typeString": "struct MasterGrand.PoolInfo storage pointer"
															}
														},
														"id": 2036,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4807:15:13",
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1764,
														"src": "4802:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4786:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2040,
												"nodeType": "IfStatement",
												"src": "4782:73:13",
												"trueBody": {
													"id": 2039,
													"nodeType": "Block",
													"src": "4824:31:13",
													"statements": [
														{
															"functionReturnParameters": 2025,
															"id": 2038,
															"nodeType": "Return",
															"src": "4838:7:13"
														}
													]
												}
											},
											{
												"assignments": [
													2042
												],
												"declarations": [
													{
														"constant": false,
														"id": 2042,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "4873:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 2125,
														"src": "4865:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2041,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4865:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2051,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2048,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4915:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MasterGrand_$2447",
																		"typeString": "contract MasterGrand"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MasterGrand_$2447",
																		"typeString": "contract MasterGrand"
																	}
																],
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4907:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2046,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4907:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4907:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 2043,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2028,
																"src": "4884:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																	"typeString": "struct MasterGrand.PoolInfo storage pointer"
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4889:7:13",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1760,
															"src": "4884:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4897:9:13",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 924,
														"src": "4884:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4884:37:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4865:56:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2052,
														"name": "lpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2042,
														"src": "4935:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2053,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4947:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4935:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2064,
												"nodeType": "IfStatement",
												"src": "4931:99:13",
												"trueBody": {
													"id": 2063,
													"nodeType": "Block",
													"src": "4950:80:13",
													"statements": [
														{
															"expression": {
																"id": 2060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2055,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2028,
																		"src": "4964:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																			"typeString": "struct MasterGrand.PoolInfo storage pointer"
																		}
																	},
																	"id": 2057,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4969:15:13",
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1764,
																	"src": "4964:20:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2058,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4987:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4993:6:13",
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "4987:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4964:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2061,
															"nodeType": "ExpressionStatement",
															"src": "4964:35:13"
														},
														{
															"functionReturnParameters": 2025,
															"id": 2062,
															"nodeType": "Return",
															"src": "5013:7:13"
														}
													]
												}
											},
											{
												"assignments": [
													2066
												],
												"declarations": [
													{
														"constant": false,
														"id": 2066,
														"mutability": "mutable",
														"name": "GrandReward",
														"nameLocation": "5048:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 2125,
														"src": "5040:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2065,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5040:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2081,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2068,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2028,
																					"src": "5090:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																						"typeString": "struct MasterGrand.PoolInfo storage pointer"
																					}
																				},
																				"id": 2069,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5095:15:13",
																				"memberName": "lastRewardBlock",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1764,
																				"src": "5090:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 2070,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "5124:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 2071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5130:6:13",
																				"memberName": "number",
																				"nodeType": "MemberAccess",
																				"src": "5124:12:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2067,
																			"name": "getMultiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1996,
																			"src": "5063:13:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) view returns (uint256)"
																			}
																		},
																		"id": 2072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5063:83:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2073,
																		"name": "GrandPerBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1776,
																		"src": "5161:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5063:111:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"id": 2075,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2028,
																		"src": "5189:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																			"typeString": "struct MasterGrand.PoolInfo storage pointer"
																		}
																	},
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5194:10:13",
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1762,
																	"src": "5189:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5063:141:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2078,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5062:143:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2079,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "5208:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5062:161:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5040:183:13"
											},
											{
												"expression": {
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2082,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "5234:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																"typeString": "struct MasterGrand.PoolInfo storage pointer"
															}
														},
														"id": 2084,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5239:16:13",
														"memberName": "accGrandPerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1766,
														"src": "5234:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2085,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2028,
																"src": "5270:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																	"typeString": "struct MasterGrand.PoolInfo storage pointer"
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5275:16:13",
															"memberName": "accGrandPerShare",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1766,
															"src": "5270:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2087,
																					"name": "GrandReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2066,
																					"src": "5308:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "31653132",
																					"id": 2088,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5322:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000_by_1",
																						"typeString": "int_const 1000000000000"
																					},
																					"value": "1e12"
																				},
																				"src": "5308:18:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2090,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5307:20:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2091,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2042,
																		"src": "5330:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5307:31:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2093,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5306:33:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5270:69:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5234:105:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "5234:105:13"
											},
											{
												"expression": {
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2097,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "5349:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																"typeString": "struct MasterGrand.PoolInfo storage pointer"
															}
														},
														"id": 2099,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5354:15:13",
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1764,
														"src": "5349:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2100,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5372:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5378:6:13",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "5372:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5349:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2103,
												"nodeType": "ExpressionStatement",
												"src": "5349:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2104,
														"name": "grandMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "5399:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2105,
														"name": "GRAND_CAP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "5414:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5399:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2124,
												"nodeType": "IfStatement",
												"src": "5395:146:13",
												"trueBody": {
													"id": 2123,
													"nodeType": "Block",
													"src": "5425:116:13",
													"statements": [
														{
															"expression": {
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2107,
																	"name": "grandMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "5439:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2108,
																		"name": "grandMinted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1784,
																		"src": "5453:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2109,
																		"name": "GrandReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2066,
																		"src": "5467:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5453:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5439:39:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2112,
															"nodeType": "ExpressionStatement",
															"src": "5439:39:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2118,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5511:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MasterGrand_$2447",
																					"typeString": "contract MasterGrand"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MasterGrand_$2447",
																					"typeString": "contract MasterGrand"
																				}
																			],
																			"id": 2117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5503:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2116,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5503:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5503:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2120,
																		"name": "GrandReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2066,
																		"src": "5518:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2113,
																		"name": "Grand",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1770,
																		"src": "5492:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_GrandToken_$1742",
																			"typeString": "contract GrandToken"
																		}
																	},
																	"id": 2115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5498:4:13",
																	"memberName": "mint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1741,
																	"src": "5492:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 2121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5492:38:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2122,
															"nodeType": "ExpressionStatement",
															"src": "5492:38:13"
														}
													]
												}
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 2126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "4692:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "4711:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "4703:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4703:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4702:14:13"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4724:0:13"
									},
									"scope": 2447,
									"src": "4683:864:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2269,
										"nodeType": "Block",
										"src": "5672:954:13",
										"statements": [
											{
												"assignments": [
													2135
												],
												"declarations": [
													{
														"constant": false,
														"id": 2135,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5699:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2269,
														"src": "5682:21:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
															"typeString": "struct MasterGrand.PoolInfo"
														},
														"typeName": {
															"id": 2134,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2133,
																"name": "PoolInfo",
																"nameLocations": [
																	"5682:8:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1767,
																"src": "5682:8:13"
															},
															"referencedDeclaration": 1767,
															"src": "5682:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																"typeString": "struct MasterGrand.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2139,
												"initialValue": {
													"baseExpression": {
														"id": 2136,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "5706:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1767_storage_$dyn_storage",
															"typeString": "struct MasterGrand.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2138,
													"indexExpression": {
														"id": 2137,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "5715:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5706:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1767_storage",
														"typeString": "struct MasterGrand.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5682:38:13"
											},
											{
												"assignments": [
													2142
												],
												"declarations": [
													{
														"constant": false,
														"id": 2142,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "5747:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2269,
														"src": "5730:21:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
															"typeString": "struct MasterGrand.UserInfo"
														},
														"typeName": {
															"id": 2141,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2140,
																"name": "UserInfo",
																"nameLocations": [
																	"5730:8:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1757,
																"src": "5730:8:13"
															},
															"referencedDeclaration": 1757,
															"src": "5730:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																"typeString": "struct MasterGrand.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2149,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2143,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "5754:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1757_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct MasterGrand.UserInfo storage ref))"
															}
														},
														"id": 2145,
														"indexExpression": {
															"id": 2144,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "5763:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5754:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1757_storage_$",
															"typeString": "mapping(address => struct MasterGrand.UserInfo storage ref)"
														}
													},
													"id": 2148,
													"indexExpression": {
														"expression": {
															"id": 2146,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5769:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5773:6:13",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5769:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5754:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1757_storage",
														"typeString": "struct MasterGrand.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5730:50:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2151,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2130,
																"src": "5812:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2155,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5846:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5850:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5846:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2159,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5866:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MasterGrand_$2447",
																					"typeString": "contract MasterGrand"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MasterGrand_$2447",
																					"typeString": "contract MasterGrand"
																				}
																			],
																			"id": 2158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5858:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2157,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5858:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5858:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2152,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2135,
																			"src": "5823:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																				"typeString": "struct MasterGrand.PoolInfo storage pointer"
																			}
																		},
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5828:7:13",
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1760,
																		"src": "5823:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5836:9:13",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "5823:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5823:49:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:60:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c6f77616e6365206e6f74206869676820656e6f756768",
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5886:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25e66a24e97bfb0eb0e79a0138ac0364f38b3452aeb9bfd71dfcf6bc01fec525",
																"typeString": "literal_string \"Allowance not high enough\""
															},
															"value": "Allowance not high enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25e66a24e97bfb0eb0e79a0138ac0364f38b3452aeb9bfd71dfcf6bc01fec525",
																"typeString": "literal_string \"Allowance not high enough\""
															}
														],
														"id": 2150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5791:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5791:132:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2165,
												"nodeType": "ExpressionStatement",
												"src": "5791:132:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2171,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5963:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5967:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5963:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2175,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5983:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MasterGrand_$2447",
																		"typeString": "contract MasterGrand"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MasterGrand_$2447",
																		"typeString": "contract MasterGrand"
																	}
																],
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5975:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2173,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5975:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5975:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2177,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "5990:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2166,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "5933:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																	"typeString": "struct MasterGrand.PoolInfo storage pointer"
																}
															},
															"id": 2169,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5938:7:13",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1760,
															"src": "5933:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														"id": 2170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5946:16:13",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1067,
														"src": "5933:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5933:65:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2179,
												"nodeType": "ExpressionStatement",
												"src": "5933:65:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2181,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "6020:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2180,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2126,
														"src": "6009:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6009:16:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2183,
												"nodeType": "ExpressionStatement",
												"src": "6009:16:13"
											},
											{
												"assignments": [
													2185
												],
												"declarations": [
													{
														"constant": false,
														"id": 2185,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "6044:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2269,
														"src": "6036:15:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2184,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6036:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2197,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2186,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2142,
																			"src": "6055:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																				"typeString": "struct MasterGrand.UserInfo storage pointer"
																			}
																		},
																		"id": 2187,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6060:6:13",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1754,
																		"src": "6055:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 2188,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2135,
																			"src": "6069:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																				"typeString": "struct MasterGrand.PoolInfo storage pointer"
																			}
																		},
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6074:16:13",
																		"memberName": "accGrandPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1766,
																		"src": "6069:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6055:35:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2191,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6054:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653132",
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6106:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1e12"
														},
														"src": "6054:56:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 2194,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "6125:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																"typeString": "struct MasterGrand.UserInfo storage pointer"
															}
														},
														"id": 2195,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6130:10:13",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1756,
														"src": "6125:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6054:86:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6036:104:13"
											},
											{
												"expression": {
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2198,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "6150:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																"typeString": "struct MasterGrand.UserInfo storage pointer"
															}
														},
														"id": 2200,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6155:6:13",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1754,
														"src": "6150:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2201,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "6164:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																	"typeString": "struct MasterGrand.UserInfo storage pointer"
																}
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6169:6:13",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1754,
															"src": "6164:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2203,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "6178:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6164:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6150:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2206,
												"nodeType": "ExpressionStatement",
												"src": "6150:35:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2207,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6200:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6206:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6200:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2209,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1805,
																		"src": "6219:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3430",
																		"id": 2210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6231:7:13",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3456000_by_1",
																			"typeString": "int_const 3456000"
																		},
																		"value": "40"
																	},
																	"src": "6219:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2212,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6218:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6200:39:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2214,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "6243:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6253:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6243:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6200:54:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2255,
													"nodeType": "Block",
													"src": "6402:145:13",
													"statements": [
														{
															"expression": {
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2240,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "6416:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																			"typeString": "struct MasterGrand.UserInfo storage pointer"
																		}
																	},
																	"id": 2242,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6421:10:13",
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1756,
																	"src": "6416:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2247,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2243,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2142,
																							"src": "6451:4:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																								"typeString": "struct MasterGrand.UserInfo storage pointer"
																							}
																						},
																						"id": 2244,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6456:6:13",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1754,
																						"src": "6451:11:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"expression": {
																							"id": 2245,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2135,
																							"src": "6465:4:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																								"typeString": "struct MasterGrand.PoolInfo storage pointer"
																							}
																						},
																						"id": 2246,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6470:16:13",
																						"memberName": "accGrandPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1766,
																						"src": "6465:21:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6451:35:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2248,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6450:37:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31653132",
																			"id": 2249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6506:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			},
																			"value": "1e12"
																		},
																		"src": "6450:60:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2251,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2185,
																		"src": "6529:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6450:86:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6416:120:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2254,
															"nodeType": "ExpressionStatement",
															"src": "6416:120:13"
														}
													]
												},
												"id": 2256,
												"nodeType": "IfStatement",
												"src": "6196:351:13",
												"trueBody": {
													"id": 2239,
													"nodeType": "Block",
													"src": "6256:140:13",
													"statements": [
														{
															"expression": {
																"id": 2229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2218,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "6270:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																			"typeString": "struct MasterGrand.UserInfo storage pointer"
																		}
																	},
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6275:10:13",
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1756,
																	"src": "6270:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 2221,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2142,
																						"src": "6289:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																							"typeString": "struct MasterGrand.UserInfo storage pointer"
																						}
																					},
																					"id": 2222,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6294:6:13",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1754,
																					"src": "6289:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"expression": {
																						"id": 2223,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2135,
																						"src": "6303:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																							"typeString": "struct MasterGrand.PoolInfo storage pointer"
																						}
																					},
																					"id": 2224,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6308:16:13",
																					"memberName": "accGrandPerShare",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1766,
																					"src": "6303:21:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6289:35:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2226,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6288:37:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31653132",
																		"id": 2227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6328:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000_by_1",
																			"typeString": "int_const 1000000000000"
																		},
																		"value": "1e12"
																	},
																	"src": "6288:44:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6270:62:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2230,
															"nodeType": "ExpressionStatement",
															"src": "6270:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2234,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6365:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6369:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6365:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2236,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2185,
																		"src": "6377:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2231,
																		"name": "Grand",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1770,
																		"src": "6346:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_GrandToken_$1742",
																			"typeString": "contract GrandToken"
																		}
																	},
																	"id": 2233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6352:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1040,
																	"src": "6346:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:39:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2238,
															"nodeType": "ExpressionStatement",
															"src": "6346:39:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2258,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6570:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6574:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6570:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2262,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "6590:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																			"typeString": "struct MasterGrand.PoolInfo storage pointer"
																		}
																	},
																	"id": 2263,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6595:7:13",
																	"memberName": "lpToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1760,
																	"src": "6590:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6582:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2260,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6582:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6582:21:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2265,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "6605:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2266,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "6611:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2257,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "6562:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6562:57:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2268,
												"nodeType": "EmitStatement",
												"src": "6557:62:13"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 2270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "5624:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "5640:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "5632:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5654:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "5646:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5646:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5631:31:13"
									},
									"returnParameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5672:0:13"
									},
									"scope": 2447,
									"src": "5615:1011:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2383,
										"nodeType": "Block",
										"src": "6734:691:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2278,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6752:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6758:9:13",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6752:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2280,
																			"name": "startTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1805,
																			"src": "6771:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "3430",
																			"id": 2281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6783:7:13",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3456000_by_1",
																				"typeString": "int_const 3456000"
																			},
																			"value": "40"
																		},
																		"src": "6771:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6770:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6752:39:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6f206561726c79",
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6793:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1",
																"typeString": "literal_string \"Too early\""
															},
															"value": "Too early"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1",
																"typeString": "literal_string \"Too early\""
															}
														],
														"id": 2277,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6744:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6744:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2287,
												"nodeType": "ExpressionStatement",
												"src": "6744:61:13"
											},
											{
												"assignments": [
													2290
												],
												"declarations": [
													{
														"constant": false,
														"id": 2290,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "6833:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2383,
														"src": "6816:21:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
															"typeString": "struct MasterGrand.PoolInfo"
														},
														"typeName": {
															"id": 2289,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2288,
																"name": "PoolInfo",
																"nameLocations": [
																	"6816:8:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1767,
																"src": "6816:8:13"
															},
															"referencedDeclaration": 1767,
															"src": "6816:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																"typeString": "struct MasterGrand.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2294,
												"initialValue": {
													"baseExpression": {
														"id": 2291,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "6840:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1767_storage_$dyn_storage",
															"typeString": "struct MasterGrand.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2293,
													"indexExpression": {
														"id": 2292,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2272,
														"src": "6849:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6840:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1767_storage",
														"typeString": "struct MasterGrand.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6816:38:13"
											},
											{
												"assignments": [
													2297
												],
												"declarations": [
													{
														"constant": false,
														"id": 2297,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "6881:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2383,
														"src": "6864:21:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
															"typeString": "struct MasterGrand.UserInfo"
														},
														"typeName": {
															"id": 2296,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2295,
																"name": "UserInfo",
																"nameLocations": [
																	"6864:8:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1757,
																"src": "6864:8:13"
															},
															"referencedDeclaration": 1757,
															"src": "6864:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																"typeString": "struct MasterGrand.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2304,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2298,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "6888:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1757_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct MasterGrand.UserInfo storage ref))"
															}
														},
														"id": 2300,
														"indexExpression": {
															"id": 2299,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "6897:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6888:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1757_storage_$",
															"typeString": "mapping(address => struct MasterGrand.UserInfo storage ref)"
														}
													},
													"id": 2303,
													"indexExpression": {
														"expression": {
															"id": 2301,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6903:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6907:6:13",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6903:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6888:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1757_storage",
														"typeString": "struct MasterGrand.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6864:50:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2306,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2297,
																	"src": "6933:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																		"typeString": "struct MasterGrand.UserInfo storage pointer"
																	}
																},
																"id": 2307,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6938:6:13",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1754,
																"src": "6933:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2308,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2274,
																"src": "6948:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6933:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6957:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 2305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6925:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6925:53:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2312,
												"nodeType": "ExpressionStatement",
												"src": "6925:53:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2314,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "7000:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2313,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2126,
														"src": "6989:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6989:16:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2316,
												"nodeType": "ExpressionStatement",
												"src": "6989:16:13"
											},
											{
												"assignments": [
													2318
												],
												"declarations": [
													{
														"constant": false,
														"id": 2318,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "7024:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2383,
														"src": "7016:15:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2317,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7016:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2330,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2319,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2297,
																			"src": "7035:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																				"typeString": "struct MasterGrand.UserInfo storage pointer"
																			}
																		},
																		"id": 2320,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7040:6:13",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1754,
																		"src": "7035:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 2321,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2290,
																			"src": "7049:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																				"typeString": "struct MasterGrand.PoolInfo storage pointer"
																			}
																		},
																		"id": 2322,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7054:16:13",
																		"memberName": "accGrandPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1766,
																		"src": "7049:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7035:35:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2324,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7034:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653132",
															"id": 2325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7086:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1e12"
														},
														"src": "7034:56:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 2327,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "7105:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																"typeString": "struct MasterGrand.UserInfo storage pointer"
															}
														},
														"id": 2328,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7110:10:13",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1756,
														"src": "7105:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7034:86:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7016:104:13"
											},
											{
												"expression": {
													"id": 2338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2331,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "7131:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																"typeString": "struct MasterGrand.UserInfo storage pointer"
															}
														},
														"id": 2333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7136:6:13",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1754,
														"src": "7131:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2334,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2297,
																"src": "7145:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																	"typeString": "struct MasterGrand.UserInfo storage pointer"
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7150:6:13",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1754,
															"src": "7145:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 2336,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2274,
															"src": "7159:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7145:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7131:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2339,
												"nodeType": "ExpressionStatement",
												"src": "7131:35:13"
											},
											{
												"expression": {
													"id": 2351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2340,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "7176:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																"typeString": "struct MasterGrand.UserInfo storage pointer"
															}
														},
														"id": 2342,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7181:10:13",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1756,
														"src": "7176:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2343,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2297,
																			"src": "7195:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																				"typeString": "struct MasterGrand.UserInfo storage pointer"
																			}
																		},
																		"id": 2344,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7200:6:13",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1754,
																		"src": "7195:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 2345,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2290,
																			"src": "7209:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																				"typeString": "struct MasterGrand.PoolInfo storage pointer"
																			}
																		},
																		"id": 2346,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7214:16:13",
																		"memberName": "accGrandPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1766,
																		"src": "7209:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7195:35:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2348,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7194:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653132",
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7234:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1e12"
														},
														"src": "7194:44:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7176:62:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2352,
												"nodeType": "ExpressionStatement",
												"src": "7176:62:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2356,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7268:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7272:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7268:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2358,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2318,
															"src": "7280:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2353,
															"name": "Grand",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "7249:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GrandToken_$1742",
																"typeString": "contract GrandToken"
															}
														},
														"id": 2355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7255:12:13",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1040,
														"src": "7249:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7249:39:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2360,
												"nodeType": "ExpressionStatement",
												"src": "7249:39:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2366,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7324:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7328:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7324:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2368,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2274,
															"src": "7336:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2361,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2290,
																"src": "7298:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																	"typeString": "struct MasterGrand.PoolInfo storage pointer"
																}
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7303:7:13",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1760,
															"src": "7298:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														"id": 2365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7311:12:13",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1040,
														"src": "7298:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7298:46:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2370,
												"nodeType": "ExpressionStatement",
												"src": "7298:46:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2372,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7369:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7373:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7369:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2376,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2290,
																		"src": "7389:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																			"typeString": "struct MasterGrand.PoolInfo storage pointer"
																		}
																	},
																	"id": 2377,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7394:7:13",
																	"memberName": "lpToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1760,
																	"src": "7389:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7381:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7381:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7381:21:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2379,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "7404:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2380,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2274,
															"src": "7410:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2371,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1825,
														"src": "7360:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7360:58:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2382,
												"nodeType": "EmitStatement",
												"src": "7355:63:13"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 2384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "6685:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "6702:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "6694:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6694:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6716:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "6708:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6708:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6693:31:13"
									},
									"returnParameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6734:0:13"
									},
									"scope": 2447,
									"src": "6676:749:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2445,
										"nodeType": "Block",
										"src": "7543:365:13",
										"statements": [
											{
												"assignments": [
													2391
												],
												"declarations": [
													{
														"constant": false,
														"id": 2391,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "7570:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2445,
														"src": "7553:21:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
															"typeString": "struct MasterGrand.PoolInfo"
														},
														"typeName": {
															"id": 2390,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2389,
																"name": "PoolInfo",
																"nameLocations": [
																	"7553:8:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1767,
																"src": "7553:8:13"
															},
															"referencedDeclaration": 1767,
															"src": "7553:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																"typeString": "struct MasterGrand.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2395,
												"initialValue": {
													"baseExpression": {
														"id": 2392,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "7577:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1767_storage_$dyn_storage",
															"typeString": "struct MasterGrand.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2394,
													"indexExpression": {
														"id": 2393,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2386,
														"src": "7586:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7577:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1767_storage",
														"typeString": "struct MasterGrand.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7553:38:13"
											},
											{
												"assignments": [
													2398
												],
												"declarations": [
													{
														"constant": false,
														"id": 2398,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7618:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2445,
														"src": "7601:21:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
															"typeString": "struct MasterGrand.UserInfo"
														},
														"typeName": {
															"id": 2397,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2396,
																"name": "UserInfo",
																"nameLocations": [
																	"7601:8:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1757,
																"src": "7601:8:13"
															},
															"referencedDeclaration": 1757,
															"src": "7601:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																"typeString": "struct MasterGrand.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2405,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2399,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "7625:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1757_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct MasterGrand.UserInfo storage ref))"
															}
														},
														"id": 2401,
														"indexExpression": {
															"id": 2400,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2386,
															"src": "7634:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7625:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1757_storage_$",
															"typeString": "mapping(address => struct MasterGrand.UserInfo storage ref)"
														}
													},
													"id": 2404,
													"indexExpression": {
														"expression": {
															"id": 2402,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7640:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7644:6:13",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7640:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7625:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1757_storage",
														"typeString": "struct MasterGrand.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7601:50:13"
											},
											{
												"assignments": [
													2407
												],
												"declarations": [
													{
														"constant": false,
														"id": 2407,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "7670:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2445,
														"src": "7662:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2406,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7662:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2410,
												"initialValue": {
													"expression": {
														"id": 2408,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2398,
														"src": "7679:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
															"typeString": "struct MasterGrand.UserInfo storage pointer"
														}
													},
													"id": 2409,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7684:6:13",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1754,
													"src": "7679:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7662:28:13"
											},
											{
												"assignments": [
													2412
												],
												"declarations": [
													{
														"constant": false,
														"id": 2412,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "7708:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2445,
														"src": "7700:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2411,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7700:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2415,
												"initialValue": {
													"expression": {
														"id": 2413,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2398,
														"src": "7717:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
															"typeString": "struct MasterGrand.UserInfo storage pointer"
														}
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7722:10:13",
													"memberName": "rewardDebt",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1756,
													"src": "7717:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7700:32:13"
											},
											{
												"expression": {
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2416,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2398,
															"src": "7743:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																"typeString": "struct MasterGrand.UserInfo storage pointer"
															}
														},
														"id": 2418,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7748:6:13",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1754,
														"src": "7743:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7757:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7743:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2421,
												"nodeType": "ExpressionStatement",
												"src": "7743:15:13"
											},
											{
												"expression": {
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2422,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2398,
															"src": "7768:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1757_storage_ptr",
																"typeString": "struct MasterGrand.UserInfo storage pointer"
															}
														},
														"id": 2424,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7773:10:13",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1756,
														"src": "7768:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7786:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7768:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2427,
												"nodeType": "ExpressionStatement",
												"src": "7768:19:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2433,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7824:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7828:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7824:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2435,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "7836:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2428,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2391,
																"src": "7798:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1767_storage_ptr",
																	"typeString": "struct MasterGrand.PoolInfo storage pointer"
																}
															},
															"id": 2431,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7803:7:13",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1760,
															"src": "7798:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														"id": 2432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7811:12:13",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1040,
														"src": "7798:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7798:45:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2437,
												"nodeType": "ExpressionStatement",
												"src": "7798:45:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2439,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7876:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7880:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7876:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2441,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2386,
															"src": "7888:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2442,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "7894:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2438,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1833,
														"src": "7858:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7858:43:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2444,
												"nodeType": "EmitStatement",
												"src": "7853:48:13"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 2446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nameLocation": "7502:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7528:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "7520:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7520:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7519:14:13"
									},
									"returnParameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7543:0:13"
									},
									"scope": 2447,
									"src": "7493:415:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2448,
							"src": "377:7533:13",
							"usedErrors": [
								13,
								18,
								1007
							],
							"usedEvents": [
								24,
								1815,
								1825,
								1833
							]
						}
					],
					"src": "33:7877:13"
				},
				"id": 13
			}
		}
	}
}